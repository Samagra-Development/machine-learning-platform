[
  {
    "id": 6,
    "created_on": "2020-02-20 06:43:18",
    "title": "Comparison between YOLO and RCNN on real world videos",
    "description": "Bringing theory to experiment is cool. We can easily train models in colab and find the results in minutes.",
    "tag": "computer-vision"
  },
  {
    "id": 7,
    "created_on": "2020-02-20 06:47:21",
    "title": "Show, Infer & Tell: Contextual Inference for Creative Captioning",
    "description": "The beauty of the work lies in the way it architects the fundamental idea that humans look at the overall image and then individual pieces of it.\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 9,
    "created_on": "2020-02-24 16:24:45",
    "title": "Awesome Graph Classification",
    "description": "A collection of important graph embedding, classification and representation learning papers with implementations.",
    "tag": "graph-learning"
  },
  {
    "id": 15,
    "created_on": "2020-02-28 23:55:26",
    "title": "Awesome Monte Carlo Tree Search",
    "description": "A curated list of Monte Carlo tree search papers with implementations. ",
    "tag": "reinforcement-learning"
  },
  {
    "id": 19,
    "created_on": "2020-03-03 13:54:31",
    "title": "Diffusion to Vector",
    "description": "Reference implementation of Diffusion2Vec (Complenet 2018) built on Gensim and NetworkX. ",
    "tag": "graph-learning"
  },
  {
    "id": 25,
    "created_on": "2020-03-07 23:04:31",
    "title": "AttentionWalk",
    "description": "A PyTorch Implementation of \"Watch Your Step: Learning Node Embeddings via Graph Attention\" (NeurIPS 2018). ",
    "tag": "graph-learning"
  },
  {
    "id": 26,
    "created_on": "2020-03-07 23:11:58",
    "title": "Graph Wavelet Neural Network",
    "description": "A PyTorch implementation of \"Graph Wavelet Neural Network\" (ICLR 2019) ",
    "tag": "graph-learning"
  },
  {
    "id": 27,
    "created_on": "2020-03-07 23:18:15",
    "title": "APPNP and PPNP",
    "description": "A PyTorch implementation of \"Predict then Propagate: Graph Neural Networks meet Personalized PageRank\" (ICLR 2019). ",
    "tag": "graph-learning"
  },
  {
    "id": 28,
    "created_on": "2020-03-07 23:23:46",
    "title": "Attributed Social Network Embedding",
    "description": "A sparsity aware and memory efficient implementation of \"Attributed Social Network Embedding\" (TKDE 2018). ",
    "tag": "graph-learning"
  },
  {
    "id": 29,
    "created_on": "2020-03-07 23:45:38",
    "title": "Signed Graph Convolutional Network",
    "description": "A PyTorch implementation of \"Signed Graph Convolutional Network\" (ICDM 2018). ",
    "tag": "graph-learning"
  },
  {
    "id": 44,
    "created_on": "2020-03-08 00:32:58",
    "title": "Capsule Graph Neural Network",
    "description": "A PyTorch implementation of \"Capsule Graph Neural Network\" (ICLR 2019).",
    "tag": "graph-learning"
  },
  {
    "id": 45,
    "created_on": "2020-03-08 00:39:08",
    "title": "SimGNN",
    "description": "A PyTorch implementation of \"SimGNN: A Neural Network Approach to Fast Graph Similarity Computation\" (WSDM 2019). ",
    "tag": "graph-learning"
  },
  {
    "id": 61,
    "created_on": "2020-03-16 17:35:22",
    "title": "Using JAX to Improve Separable Image Filters",
    "description": "Optimizing the filters to improve the filtered images for computer vision tasks.",
    "tag": "computer-vision"
  },
  {
    "id": 65,
    "created_on": "2020-03-19 18:42:05",
    "title": "Coloring Greyscale Images",
    "description": "Coloring black and white images with neural networks.",
    "tag": "computer-vision"
  },
  {
    "id": 67,
    "created_on": "2020-03-19 19:04:43",
    "title": "Fruit Detection using Convolution Neural Networks in TensorFlow",
    "description": "Trained a Convolutional Neural Network Model to predict fruits of over 100+ Classes (types) with a training accuracy of over 95%, and testing accuracy of over 9",
    "tag": "computer-vision"
  },
  {
    "id": 73,
    "created_on": "2020-03-19 23:45:14",
    "title": "Face Verification",
    "description": "Implementation of Siamese Neural network model used for face verification. The dataset used for this task is IMDB-WIKI-face images Dataset.",
    "tag": "computer-vision"
  },
  {
    "id": 77,
    "created_on": "2020-03-20 03:23:27",
    "title": "Sign Language Interpreter using Deep Learning",
    "description": "A sign language interpreter using live video feed from the camera. The project was completed in 24 hours as part of HackUNT-19, the University of North Texas's ",
    "tag": "computer-vision"
  },
  {
    "id": 78,
    "created_on": "2020-03-20 03:32:09",
    "title": "The Illustrated Self-Supervised Learning",
    "description": "A visual introduction to self-supervised learning methods in Computer Vision",
    "tag": "computer-vision"
  },
  {
    "id": 80,
    "created_on": "2020-03-20 05:59:32",
    "title": "NeRF: Neural Radiance Fields",
    "description": "Representing scenes as neural radiance fields for view synthesis.",
    "tag": "computer-vision"
  },
  {
    "id": 81,
    "created_on": "2020-03-20 06:07:56",
    "title": "GradCAM for the BreaKHis Dataset",
    "description": "An NBDev package for fine-tuning ResNets to visualize gradient-weighted class activation for the BreaKHis dataset.",
    "tag": "computer-vision"
  },
  {
    "id": 84,
    "created_on": "2020-03-20 15:18:43",
    "title": "Mention Classifier",
    "description": "Category prediction model\r\nThis repo contains AllenNLP model for prediction of Named Entity categories by its mentions.",
    "tag": "natural-language-processing"
  },
  {
    "id": 85,
    "created_on": "2020-03-20 17:35:59",
    "title": "Message Passing GNNs C++",
    "description": "C++ implementation using Eigen for the forward pass of Graph Convolutional Neural Networks.",
    "tag": "graph-learning"
  },
  {
    "id": 89,
    "created_on": "2020-03-20 18:17:31",
    "title": "Rethinking Batch Normalization in Transformers",
    "description": "We found that NLP batch statistics exhibit large variance throughout training, which leads to poor BN performance.",
    "tag": "natural-language-processing"
  },
  {
    "id": 91,
    "created_on": "2020-03-20 18:30:04",
    "title": "Pytest Board",
    "description": "Continuous pytest runner with awesome visualization.",
    "tag": "mlops"
  },
  {
    "id": 92,
    "created_on": "2020-03-20 18:43:50",
    "title": "Image Spam Buster - Kreate Hackathon",
    "description": "\"Spam Buster\" for user generated IMAGE content.",
    "tag": "computer-vision"
  },
  {
    "id": 98,
    "created_on": "2020-03-20 19:16:43",
    "title": "Bachelorette Predictor",
    "description": "Predict the Bachelorette winners from profile images.",
    "tag": "computer-vision"
  },
  {
    "id": 99,
    "created_on": "2020-03-20 21:32:14",
    "title": "Gender Change of People's Face using CycleGAN",
    "description": "CycleGAN architecture in Keras and train the model with CelebA faces dataset to perform gender change on people's faces.",
    "tag": "computer-vision"
  },
  {
    "id": 101,
    "created_on": "2020-03-21 04:19:04",
    "title": "ELECTRA: Pre-training Text Encoders as Discriminators",
    "description": "PyTorch implementation of the electra model from the paper: ELECTRA - Pre-training Text Encoders as Discriminators Rather Than Generators",
    "tag": "natural-language-processing"
  },
  {
    "id": 107,
    "created_on": "2020-03-21 23:09:03",
    "title": "Plant Fruit Classifier",
    "description": "Building a world-class image classifier model with a custom dataset.",
    "tag": "computer-vision"
  },
  {
    "id": 108,
    "created_on": "2020-03-21 23:17:38",
    "title": "Tuned ALBERT (ensemble model)",
    "description": "Top 6 in Squad 2.0",
    "tag": "natural-language-processing"
  },
  {
    "id": 109,
    "created_on": "2020-03-21 23:25:33",
    "title": "iyasai: Book Recommendation System",
    "description": "Recommender system for books and stories that could help you and your loved ones lift up your mood whenever you are facing stress or unpleasant situations.",
    "tag": "natural-language-processing"
  },
  {
    "id": 112,
    "created_on": "2020-03-21 23:58:46",
    "title": "Learning to See before Learning to Act: Visual Pre-training",
    "description": "We find that pre-training on vision tasks significantly improves generalization and sample efficiency for learning to manipulate objects.",
    "tag": "computer-vision"
  },
  {
    "id": 115,
    "created_on": "2020-03-22 01:26:14",
    "title": "SOLT: Data Augmentation for Deep Learning",
    "description": "Data augmentation library for Deep Learning, which supports images, segmentation masks, labels and key points.",
    "tag": "computer-vision"
  },
  {
    "id": 116,
    "created_on": "2020-03-22 01:37:27",
    "title": "PCDet: 3D Point Cloud Detection",
    "description": "PCDet Toolbox in PyTorch for 3D Object Detection from Point Cloud",
    "tag": "computer-vision"
  },
  {
    "id": 117,
    "created_on": "2020-03-22 01:47:09",
    "title": "SiamFC++: Towards Robust and Accurate Visual Tracking",
    "description": "Implementation of a series of basic algorithms which is useful for video understanding, including Single Object Tracking (SOT), Video Object Segmentation (VOS).",
    "tag": "computer-vision"
  },
  {
    "id": 118,
    "created_on": "2020-03-22 21:46:52",
    "title": "Sinext",
    "description": "Sign language to text with OpenCV and MNIST sign-language dataset",
    "tag": "computer-vision"
  },
  {
    "id": 120,
    "created_on": "2020-03-24 04:38:08",
    "title": "Gliding Vertex on Horizontal Bounding Box for Object Detection",
    "description": "Gliding vertex on the horizontal bounding box for multi-oriented object detection.",
    "tag": "computer-vision"
  },
  {
    "id": 121,
    "created_on": "2020-03-24 04:56:38",
    "title": "Deep Reinforcement Learning in TensorFlow2",
    "description": "deep-rl-tf2 is a repository that implements a variety of polular Deep-RL algorithms using TF2. The key to this repo is an easy to understand code. ",
    "tag": "reinforcement-learning"
  },
  {
    "id": 122,
    "created_on": "2020-03-24 17:51:35",
    "title": "Custom Classifier on Top of Bert-like Language Model",
    "description": "Take pre-trained language model and build custom classifier on top of it.",
    "tag": "natural-language-processing"
  },
  {
    "id": 123,
    "created_on": "2020-03-24 18:20:55",
    "title": "Using Different Decoding Methods for LM with Transformers",
    "description": "A look at different decoding methods for generate subsequent tokens in language modeling.",
    "tag": "natural-language-processing"
  },
  {
    "id": 124,
    "created_on": "2020-03-24 21:12:12",
    "title": "Unsupervised Toolbox",
    "description": "Unsupervised learning Tool box : A micro framework for State of the Art Methods and models for unsupervised learning for NLU / NLG\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 126,
    "created_on": "2020-03-25 15:05:27",
    "title": "Unet Implementation is Keras with GPU",
    "description": "Vector Map generation from aerial imagery using deep learning GeoSpatial UNET",
    "tag": "computer-vision"
  },
  {
    "id": 128,
    "created_on": "2020-03-25 15:21:34",
    "title": "Multimodal Brain Tumor Segmentation",
    "description": "Segmentation of gliomas in pre-operative MRI scans. Use the provided clinically-acquired training data to produce segmentation labels.",
    "tag": "computer-vision"
  },
  {
    "id": 130,
    "created_on": "2020-03-25 16:55:31",
    "title": "Gymnast Pose Analysis",
    "description": "Pose modelling for gymnasts using open-pose and open-cv.\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 131,
    "created_on": "2020-03-25 17:00:54",
    "title": "EfficientDet: Scalable and Efficient Object Detection",
    "description": "Implementation EfficientDet: Scalable and Efficient Object Detection in PyTorch.",
    "tag": "computer-vision"
  },
  {
    "id": 133,
    "created_on": "2020-03-25 20:21:26",
    "title": "A Survey of Long-Term Context in Transformers",
    "description": "Over the past two years the NLP community has developed a veritable zoo of methods to combat expensive multi-head self-attention.",
    "tag": "natural-language-processing"
  },
  {
    "id": 136,
    "created_on": "2020-03-26 17:22:36",
    "title": "Finetune: Scikit-learn Style Model Finetuning for NLP",
    "description": "Finetune is a library that allows users to leverage state-of-the-art pretrained NLP models for a wide variety of downstream tasks.",
    "tag": "natural-language-processing"
  },
  {
    "id": 137,
    "created_on": "2020-03-27 14:39:53",
    "title": "Debugging Neural Networks with PyTorch and W&B",
    "description": "A closer look at debugging common issues when training neural networks.",
    "tag": "mlops"
  },
  {
    "id": 138,
    "created_on": "2020-03-27 14:50:02",
    "title": "BachGAN: High-Res Image Synthesis from Salient Object Layout",
    "description": "We propose a new task towards more practical application for image generation - high-quality image synthesis from salient object layout. ",
    "tag": "computer-vision"
  },
  {
    "id": 140,
    "created_on": "2020-03-28 07:49:03",
    "title": "Visual Paper Summary: ALBERT(A Lite BERT)",
    "description": "An illustrated summary of ALBERT paper and how it improves BERT and makes it resource efficient",
    "tag": "natural-language-processing"
  },
  {
    "id": 141,
    "created_on": "2020-03-28 17:41:42",
    "title": "First Order Motion Model for Image Animation",
    "description": "Generating a video sequence so that an object in a source image is animated according to the motion of a driving video.",
    "tag": "computer-vision"
  },
  {
    "id": 142,
    "created_on": "2020-03-28 17:49:20",
    "title": "TorchIO:  Medical Image Processing in Deep Learning and PyTorch",
    "description": "Tools for medical image processing in deep learning and PyTorch",
    "tag": "computer-vision"
  },
  {
    "id": 144,
    "created_on": "2020-03-29 18:23:06",
    "title": "Finetuning Transformers with JAX + Haiku",
    "description": "Walking through a port of the RoBERTa pre-trained model to JAX + Haiku, then fine-tuning the model to solve a downstream task.",
    "tag": "natural-language-processing"
  },
  {
    "id": 145,
    "created_on": "2020-03-30 04:14:44",
    "title": "Controllable Person Image Synthesis with Attribute-Decomposed GAN",
    "description": "A novel generative model for controllable person image synthesis, which can produce realistic person images with desired human attributes.",
    "tag": "computer-vision"
  },
  {
    "id": 147,
    "created_on": "2020-03-30 05:39:57",
    "title": "Back Translation for Text Augmentation with Google Sheets",
    "description": "Learn how to augment existing labeled text data for free using Google Sheets.",
    "tag": "natural-language-processing"
  },
  {
    "id": 148,
    "created_on": "2020-03-30 14:13:46",
    "title": "An Illustrated Guide to Graph Neural Networks",
    "description": "A breakdown of the inner workings of GNNs.",
    "tag": "graph-learning"
  },
  {
    "id": 150,
    "created_on": "2020-04-01 08:26:46",
    "title": "The Illustrated FixMatch for Semi-Supervised Learning",
    "description": "Learn how to leverage unlabeled data using FixMatch for semi-supervised learning",
    "tag": "computer-vision"
  },
  {
    "id": 152,
    "created_on": "2020-04-01 15:38:58",
    "title": "A Two-Step Graph Convolutional Decoder for Molecule Generation",
    "description": "A simple auto-encoder framework for molecule generation.",
    "tag": "graph-learning"
  },
  {
    "id": 157,
    "created_on": "2020-04-03 01:56:32",
    "title": "TransMoMo: Invariance-Driven Unsupervised Motion Retargeting",
    "description": "A lightweight video motion retargeting approach that is capable of transferring motion of a person in a source video realistically to another video of a target ",
    "tag": "computer-vision"
  },
  {
    "id": 158,
    "created_on": "2020-04-03 04:41:07",
    "title": "Tracking Objects as Points",
    "description": "Simultaneous object detection and tracking using center points.",
    "tag": "computer-vision"
  },
  {
    "id": 159,
    "created_on": "2020-04-03 14:57:11",
    "title": "Drifter-ML",
    "description": "A machine learning testing framework for sklearn and pandas.  The goal is to help folks assess whether things have changed over time.",
    "tag": "mlops"
  },
  {
    "id": 162,
    "created_on": "2020-04-03 20:17:50",
    "title": "Natural Language Processing News",
    "description": "Get the highlights from Natural Language Processing & Machine Learning research & industry straight to your inbox every month.",
    "tag": "natural-language-processing"
  },
  {
    "id": 163,
    "created_on": "2020-04-03 20:21:13",
    "title": "NLP Newsletter",
    "description": "Democratizing Artificial Intelligence Research, Education, and Technologies.",
    "tag": "natural-language-processing"
  },
  {
    "id": 168,
    "created_on": "2020-04-04 17:54:28",
    "title": "Self-Supervised Scene De-occlusion",
    "description": "We investigate the problem of scene de-occlusion, which aims to recover the underlying occlusion ordering and complete the invisible parts of occluded objects.",
    "tag": "computer-vision"
  },
  {
    "id": 173,
    "created_on": "2020-04-05 03:00:05",
    "title": "Design Patterns for Production NLP Systems",
    "description": "Designs and tips for designing NLP production systems.",
    "tag": "natural-language-processing"
  },
  {
    "id": 181,
    "created_on": "2020-04-05 14:56:34",
    "title": "Talking-Heads Attention",
    "description": "A variation on multi-head attention which includes linear projections across the attention-heads dimension, immediately before and after the softmax operation.",
    "tag": "natural-language-processing"
  },
  {
    "id": 183,
    "created_on": "2020-04-05 17:50:10",
    "title": "What does a CNN see?",
    "description": "First super clean notebook showcasing @TensorFlow 2.0. An example of end-to-end DL with interpretability.",
    "tag": "computer-vision"
  },
  {
    "id": 218,
    "created_on": "2020-04-06 11:29:57",
    "title": "Distributional RL using TensorFlow2",
    "description": "\ud83d\udc33 Implementation of various Distributional Reinforcement Learning Algorithms using TensorFlow2.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 219,
    "created_on": "2020-04-06 14:10:22",
    "title": "Natural Language Processing: Pretraining - d2l",
    "description": "An interactive deep learning book with code, math, and discussions, based on the NumPy interface.",
    "tag": "natural-language-processing"
  },
  {
    "id": 220,
    "created_on": "2020-04-06 15:19:59",
    "title": "Module 2: Convolutional Neural Networks - CS231n ",
    "description": "In Lecture 5 we move from fully-connected neural networks to convolutional neural networks.",
    "tag": "computer-vision"
  },
  {
    "id": 224,
    "created_on": "2020-04-06 16:48:44",
    "title": "Understanding Convolutional Neural Networks for NLP",
    "description": "More recently we\u2019ve also started to apply CNNs to problems in Natural Language Processing and gotten some interesting results.",
    "tag": "natural-language-processing"
  },
  {
    "id": 234,
    "created_on": "2020-04-06 17:42:52",
    "title": "An Overview of Semantic Image Segmentation",
    "description": "Image segmentation is a computer vision task in which we label specific regions of an image according to what's being shown.",
    "tag": "computer-vision"
  },
  {
    "id": 237,
    "created_on": "2020-04-06 18:02:48",
    "title": "Common Architectures in Convolutional Neural Networks",
    "description": "In this post, I'll discuss commonly used architectures for convolutional networks. ",
    "tag": "computer-vision"
  },
  {
    "id": 238,
    "created_on": "2020-04-06 18:37:33",
    "title": "Googletrans",
    "description": "Googletrans: Free and Unlimited Google translate API for Python. Translates totally free of charge.",
    "tag": "natural-language-processing"
  },
  {
    "id": 239,
    "created_on": "2020-04-06 18:39:48",
    "title": "Prophet: Forecasting At Scale",
    "description": "Tool for producing high quality forecasts for time series data that has multiple seasonality with linear or non-linear growth.",
    "tag": "time-series"
  },
  {
    "id": 249,
    "created_on": "2020-04-06 19:20:12",
    "title": "makesense.ai",
    "description": "Free to use online tool for labelling photos.",
    "tag": "computer-vision"
  },
  {
    "id": 250,
    "created_on": "2020-04-06 19:24:06",
    "title": "Doccano",
    "description": "Open source text annotation tool for machine learning practitioner. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 251,
    "created_on": "2020-04-06 19:28:58",
    "title": "BRAT: Rapid Annotation Tool",
    "description": "BRAT (brat rapid annotation tool) is based on the stav visualiser which was originally made in order to visualise BioNLP'11 Shared Task data.",
    "tag": "natural-language-processing"
  },
  {
    "id": 252,
    "created_on": "2020-04-06 20:23:46",
    "title": "Word Embeddings",
    "description": "This tutorial introduces word embeddings. It contains complete code to train word embeddings from scratch on a small dataset.",
    "tag": "natural-language-processing"
  },
  {
    "id": 253,
    "created_on": "2020-04-06 20:26:27",
    "title": "On Word Embeddings",
    "description": "This post presents the most well-known models for learning word embeddings based on language modeling.",
    "tag": "natural-language-processing"
  },
  {
    "id": 254,
    "created_on": "2020-04-06 20:28:43",
    "title": "NLP for Developers: Word Embeddings | Rasa",
    "description": "In this video, Rasa Developer Advocate Rachael will talk about what word embeddings are, how they work, when they're used and some  common errors. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 255,
    "created_on": "2020-04-06 20:30:27",
    "title": "NLP for Developers: Transformers | Rasa",
    "description": "In this video, Rasa Developer Advocate Rachael will talk about what transformers are, how they work, when they're used and some  common errors. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 256,
    "created_on": "2020-04-06 20:42:05",
    "title": "A Visual Guide to Using BERT for the First Time",
    "description": "Tutorial for how to use a variant of BERT to classify sentences.",
    "tag": "natural-language-processing"
  },
  {
    "id": 257,
    "created_on": "2020-04-06 20:45:45",
    "title": "The Illustrated GPT-2 (Visualizing Transformer Language Models)",
    "description": "Visuals explaining the inner-workings of transformers.",
    "tag": "natural-language-processing"
  },
  {
    "id": 259,
    "created_on": "2020-04-06 20:51:58",
    "title": "The Illustrated Word2vec",
    "description": "In this post, we\u2019ll go over the concept of embedding, and the mechanics of generating embeddings with word2vec. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 260,
    "created_on": "2020-04-06 20:55:32",
    "title": "The Illustrated BERT, ELMo, and co.",
    "description": "How NLP cracked transfer learning.",
    "tag": "natural-language-processing"
  },
  {
    "id": 261,
    "created_on": "2020-04-06 21:00:34",
    "title": "The Illustrated Transformer",
    "description": "In this post, we will look at The Transformer \u2013 a model that uses attention to boost the speed with which these models can be trained.",
    "tag": "natural-language-processing"
  },
  {
    "id": 262,
    "created_on": "2020-04-06 21:11:40",
    "title": "Visualizing A Neural Machine Translation Model",
    "description": "Mechanics of seq2seq models with attention.",
    "tag": "natural-language-processing"
  },
  {
    "id": 264,
    "created_on": "2020-04-06 21:33:32",
    "title": "The Unreasonable Effectiveness of Recurrent Neural Networks",
    "description": "A close look at how RNNs are able to perform so well.",
    "tag": "natural-language-processing"
  },
  {
    "id": 268,
    "created_on": "2020-04-06 21:51:55",
    "title": "A Gentle Introduction to Text Summarization in Machine Learning",
    "description": "Text summarization is the technique for generating a concise and precise summary of voluminous texts while focusing on the sections that convey useful info.",
    "tag": "natural-language-processing"
  },
  {
    "id": 269,
    "created_on": "2020-04-06 22:46:54",
    "title": "Attention Mechanism",
    "description": "Main concepts behind Attention, including an implementation of a sequence-to-sequence Attention model, followed by the application of Attention in Transformers.",
    "tag": "natural-language-processing"
  },
  {
    "id": 270,
    "created_on": "2020-04-06 22:50:30",
    "title": "Attention? Attention!",
    "description": "In this post, we are gonna look into how attention was invented, and various attention mechanisms and models, such as transformer and SNAIL.",
    "tag": "natural-language-processing"
  },
  {
    "id": 271,
    "created_on": "2020-04-06 22:58:47",
    "title": "The Annotated Transformer",
    "description": "In this post I present an \u201cannotated\u201d version of the paper in the form of a line-by-line implementation. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 272,
    "created_on": "2020-04-06 23:38:26",
    "title": "The Annotated GPT-2",
    "description": "GPT-2 explained with visualization and PyTorch code.",
    "tag": "natural-language-processing"
  },
  {
    "id": 273,
    "created_on": "2020-04-06 23:41:52",
    "title": "Transformers - Hugging Face",
    "description": "\ud83e\udd17 Transformers: State-of-the-art Natural Language Processing for TensorFlow 2.0 and PyTorch. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 277,
    "created_on": "2020-04-07 00:30:33",
    "title": "Curriculum for Reinforcement Learning",
    "description": "Curriculum learning applied to reinforcement learning, with a few exceptions of supervised learning.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 278,
    "created_on": "2020-04-07 00:34:46",
    "title": "Self-Supervised Representation Learning",
    "description": "What if we can get labels for free for unlabelled data and train unsupervised dataset in a supervised manner? ",
    "tag": "computer-vision"
  },
  {
    "id": 279,
    "created_on": "2020-04-07 00:36:55",
    "title": "Evolution Strategies",
    "description": "Evolutionary algorithms refer to a division of population-based optimization algorithms inspired by natural selection. ",
    "tag": "reinforcement-learning"
  },
  {
    "id": 280,
    "created_on": "2020-04-07 00:38:25",
    "title": "Meta Reinforcement Learning",
    "description": "Explore cases when we try to \u201cmeta-learn\u201d Reinforcement Learning (RL) tasks by developing an agent that can solve unseen tasks fast and efficiently.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 281,
    "created_on": "2020-04-07 00:40:59",
    "title": "Generalized Language Models",
    "description": "Trend in large unsupervised pre-trained language models which have achieved amazing SOTA results on a variety of language tasks.",
    "tag": "natural-language-processing"
  },
  {
    "id": 284,
    "created_on": "2020-04-07 00:57:12",
    "title": "Policy Gradient Algorithms",
    "description": "In this post, we are going to look deep into policy gradient, why it works, and many new policy gradient algorithms proposed in recent years.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 285,
    "created_on": "2020-04-07 03:45:03",
    "title": "A (Long) Peek into Reinforcement Learning",
    "description": "In this post, we are gonna briefly go over the field of Reinforcement Learning (RL), from fundamental concepts to classic algorithms.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 286,
    "created_on": "2020-04-07 03:49:15",
    "title": "Object Detection for Dummies",
    "description": "We will go through several basic concepts, algorithms, and popular deep learning models for image processing and object detection.",
    "tag": "computer-vision"
  },
  {
    "id": 287,
    "created_on": "2020-04-07 03:59:53",
    "title": "Learning Word Embedding",
    "description": "This post introduces several models for learning word embedding and how their loss functions are designed for the purpose.",
    "tag": "natural-language-processing"
  },
  {
    "id": 290,
    "created_on": "2020-04-07 13:38:36",
    "title": "GANSpace: Discovering Interpretable GAN Controls",
    "description": "This paper describes a simple technique to analyze Generative Adversarial Networks (GANs) and create interpretable controls for image synthesis.",
    "tag": "computer-vision"
  },
  {
    "id": 291,
    "created_on": "2020-04-07 14:07:59",
    "title": "Kornia: Differentiable Computer Vision Library for PyTorch",
    "description": "Set of routines and differentiable modules to solve generic computer vision problems. ",
    "tag": "computer-vision"
  },
  {
    "id": 294,
    "created_on": "2020-04-07 15:36:13",
    "title": "PyTorch Geometric ",
    "description": "Geometric deep learning extension library for PyTorch.",
    "tag": "graph-learning"
  },
  {
    "id": 295,
    "created_on": "2020-04-07 15:40:00",
    "title": "DGL: Deep Graph Library",
    "description": "Python package built to ease deep learning on graph, on top of existing DL frameworks. ",
    "tag": "graph-learning"
  },
  {
    "id": 305,
    "created_on": "2020-04-07 20:00:37",
    "title": "Question Answering with a Fine-Tuned BERT",
    "description": "What does it mean for BERT to achieve \u201chuman-level performance on Question Answering\u201d?",
    "tag": "natural-language-processing"
  },
  {
    "id": 306,
    "created_on": "2020-04-07 20:07:28",
    "title": "BERT Research - Key Concepts & Sources",
    "description": "Video series on BERT's key concepts and sources.",
    "tag": "natural-language-processing"
  },
  {
    "id": 307,
    "created_on": "2020-04-07 20:11:29",
    "title": "GLUE Explained: Understanding BERT Through Benchmarks",
    "description": "In this post we take a look at an important NLP benchmark used to evaluate BERT and other transfer learning models!",
    "tag": "natural-language-processing"
  },
  {
    "id": 308,
    "created_on": "2020-04-07 23:22:18",
    "title": "TinyBERT",
    "description": "TinyBERT is 7.5x smaller and 9.4x faster on inference than BERT-base and achieves competitive performances in the tasks of natural language understanding.",
    "tag": "natural-language-processing"
  },
  {
    "id": 313,
    "created_on": "2020-04-08 00:02:27",
    "title": "NVIDIA Neural Modules: NeMo",
    "description": "A toolkit for conversational AI.",
    "tag": "natural-language-processing"
  },
  {
    "id": 314,
    "created_on": "2020-04-08 00:06:21",
    "title": "The Autonomous Learning Library",
    "description": "A PyTorch library for building deep reinforcement learning agents.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 315,
    "created_on": "2020-04-08 00:10:21",
    "title": "VoTT: Visual Object Tagging Tool",
    "description": "An electron app for building end to end Object Detection Models from Images and Videos.",
    "tag": "computer-vision"
  },
  {
    "id": 316,
    "created_on": "2020-04-08 00:12:26",
    "title": "Clinical BERT",
    "description": "Repository for Publicly Available Clinical BERT Embeddings",
    "tag": "natural-language-processing"
  },
  {
    "id": 317,
    "created_on": "2020-04-08 00:14:27",
    "title": "COCO Annotator",
    "description": "\u270f\ufe0f Web-based image segmentation tool for object detection, localization and key points.",
    "tag": "computer-vision"
  },
  {
    "id": 318,
    "created_on": "2020-04-08 00:16:55",
    "title": "Computer Vision Annotation Tool (CVAT)",
    "description": "Free, online, interactive video and image annotation tool for computer vision.",
    "tag": "computer-vision"
  },
  {
    "id": 319,
    "created_on": "2020-04-08 00:19:04",
    "title": "LabelImg",
    "description": "\ud83d\udd8d\ufe0f A graphical image annotation tool and label object bounding boxes in images.",
    "tag": "computer-vision"
  },
  {
    "id": 327,
    "created_on": "2020-04-08 14:16:28",
    "title": "How to Steal Modern NLP Systems with Gibberish?",
    "description": "It\u2019s possible to steal BERT-based models without any real training data, even using gibberish word sequences.",
    "tag": "natural-language-processing"
  },
  {
    "id": 328,
    "created_on": "2020-04-08 14:29:22",
    "title": "ProteinGCN: Protein model quality assessment using GCNs",
    "description": "Source code for the paper: ProteinGCN: Protein model quality assessment using Graph Convolutional Networks.",
    "tag": "graph-learning"
  },
  {
    "id": 334,
    "created_on": "2020-04-08 15:04:28",
    "title": "BioWordVec & BioSentVec",
    "description": "Pre-trained embeddings for biomedical words and sentences",
    "tag": "natural-language-processing"
  },
  {
    "id": 335,
    "created_on": "2020-04-08 15:07:44",
    "title": "BioBERT: a pre-trained biomedical language representation model ",
    "description": "Code for fine-tuning BioBERT for biomedical text mining tasks such as biomedical NER, relation extraction, QA, etc.",
    "tag": "natural-language-processing"
  },
  {
    "id": 341,
    "created_on": "2020-04-08 15:42:56",
    "title": "How to Unit Test Machine Learning Code",
    "description": "Wouldn\u2019t suck to have to throw away perfectly good ideas because our implementations were buggy?",
    "tag": "mlops"
  },
  {
    "id": 343,
    "created_on": "2020-04-08 15:52:19",
    "title": "Machine Learning Systems Design",
    "description": "Designing a machine learning system.",
    "tag": "mlops"
  },
  {
    "id": 344,
    "created_on": "2020-04-08 16:11:28",
    "title": "Tokenizers",
    "description": "\ud83d\udca5Fast State-of-the-Art Tokenizers optimized for Research and Production.",
    "tag": "natural-language-processing"
  },
  {
    "id": 345,
    "created_on": "2020-04-08 16:14:23",
    "title": "HMTL: Hierarchical Multi-Task Learning",
    "description": "\ud83c\udf0a A State-of-the-Art neural network model for several NLP tasks based on PyTorch and AllenNLP",
    "tag": "natural-language-processing"
  },
  {
    "id": 347,
    "created_on": "2020-04-08 16:26:05",
    "title": "The State of Transfer Learning in NLP",
    "description": "This post expands on the NAACL 2019 tutorial on Transfer Learning in NLP. It highlights key insights and takeaways and provides updates based on recent work.",
    "tag": "natural-language-processing"
  },
  {
    "id": 349,
    "created_on": "2020-04-08 16:35:52",
    "title": "The Dark Secrets of BERT",
    "description": "How much of the linguistically interpretable self-attention patterns that are presumed to be its strength are actually used to solve downstream tasks?",
    "tag": "natural-language-processing"
  },
  {
    "id": 353,
    "created_on": "2020-04-08 17:08:41",
    "title": "Keras OCR",
    "description": "A packaged and flexible version of the CRAFT text detector and Keras CRNN recognition model. ",
    "tag": "computer-vision"
  },
  {
    "id": 364,
    "created_on": "2020-04-08 17:53:15",
    "title": "Named Entity Recognition Tagging",
    "description": "In this post, we go through an example from Natural Language Processing, in which we learn how to load text data and perform NER tagging for each token.",
    "tag": "natural-language-processing"
  },
  {
    "id": 372,
    "created_on": "2020-04-08 18:22:46",
    "title": "An introduction to Q-Learning: Reinforcement Learning",
    "description": "Q-Learning algorithm along with an implementation in Python using Numpy.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 378,
    "created_on": "2020-04-08 19:37:57",
    "title": "Ray",
    "description": "Ray is a fast and simple framework for building and running distributed applications.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 380,
    "created_on": "2020-04-08 21:05:06",
    "title": "Graph Nets",
    "description": "PyTorch Implementation and Explanation of Graph Representation Learning papers involving DeepWalk, GCN, GraphSAGE, ChebNet & GAT.",
    "tag": "graph-learning"
  },
  {
    "id": 384,
    "created_on": "2020-04-08 21:22:25",
    "title": "Visualizing Memorization in RNNs",
    "description": "Inspecting gradient magnitudes in context can be a powerful tool to see when recurrent units use short-term or long-term contextual understanding.",
    "tag": "natural-language-processing"
  },
  {
    "id": 388,
    "created_on": "2020-04-08 21:36:39",
    "title": "ConvNet Playground",
    "description": "An interactive visualization for exploring Convolutional Neural Networks applied to the task of semantic image search.",
    "tag": "computer-vision"
  },
  {
    "id": 392,
    "created_on": "2020-04-08 21:53:06",
    "title": "Embedding Projector",
    "description": "Visualization of high dimensional data, namely embeddings.",
    "tag": "natural-language-processing"
  },
  {
    "id": 395,
    "created_on": "2020-04-08 22:12:24",
    "title": "Word2Viz: Explore Word Analogies",
    "description": "Interactive visualization of word analogies in GloVe.",
    "tag": "natural-language-processing"
  },
  {
    "id": 397,
    "created_on": "2020-04-08 22:17:06",
    "title": "Image-to-Image Translation with Conditional Adversarial Networks",
    "description": "Tensorflow port of Image-to-Image Translation with Conditional Adversarial Nets",
    "tag": "computer-vision"
  },
  {
    "id": 401,
    "created_on": "2020-04-08 22:29:09",
    "title": "Quick, Draw",
    "description": "Can a neural network learn to recognize doodling?",
    "tag": "computer-vision"
  },
  {
    "id": 403,
    "created_on": "2020-04-08 22:44:04",
    "title": "A 2019 Guide to Speech Synthesis with Deep Learning",
    "description": "A look at recent deep learning based speech synthesis research and techniques.",
    "tag": "natural-language-processing"
  },
  {
    "id": 407,
    "created_on": "2020-04-08 23:00:02",
    "title": "AllenNLP",
    "description": "An open-source NLP research library, built on PyTorch.",
    "tag": "natural-language-processing"
  },
  {
    "id": 408,
    "created_on": "2020-04-08 23:03:13",
    "title": "FlashTorch",
    "description": "Visualization toolkit for neural networks in PyTorch",
    "tag": "computer-vision"
  },
  {
    "id": 410,
    "created_on": "2020-04-08 23:09:15",
    "title": "Frameworks for Machine Learning Model Management",
    "description": "This blog post will follow up by comparing three different tools developed to support reproducible machine learning model development.",
    "tag": "mlops"
  },
  {
    "id": 411,
    "created_on": "2020-04-08 23:11:09",
    "title": "W&B: Weights and Biases",
    "description": "Track model training at scale.",
    "tag": "mlops"
  },
  {
    "id": 414,
    "created_on": "2020-04-08 23:18:04",
    "title": "TensorBoard.dev ",
    "description": "Easily host, track, and share your ML experiments for free.",
    "tag": "mlops"
  },
  {
    "id": 415,
    "created_on": "2020-04-08 23:21:13",
    "title": "BertViz",
    "description": "Tool for visualizing attention in the Transformer model (BERT, GPT-2, Albert, XLNet, RoBERTa, CTRL, etc.)",
    "tag": "natural-language-processing"
  },
  {
    "id": 419,
    "created_on": "2020-04-09 00:41:03",
    "title": "Text Feature Selection for Causal Inference",
    "description": "Identifying the linguistic features that cause people to act a certain way after reading a text, regardless of confounding variables, is something people do.",
    "tag": "natural-language-processing"
  },
  {
    "id": 423,
    "created_on": "2020-04-09 00:57:49",
    "title": "3D Ken Burns Effect from a Single Image",
    "description": "Implementation of 3D Ken Burns Effect from a Single Image using PyTorch.",
    "tag": "computer-vision"
  },
  {
    "id": 424,
    "created_on": "2020-04-09 01:02:59",
    "title": "Sparse Sinkhorn Attention",
    "description": "A new efficient and sparse method for learning to attend based on differentiable sorting of internal representations.",
    "tag": "natural-language-processing"
  },
  {
    "id": 425,
    "created_on": "2020-04-09 01:41:48",
    "title": "Backtester",
    "description": "A backtesting framework for timeseries data.",
    "tag": "time-series"
  },
  {
    "id": 426,
    "created_on": "2020-04-09 16:37:10",
    "title": "The Transformer Family",
    "description": "This post presents how the vanilla Transformer can be improved for longer-term attention span, less memory and computation consumption, RL task solving, etc.",
    "tag": "natural-language-processing"
  },
  {
    "id": 427,
    "created_on": "2020-04-09 18:57:01",
    "title": "An Overview of Early Vision in InceptionV1",
    "description": "A guided tour of the first five layers of InceptionV1,\r\ntaxonomized into \u201cneuron groups.\u201d",
    "tag": "computer-vision"
  },
  {
    "id": 428,
    "created_on": "2020-04-10 04:57:53",
    "title": "AiLight: Automatic  Highlighting Using BERT",
    "description": "Automatically highlight pdfs using BERT embeddings and clustering. \r\nhttps://anishthite.github.io/ailight",
    "tag": "natural-language-processing"
  },
  {
    "id": 430,
    "created_on": "2020-04-10 15:28:43",
    "title": "Controlling Text Generation with Plug and Play Language Models",
    "description": "This article discusses an alternative approach to controlled text generation, titled the Plug and Play Language Model (PPLM).",
    "tag": "natural-language-processing"
  },
  {
    "id": 431,
    "created_on": "2020-04-10 15:35:00",
    "title": "Genomic ULMFiT",
    "description": "ULMFiT for Genomic Sequence Data",
    "tag": "natural-language-processing"
  },
  {
    "id": 432,
    "created_on": "2020-04-10 15:39:29",
    "title": "Self-Supervised Learning and Computer Vision",
    "description": "So, what do you do if there are no pre-trained models in your domain? ",
    "tag": "computer-vision"
  },
  {
    "id": 434,
    "created_on": "2020-04-10 15:51:52",
    "title": "scispaCy",
    "description": "A full spaCy pipeline and models for scientific/biomedical documents.",
    "tag": "natural-language-processing"
  },
  {
    "id": 437,
    "created_on": "2020-04-10 17:14:11",
    "title": "Pruning Bert to Accelerate Inference",
    "description": "After previously discussing various ways of accelerating models like BERT, in this blog post we empirically evaluate the pruning approach.",
    "tag": "natural-language-processing"
  },
  {
    "id": 438,
    "created_on": "2020-04-10 17:26:39",
    "title": "Compressing Bert for Faster Prediction",
    "description": "In this blog post, we discuss ways to make huge models like BERT smaller and faster. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 439,
    "created_on": "2020-04-10 17:33:38",
    "title": "Universal Adversarial Triggers for Attacking and Analyzing NLP",
    "description": "We create short phrases that cause a specific model prediction when concatenated to \ud835\ude22\ud835\ude2f\ud835\ude3a input from a dataset. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 440,
    "created_on": "2020-04-10 17:39:19",
    "title": "lazynlp",
    "description": "Library to scrape and clean web pages to create massive datasets.",
    "tag": "natural-language-processing"
  },
  {
    "id": 443,
    "created_on": "2020-04-10 17:51:39",
    "title": "AllenNLP Interpret",
    "description": "A Framework for Explaining Predictions of NLP Models",
    "tag": "natural-language-processing"
  },
  {
    "id": 445,
    "created_on": "2020-04-10 18:00:50",
    "title": "Natural Language Processing With spaCy in Python",
    "description": "A comprehensive guide to NLP with spaCy.",
    "tag": "natural-language-processing"
  },
  {
    "id": 446,
    "created_on": "2020-04-10 18:45:15",
    "title": "Tips for Successfully Training Transformers on Small Datasets",
    "description": "It turns out that you can easily train transformers on small datasets when you use tricks (and have the patience to train a very long time).",
    "tag": "natural-language-processing"
  },
  {
    "id": 448,
    "created_on": "2020-04-10 19:14:59",
    "title": "\ud83e\udd84 How to build a SOTA Conversational AI with Transfer Learning",
    "description": "Train a dialog agent leveraging transfer Learning from an OpenAI GPT and GPT-2 Transformer language model.",
    "tag": "natural-language-processing"
  },
  {
    "id": 451,
    "created_on": "2020-04-10 20:10:28",
    "title": "Evaluation Metrics for Language Modeling",
    "description": "In this article, we will focus on traditional intrinsic metrics that are extremely useful during the process of training the language model itself. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 452,
    "created_on": "2020-04-10 20:18:20",
    "title": "CS224n: Natural Language Processing with Deep Learning",
    "description": "In this course, students will gain a thorough introduction to cutting-edge research in Deep Learning for NLP.",
    "tag": "natural-language-processing"
  },
  {
    "id": 453,
    "created_on": "2020-04-10 20:23:21",
    "title": "CS231n: Convolutional Neural Networks for Visual Recognition",
    "description": "Deep dive into details of the deep learning architectures with a focus on learning end-to-end models for these tasks, particularly image classification.",
    "tag": "computer-vision"
  },
  {
    "id": 454,
    "created_on": "2020-04-10 20:27:12",
    "title": "All The Ways You Can Compress BERT",
    "description": "In this post I\u2019ll list and briefly taxonomize all the papers I\u2019ve seen compressing BERT. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 455,
    "created_on": "2020-04-10 20:31:09",
    "title": "Illustrated: Self-Attention",
    "description": "Step-by-step guide to self-attention with illustrations and code.",
    "tag": "natural-language-processing"
  },
  {
    "id": 458,
    "created_on": "2020-04-10 20:58:41",
    "title": "Limitations of Deep Learning for Vision, and How We Might Fix The",
    "description": "This is an opinion paper about the strengths and weaknesses of Deep Nets for vision.",
    "tag": "computer-vision"
  },
  {
    "id": 459,
    "created_on": "2020-04-10 21:05:32",
    "title": "Beyond the Pixel Plane: Sensing and Learning in 3d",
    "description": "Recent deep learning techniques that enable 3D object classification and semantic segmentation.",
    "tag": "computer-vision"
  },
  {
    "id": 462,
    "created_on": "2020-04-11 16:52:35",
    "title": "A Visual Guide to Self-Labelling Images",
    "description": "A self-supervised method to generate labels via simultaneous clustering and representation learning",
    "tag": "computer-vision"
  },
  {
    "id": 465,
    "created_on": "2020-04-13 02:18:51",
    "title": "3D Photography using Context-aware Layered Depth Inpainting",
    "description": "A multi-layer representation for novel view synthesis that contains hallucinated color and depth structures in regions occluded in the original view. ",
    "tag": "computer-vision"
  },
  {
    "id": 466,
    "created_on": "2020-04-13 18:48:40",
    "title": "Tokenizers: How Machines Read",
    "description": "A survey of different tokenization strategies in NLP.",
    "tag": "natural-language-processing"
  },
  {
    "id": 467,
    "created_on": "2020-04-13 19:43:35",
    "title": "Practical Text Classification With Python and Keras",
    "description": "You will get a grasp of current advancements of (deep) neural networks and how they can be applied to text.",
    "tag": "natural-language-processing"
  },
  {
    "id": 468,
    "created_on": "2020-04-13 19:45:46",
    "title": "Text Classification With Torchtext",
    "description": "This example shows how to train a supervised learning algorithm for classification using one of these TextClassification datasets.",
    "tag": "natural-language-processing"
  },
  {
    "id": 469,
    "created_on": "2020-04-13 21:17:44",
    "title": "Understanding Text With Bert",
    "description": "Building a machine reading comprehension system using the latest advances in deep learning for NLP.",
    "tag": "natural-language-processing"
  },
  {
    "id": 470,
    "created_on": "2020-04-13 21:38:20",
    "title": "Transfer Learning with T5: the Text-To-Text Transfer Transformer",
    "description": "In the paper, we demonstrate how to achieve state-of-the-art results on multiple NLP tasks using a text-to-text transformer pre-trained on a large text corpus.",
    "tag": "natural-language-processing"
  },
  {
    "id": 471,
    "created_on": "2020-04-13 21:48:48",
    "title": "Building a COVID-19 Project Recommendation System",
    "description": "How to create a GitHub open source repo recommendation system web app with MLflow, Sagemaker, and Booklet.ai.",
    "tag": "natural-language-processing"
  },
  {
    "id": 473,
    "created_on": "2020-04-13 22:33:21",
    "title": "Neural Machine Translation With Attention",
    "description": "This notebook trains a sequence to sequence (seq2seq) model for Spanish to English translation. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 474,
    "created_on": "2020-04-13 22:48:49",
    "title": "PyTorch Tutorial for Deep Learning Researchers",
    "description": "This repository provides tutorial code for deep learning researchers to learn PyTorch. ",
    "tag": "computer-vision"
  },
  {
    "id": 476,
    "created_on": "2020-04-14 00:40:10",
    "title": "Show and Tell: A Neural Image Caption Generator",
    "description": "A TensorFlow implementation of the image-to-text model.",
    "tag": "computer-vision"
  },
  {
    "id": 477,
    "created_on": "2020-04-14 01:46:32",
    "title": "SimpleGAN",
    "description": "A Tensorflow-based framework to ease the training of generative models",
    "tag": "computer-vision"
  },
  {
    "id": 478,
    "created_on": "2020-04-14 02:41:43",
    "title": "Semantic Segmentation on MIT ADE20K dataset in PyTorch",
    "description": "Pytorch implementation for Semantic Segmentation/Scene Parsing on MIT ADE20K dataset.",
    "tag": "computer-vision"
  },
  {
    "id": 480,
    "created_on": "2020-04-14 03:46:09",
    "title": "ViLBERT-MT: Multi-Task Vision & Language Representation Learning",
    "description": "A single ViLBERT Multi-Task model can perform 8 different vision and language tasks learnt from 12 datasets!",
    "tag": "computer-vision"
  },
  {
    "id": 481,
    "created_on": "2020-04-14 03:50:18",
    "title": "Training an Image Classifier in PyTorch",
    "description": "Torchvision, that has data loaders for common datasets such as Imagenet, CIFAR10, MNIST, etc. and data transformers for images, vizualization and data loaders.",
    "tag": "computer-vision"
  },
  {
    "id": 482,
    "created_on": "2020-04-14 17:28:37",
    "title": "A Visual Exploration of DeepCluster",
    "description": "DeepCluster is a self-supervised method to combine clustering and representation learning",
    "tag": "computer-vision"
  },
  {
    "id": 486,
    "created_on": "2020-04-14 20:12:43",
    "title": "A 2019 guide to Human Pose Estimation with Deep Learning",
    "description": "The basics of Human Pose Estimation (2D) and review the literature on this topic.",
    "tag": "computer-vision"
  },
  {
    "id": 487,
    "created_on": "2020-04-14 21:15:35",
    "title": "Face Alignment in Full Pose Range: A 3D Total Solution",
    "description": "Face Alignment in Full Pose Range: A 3D Total Solution.",
    "tag": "computer-vision"
  },
  {
    "id": 488,
    "created_on": "2020-04-14 21:21:51",
    "title": "V2V-PoseNet Pytorch",
    "description": "PyTorch implementation of V2V-PoseNet with IntegralPose/PoseFix loss.",
    "tag": "computer-vision"
  },
  {
    "id": 489,
    "created_on": "2020-04-14 22:22:40",
    "title": "Deep Learning Based Super Resolution, Without Using a GAN",
    "description": "Techniques and training a deep learning model for image improvement, image restoration, inpainting and super resolution.",
    "tag": "computer-vision"
  },
  {
    "id": 490,
    "created_on": "2020-04-14 22:35:21",
    "title": "U-Net Deep Learning Colorization of Greyscale Images",
    "description": "This article describes experiments training a neural network to generate 3 channel colour images from single channel greyscale images using deep learning.",
    "tag": "computer-vision"
  },
  {
    "id": 491,
    "created_on": "2020-04-14 22:38:54",
    "title": "Deep Learning for Image Super-resolution: A Survey",
    "description": "This article aims to provide a comprehensive survey on recent advances of image super-resolution using deep learning approaches.",
    "tag": "computer-vision"
  },
  {
    "id": 492,
    "created_on": "2020-04-14 22:41:52",
    "title": "Second-order Attention Network for Single Image Super-resolution",
    "description": "We propose a second-order attention network (SAN) for more powerful feature expression and feature correlation learning.",
    "tag": "computer-vision"
  },
  {
    "id": 493,
    "created_on": "2020-04-14 22:52:49",
    "title": "DeepSORT: Deep Learning to Track Custom Objects in a Video",
    "description": "A look at deep learning based approached for object tracking.",
    "tag": "computer-vision"
  },
  {
    "id": 494,
    "created_on": "2020-04-14 22:59:56",
    "title": "Fast Online Object Tracking and Segmentation: A Unifying Approach",
    "description": "We illustrate how to perform both realtime object tracking and semi-supervised video object segmentation using a fully-convolutional Siamese approach.",
    "tag": "computer-vision"
  },
  {
    "id": 495,
    "created_on": "2020-04-14 23:10:48",
    "title": "Neural Style Transfer",
    "description": "This tutorial uses deep learning to compose one image in the style of another image (ever wish you could paint like Picasso or Van Gogh?).",
    "tag": "computer-vision"
  },
  {
    "id": 496,
    "created_on": "2020-04-14 23:14:59",
    "title": "Fast- Neural Style",
    "description": "Pytorch implementation of an algorithm for artistic style transfer. ",
    "tag": "computer-vision"
  },
  {
    "id": 497,
    "created_on": "2020-04-14 23:21:16",
    "title": "Torchvision Object Detection Finetuning Tutorial",
    "description": "Finetuning a pre-trained Mask R-CNN model in the Penn-Fudan Database for Pedestrian Detection and Segmentation.",
    "tag": "computer-vision"
  },
  {
    "id": 499,
    "created_on": "2020-04-14 23:34:32",
    "title": "Deep Learning for Videos: A 2018 Guide to Action Recognition",
    "description": "In this post, I summarize the literature on action recognition from videos. ",
    "tag": "computer-vision"
  },
  {
    "id": 501,
    "created_on": "2020-04-15 15:20:56",
    "title": "Shakespeare Meets Google's Flax",
    "description": "Application of RNNs in Flax: Character-Level Language Model.",
    "tag": "natural-language-processing"
  },
  {
    "id": 505,
    "created_on": "2020-04-15 15:59:30",
    "title": "Anomaly detection with Keras, TensorFlow, and Deep Learning",
    "description": "Perform anomaly detection in your own image datasets using deep learning.",
    "tag": "computer-vision"
  },
  {
    "id": 507,
    "created_on": "2020-04-15 16:12:41",
    "title": "Almost Everything You Need to Know About Time Series",
    "description": "Understand moving average, exponential smoothing, stationarity, autocorrelation, SARIMA, and more.",
    "tag": "time-series"
  },
  {
    "id": 508,
    "created_on": "2020-04-15 16:29:08",
    "title": "STEFANN: Scene Text Editor using Font Adaptive Neural Network",
    "description": "A generalized method for realistic modification of textual content present in a scene image. \u2b50\ufe0f Accepted in CVPR 2020.",
    "tag": "computer-vision"
  },
  {
    "id": 509,
    "created_on": "2020-04-15 16:34:04",
    "title": "Time Series Prediction with LSTM Using PyTorch",
    "description": "Time series applied to forecasting on the Airplane Passengers Dataset.",
    "tag": "time-series"
  },
  {
    "id": 513,
    "created_on": "2020-04-15 17:05:36",
    "title": "lda2vec: Tools for interpreting natural language",
    "description": "The lda2vec model tries to mix the best parts of word2vec and LDA into a single framework.",
    "tag": "natural-language-processing"
  },
  {
    "id": 516,
    "created_on": "2020-04-15 17:21:53",
    "title": "Deep Learning for Object Detection: A Comprehensive Review",
    "description": "A closer look at Tensorflow\u2019s object detection models: Faster R-CNN, R-FCN, and SSD.",
    "tag": "computer-vision"
  },
  {
    "id": 517,
    "created_on": "2020-04-15 17:31:22",
    "title": "An Intuitive Guide to Deep Network Architectures",
    "description": "Intuition behind base network architectures like MobileNets, Inception, and ResNet.",
    "tag": "computer-vision"
  },
  {
    "id": 529,
    "created_on": "2020-04-15 19:39:24",
    "title": "Real-Time Voice Cloning",
    "description": "Clone a voice in 5 seconds to generate arbitrary speech in real-time. Code for Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech.",
    "tag": "natural-language-processing"
  },
  {
    "id": 549,
    "created_on": "2020-04-16 03:48:35",
    "title": "15 Best Tools for Tracking Machine Learning Experiments",
    "description": "A feature comparison of all the open-source and commercial options for experiment tracking.",
    "tag": "mlops"
  },
  {
    "id": 550,
    "created_on": "2020-04-16 08:14:50",
    "title": "Cycle GAN in TensorFlow 2.0 with Custom Loops",
    "description": "Implementation of \"Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks\" by Jun-Yan Zhu et al. ",
    "tag": "computer-vision"
  },
  {
    "id": 552,
    "created_on": "2020-04-16 10:13:12",
    "title": "Holopix50k: A Large-Scale In-the-wild Stereo Image Dataset",
    "description": "The largest dataset of in-the-wild stereo image pairs (50K) crowd-sourced from the Holopix lightfield image-sharing social network.",
    "tag": "computer-vision"
  },
  {
    "id": 558,
    "created_on": "2020-04-16 15:49:29",
    "title": "PyTorch Notebooks",
    "description": "\ud83d\udd25A collection of PyTorch notebooks for learning and practicing deep learning",
    "tag": "natural-language-processing"
  },
  {
    "id": 559,
    "created_on": "2020-04-16 16:18:26",
    "title": "Creating an End-to-End Machine Learning Application",
    "description": "A complete, end-to-end ML application, implemented in both TensorFlow 2.0 and PyTorch.",
    "tag": "mlops"
  },
  {
    "id": 561,
    "created_on": "2020-04-16 16:27:31",
    "title": "How Docker Can Help You Become A More Effective Data Scientist",
    "description": "A look at Docker from the perspective of a data scientist.",
    "tag": "mlops"
  },
  {
    "id": 564,
    "created_on": "2020-04-17 13:16:09",
    "title": "Optimize your ML models",
    "description": "Learn to use optimize your custom image classification models (built-in tf.keras) using TensorFlow Lite and gain 10x reduction in model's size. ",
    "tag": "computer-vision"
  },
  {
    "id": 566,
    "created_on": "2020-04-17 21:57:35",
    "title": "Machine learning deserves its own flavor of Continuous Delivery",
    "description": "When traveling in the data science world, I'm homesick for a smooth continuous delivery flow. My thoughts on approachable CD4ML.",
    "tag": "mlops"
  },
  {
    "id": 569,
    "created_on": "2020-04-18 13:32:36",
    "title": "An Introduction to Transfer Learning and HuggingFace",
    "description": "In this talk I'll start by introducing the recent breakthroughs in NLP that resulted from the combination of Transfer Learning schemes and Transformer architect",
    "tag": "natural-language-processing"
  },
  {
    "id": 570,
    "created_on": "2020-04-19 17:40:48",
    "title": "Introduction to Image Inpainting With Deep Learning",
    "description": "In this article, we are going to learn how to do \u201cimage inpainting\u201d, i.e. fill in missing parts of images precisely using deep learning.",
    "tag": "computer-vision"
  },
  {
    "id": 574,
    "created_on": "2020-04-20 00:23:44",
    "title": "The Abstraction and Reasoning Corpus (ARC)",
    "description": "Can a computer learn complex, abstract tasks from just a few examples? ARC can be used to measure a human-like form of general fluid intelligence.",
    "tag": "natural-language-processing"
  },
  {
    "id": 579,
    "created_on": "2020-04-20 00:53:19",
    "title": "Transfer Learning & Fine-Tuning With Keras",
    "description": "Your 100% up-to-date guide to transfer learning & fine-tuning with Keras.",
    "tag": "computer-vision"
  },
  {
    "id": 580,
    "created_on": "2020-04-20 00:57:03",
    "title": "GitHub Actions & Machine Learning Workflows with Hamel Husain",
    "description": " In this talk, Hamel will provide a brief tutorial on GitHub Actions, and will show you how you can use this new tool to automate your ML workflows.",
    "tag": "mlops"
  },
  {
    "id": 581,
    "created_on": "2020-04-20 01:01:38",
    "title": "How To Create Semantic Search For Arbitrary Objects",
    "description": "An end-to-end example of how to build a system that can search objects semantically. By Hamel Husain & Ho-Hsiang Wu",
    "tag": "natural-language-processing"
  },
  {
    "id": 582,
    "created_on": "2020-04-20 21:38:50",
    "title": "CS285: Deep Reinforcement Learning",
    "description": "A course on deep reinforcement learning, transfer and multi-task learning.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 594,
    "created_on": "2020-04-21 23:25:53",
    "title": "TorchServe & TorchElastic PyTorch Libraries for Serving/Training",
    "description": "The officially supported way to deploy and manage models with PyTorch.",
    "tag": "mlops"
  },
  {
    "id": 598,
    "created_on": "2020-04-22 16:33:59",
    "title": "The Future of (Transfer Learning in) Natural Language Processing",
    "description": "Transfer Learning in Natural Language Processing (NLP): Open questions, current trends, limits, and future directions.",
    "tag": "natural-language-processing"
  },
  {
    "id": 599,
    "created_on": "2020-04-22 16:43:13",
    "title": "MONAI",
    "description": "AI Toolkit for Healthcare Imaging.",
    "tag": "computer-vision"
  },
  {
    "id": 600,
    "created_on": "2020-04-22 17:37:25",
    "title": "Building a Simple Chatbot from Scratch in Python (using NLTK)",
    "description": "A look at retrieval based and generative conversational AI for creating chatbots.",
    "tag": "natural-language-processing"
  },
  {
    "id": 601,
    "created_on": "2020-04-22 17:41:06",
    "title": "How I Used Deep Learning To Train A Chatbot To Talk Like Me",
    "description": "Facebook chatbot that I trained to talk like me using Seq2Seq.",
    "tag": "natural-language-processing"
  },
  {
    "id": 602,
    "created_on": "2020-04-23 00:36:02",
    "title": "DialoGPT: Toward Human-Quality Conversational Response Generation",
    "description": "Large-scale pre-training for dialogue.",
    "tag": "natural-language-processing"
  },
  {
    "id": 605,
    "created_on": "2020-04-23 03:59:57",
    "title": "Upside Down Reinforcement Learning",
    "description": "Implementation of UDRL as outlined by Juergen Schmidhuber in https://arxiv.org/abs/1912.02875",
    "tag": "reinforcement-learning"
  },
  {
    "id": 608,
    "created_on": "2020-04-23 12:52:02",
    "title": "PyImageSearch",
    "description": "An online platform of blogs on Computer Vision and Deep Learning.",
    "tag": "computer-vision"
  },
  {
    "id": 612,
    "created_on": "2020-04-23 13:56:46",
    "title": "Implementing DCGANs using PyTorch C++ API (Libtorch)",
    "description": "The blog discusses the paper review of DCGANs and implementation using PyTorch C++ API in detail. From loading models to visualizing batch of the data, in C++! ",
    "tag": "computer-vision"
  },
  {
    "id": 619,
    "created_on": "2020-04-23 16:55:27",
    "title": "Implementing Portrait Bokeh Mode using OpenCV and NumPy (Python)",
    "description": "Do you love the portrait mode in your smartphone? This code will help you do the same using OpenCV and NumPy! Detects the faces, asks if you want to blur them!",
    "tag": "computer-vision"
  },
  {
    "id": 620,
    "created_on": "2020-04-23 17:26:26",
    "title": "ELECTRA ",
    "description": "Explaining the new self-supervised task for language representation learning, ELECTRA which uses \"replace token detection\".",
    "tag": "natural-language-processing"
  },
  {
    "id": 621,
    "created_on": "2020-04-23 18:17:12",
    "title": "MixNMatch",
    "description": "Multifactor Disentanglement and Encoding for Conditional Image Generation",
    "tag": "computer-vision"
  },
  {
    "id": 622,
    "created_on": "2020-04-23 21:40:09",
    "title": "MT-Clinical BERT",
    "description": "Scaling Clinical Information Extraction with Multitask Learning",
    "tag": "natural-language-processing"
  },
  {
    "id": 623,
    "created_on": "2020-04-24 00:30:02",
    "title": "medaCy",
    "description": "\ud83c\udfe5 Medical Text Mining and Information Extraction with spaCy",
    "tag": "natural-language-processing"
  },
  {
    "id": 624,
    "created_on": "2020-04-24 00:42:41",
    "title": "How to Train a New Language Model From Scratch Using Transformers",
    "description": "In this post we\u2019ll demo how to train a \u201csmall\u201d model (84 M parameters = 6 layers, 768 hidden size, 12 attention heads).",
    "tag": "natural-language-processing"
  },
  {
    "id": 629,
    "created_on": "2020-04-24 05:01:26",
    "title": "ARIMA Modeling - Guide to Time Series Forecasting in Python",
    "description": "How ARIMA models works . How to train and forecast using ARIMA, SARIMA, SARIMAX and find the optimal model with Python",
    "tag": "time-series"
  },
  {
    "id": 632,
    "created_on": "2020-04-24 11:37:13",
    "title": "Lagrangian Neural Networks",
    "description": "Trying to learn a simulation? Try Lagrangian Neural Networks, which explicitly conserve energy and may generalize better!",
    "tag": "graph-learning"
  },
  {
    "id": 639,
    "created_on": "2020-04-24 20:51:18",
    "title": "ML Foundations and Methods for Precision Medicine and Healthcare",
    "description": "This tutorial will discuss ideas from machine learning that enable personalization (useful for applications in education, retail, medicine and recsys).",
    "tag": "reinforcement-learning"
  },
  {
    "id": 643,
    "created_on": "2020-04-26 04:34:02",
    "title": "Albert-base for Sanskrit",
    "description": "Trained Albert-base from scratch on Sanskrit corpus of Wikipedia. I have also added a link to how to train your own Language model from scratch.",
    "tag": "natural-language-processing"
  },
  {
    "id": 644,
    "created_on": "2020-04-26 05:42:37",
    "title": "Adversarial Latent Autoencoders",
    "description": "Introducing the Adversarial Latent Autoencoder (ALAE), a general architecture that can leverage recent improvements on GAN training procedures.",
    "tag": "computer-vision"
  },
  {
    "id": 649,
    "created_on": "2020-04-28 03:42:29",
    "title": "Spektral",
    "description": "Graph Neural Networks with Keras and Tensorflow 2.",
    "tag": "graph-learning"
  },
  {
    "id": 652,
    "created_on": "2020-04-28 15:14:00",
    "title": "Optimal Transport and the Sinkhorn Transformer",
    "description": "Understand optimal transport and the Sinkhorn-Knopp algorithm before diving into the Sinkhorn Transformer.",
    "tag": "natural-language-processing"
  },
  {
    "id": 653,
    "created_on": "2020-04-28 16:20:29",
    "title": "Semantic Graphs for Generating Deep Questions",
    "description": "Deep Question Generation (DQG), which aims to generate complex questions that require reasoning over multiple pieces of information of the input passage. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 658,
    "created_on": "2020-04-28 21:34:00",
    "title": "Gutenberg Dialog",
    "description": "Build a dialog dataset from online books in many languages.",
    "tag": "natural-language-processing"
  },
  {
    "id": 661,
    "created_on": "2020-04-29 02:41:24",
    "title": "Better NLP project",
    "description": "This is a wrapper program/library that encapsulates a couple of NLP libraries that are popular among the AI and ML communities.",
    "tag": "natural-language-processing"
  },
  {
    "id": 663,
    "created_on": "2020-04-29 04:42:16",
    "title": "Recipes for building an open-domain chatbot",
    "description": "Python framework for sharing, training and testing dialogue models, from open-domain chitchat to VQA (Visual Question Answering).",
    "tag": "natural-language-processing"
  },
  {
    "id": 665,
    "created_on": "2020-04-29 10:46:20",
    "title": "Object-detection with multi-template matching",
    "description": "This python package allows to perform object detection using one or a few template images, it provides a simpler alternative to deep-learning methods",
    "tag": "computer-vision"
  },
  {
    "id": 666,
    "created_on": "2020-04-29 12:10:43",
    "title": "AIDeveloper",
    "description": "GUI-based software for training, evaluating and applying deep neural nets for image classification ",
    "tag": "computer-vision"
  },
  {
    "id": 667,
    "created_on": "2020-04-29 18:34:28",
    "title": "No Trump Social Chrome Plugin",
    "description": "An AI-driven Browser Extension to Replace Trump Pics with Puppies!",
    "tag": "computer-vision"
  },
  {
    "id": 670,
    "created_on": "2020-04-29 19:35:22",
    "title": "Attribute2Font: Creating Fonts You Want From Attributes",
    "description": "Official PyTorch implementation of the Attribute2Font: Creating Fonts You Want From Attributes.",
    "tag": "natural-language-processing"
  },
  {
    "id": 671,
    "created_on": "2020-04-29 23:22:43",
    "title": "MedCAT - Medical Concept Annotation Tool",
    "description": "A tool used to extract information from Electronic Health Records (EHRs) and link it to biomedical ontologies like SNOMED-CT and UMLS.",
    "tag": "natural-language-processing"
  },
  {
    "id": 674,
    "created_on": "2020-04-30 17:52:55",
    "title": "YOLOv4: Optimal Speed and Accuracy of Object Detection",
    "description": "A minimal implementation of YOLOv4.",
    "tag": "computer-vision"
  },
  {
    "id": 679,
    "created_on": "2020-05-01 16:17:32",
    "title": "Geometric and Relational Deep Learning",
    "description": "Videos from emerging fields of Graph Representation Learning and Geometric Deep Learning.",
    "tag": "graph-learning"
  },
  {
    "id": 681,
    "created_on": "2020-05-01 16:25:34",
    "title": "The AI Economist",
    "description": "Improving Equality and Productivity with AI-Driven Tax Policies",
    "tag": "reinforcement-learning"
  },
  {
    "id": 683,
    "created_on": "2020-05-01 16:35:06",
    "title": "TAPAS: Weakly Supervised Table Parsing via Pre-training",
    "description": "Using neural networks to find answers in tables.",
    "tag": "natural-language-processing"
  },
  {
    "id": 684,
    "created_on": "2020-05-01 16:48:19",
    "title": "WT5?! Training Text-to-Text Models to Explain their Predictions",
    "description": "We leverage the text-to-text framework proposed by Raffel et al.(2019) to train language models to output a natural text explanation alongside their prediction.",
    "tag": "natural-language-processing"
  },
  {
    "id": 686,
    "created_on": "2020-05-01 16:59:48",
    "title": "Jukebox: A Generative Model for Music",
    "description": "We\u2019re introducing Jukebox, a neural net that generates music, including rudimentary singing, as raw audio in a variety of genres and artist styles. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 687,
    "created_on": "2020-05-01 17:17:48",
    "title": "Exploratory Data Analysis of Time Series",
    "description": "Exploratory Data Analysis of Time Series data in Python. It uses lot of the principles and concepts discussed in Prof. Hyndman's book. The focus is on understa\r\n",
    "tag": "time-series"
  },
  {
    "id": 688,
    "created_on": "2020-05-01 17:47:40",
    "title": "Gotchas of Transfer Learning for Image Classification",
    "description": "Discover the things you should care about while doing transfer learning for image classification. ",
    "tag": "computer-vision"
  },
  {
    "id": 689,
    "created_on": "2020-05-01 17:51:53",
    "title": "Ensemble Forecasts ",
    "description": "Time series forecasting using classical methods (ETS, Holt-Winter's, SARIMA) and Prophet. I show and discuss advantages of Ensemble Forecast",
    "tag": "time-series"
  },
  {
    "id": 693,
    "created_on": "2020-05-02 05:05:44",
    "title": "SciTLDR: Extreme Summarization of Scientific Documents",
    "description": "A new automatic summarization task with high source compression requiring expert background knowledge and complex language understanding.",
    "tag": "natural-language-processing"
  },
  {
    "id": 694,
    "created_on": "2020-05-02 15:29:06",
    "title": "BLINK: Better entity LINKing",
    "description": "Entity Linking python library that uses Wikipedia as the target knowledge base.",
    "tag": "natural-language-processing"
  },
  {
    "id": 695,
    "created_on": "2020-05-02 21:33:31",
    "title": "Five Cool Python Libraries for Data Science",
    "description": "Python is a best friend for the majority of the Data Scientists. Libraries make their life simpler. I have come across five cool Python libraries while working ",
    "tag": "natural-language-processing"
  },
  {
    "id": 700,
    "created_on": "2020-05-03 13:49:29",
    "title": "Fastai2 Vision Module",
    "description": "A detailed guide to using fastai2 Datablock API for common computer vision tasks",
    "tag": "computer-vision"
  },
  {
    "id": 702,
    "created_on": "2020-05-03 20:19:10",
    "title": "Unsupervised Question Decomposition for Question Answering",
    "description": "Decompose hard (multi-hop) questions into several, easier (single-hop) questions using unsupervised learning, and get better accuracy on multi-hop QA.",
    "tag": "natural-language-processing"
  },
  {
    "id": 703,
    "created_on": "2020-05-04 05:09:59",
    "title": "Implementing Graph Neural Networks with JAX",
    "description": "I\u2019ll talk about my experience on how to build and train Graph Neural Networks (GNNs) with JAX.",
    "tag": "graph-learning"
  },
  {
    "id": 704,
    "created_on": "2020-05-04 11:58:27",
    "title": "Training Batch Norm and Only Batch Norm",
    "description": "Experiments with the ideas presented in https://arxiv.org/abs/2003.00152 by Frankle et al. ",
    "tag": "computer-vision"
  },
  {
    "id": 705,
    "created_on": "2020-05-04 14:13:13",
    "title": "Deep Learning With Graph-Structured Representations",
    "description": "Novel approaches based on the theme of structuring the representations and computations of neural network-based models in the form of a graph.",
    "tag": "graph-learning"
  },
  {
    "id": 706,
    "created_on": "2020-05-04 14:18:58",
    "title": "GNNExplainer: Generating Explanations for Graph Neural Networks",
    "description": "General tool for explaining predictions made by graph neural networks (GNNs).",
    "tag": "graph-learning"
  },
  {
    "id": 707,
    "created_on": "2020-05-05 03:36:50",
    "title": "The Big Bad NLP Database",
    "description": "A collection of 400+ NLP datasets with papers included.",
    "tag": "natural-language-processing"
  },
  {
    "id": 708,
    "created_on": "2020-05-05 03:51:53",
    "title": "POINTER: Constrained Text Generation",
    "description": "Constrained Text Generation via Insertion-based Generative Pre-training",
    "tag": "natural-language-processing"
  },
  {
    "id": 710,
    "created_on": "2020-05-05 04:01:24",
    "title": "Differential Subspace Search in High-Dimensional Latent Space",
    "description": "Differential subspace search to allow efficient iterative user exploration in such a space, without relying on domain- or data-specific assumptions.",
    "tag": "computer-vision"
  },
  {
    "id": 712,
    "created_on": "2020-05-05 05:55:46",
    "title": "Covid-19: A-Geo-Statistical-Analysis",
    "description": "Analysis with the time series data available for various countries.",
    "tag": "time-series"
  },
  {
    "id": 713,
    "created_on": "2020-05-05 07:13:49",
    "title": "Cognito : Data wrangling toolkit",
    "description": "Cognito is an exclusive python data preprocessing library and command-line utility that helps any developer to transform raw data into a machine-learning format",
    "tag": "time-series"
  },
  {
    "id": 717,
    "created_on": "2020-05-05 14:46:57",
    "title": "Synthesizer: Rethinking Self-Attention in Transformer Models",
    "description": "The dot product self-attention is known to be central and indispensable to state-of-the-art Transformer models. But is it really required?",
    "tag": "natural-language-processing"
  },
  {
    "id": 723,
    "created_on": "2020-05-05 19:45:50",
    "title": "DeepWay: Autonomous navigation for blind.",
    "description": "I have tried to make something which can be used by blind people to navigate around the streets. Have a look at the video and GitHub repo for details.",
    "tag": "computer-vision"
  },
  {
    "id": 726,
    "created_on": "2020-05-06 01:10:55",
    "title": "ConvNets-TensorFlow2",
    "description": "Implementing a variety of popular and important CNN architectures",
    "tag": "computer-vision"
  },
  {
    "id": 732,
    "created_on": "2020-05-06 04:20:43",
    "title": "StellarGraph - Machine Learning on Graphs",
    "description": "State-of-the-art algorithms for graph machine learning, making it easy to discover patterns and answer questions about graph-structured data.",
    "tag": "graph-learning"
  },
  {
    "id": 733,
    "created_on": "2020-05-06 04:30:47",
    "title": "LandCover.ai",
    "description": "Dataset for automatic mapping of buildings, woodlands and water from aerial imagery.",
    "tag": "computer-vision"
  },
  {
    "id": 734,
    "created_on": "2020-05-06 04:33:15",
    "title": "Generating SOAP Notes from Doctor-Patient Conversations",
    "description": "Evaluate complete pipelines for leveraging these transcripts to train machine learning model to generate these notes.",
    "tag": "natural-language-processing"
  },
  {
    "id": 737,
    "created_on": "2020-05-06 18:06:04",
    "title": "Nature-Scene Classification using FASTAI",
    "description": "Classifying Nature-scene images using deep learning  with fastai library",
    "tag": "computer-vision"
  },
  {
    "id": 738,
    "created_on": "2020-05-06 20:33:00",
    "title": "Machine-Learning-Single-Layer-Multiclass-Perceptron",
    "description": "Implemented a Single Layer Perceptron and applied it on the MNIST dataset for multi-class classification using NumPy.",
    "tag": "computer-vision"
  },
  {
    "id": 741,
    "created_on": "2020-05-07 01:15:12",
    "title": "Zero-shot Neural Retrieval via Domain-targeted Synthetic Queries",
    "description": "Zero-shot learning for ad-hoc retrieval models that relies on synthetic query generation.",
    "tag": "natural-language-processing"
  },
  {
    "id": 778,
    "created_on": "2020-05-07 21:28:34",
    "title": "Harry Potter and the Deep Learning Experiment",
    "description": "RNN built with TensorFlow to generate text based on Harry Potter's books.",
    "tag": "natural-language-processing"
  },
  {
    "id": 780,
    "created_on": "2020-05-08 12:06:30",
    "title": "Med7 - clinical natural language processing for EHR",
    "description": "Med7 is a transferable clinical natural language processing model for electronic health records, compatible with spaCy, for named-entity recognition task",
    "tag": "natural-language-processing"
  },
  {
    "id": 783,
    "created_on": "2020-05-08 14:44:04",
    "title": "NeuralCook \u2014 Image2Ingredients and Cooking Recommendation",
    "description": "Deep learning application to identify ingredients from cooking dishes images and recommend dishes to cook, given a set of ingredients.",
    "tag": "natural-language-processing"
  },
  {
    "id": 784,
    "created_on": "2020-05-08 14:59:08",
    "title": "Haystack \u2014 Neural Question Answering At Scale",
    "description": "Scaling Question Answering models to find answers in large document stores via retriever and reader approach.",
    "tag": "natural-language-processing"
  },
  {
    "id": 785,
    "created_on": "2020-05-08 17:13:36",
    "title": "SimCLR in TensorFlow 2",
    "description": "(Minimally) implements SimCLR (https://arxiv.org/abs/2002.05709) in TensorFlow 2.",
    "tag": "computer-vision"
  },
  {
    "id": 787,
    "created_on": "2020-05-08 18:15:56",
    "title": "Semantic Cord19 Paper Explorer",
    "description": "Semantic research paper explorer to search Research Papers in COVID and CoronaVirus. Can be easily modified to any Research Paper Database",
    "tag": "natural-language-processing"
  },
  {
    "id": 788,
    "created_on": "2020-05-09 04:12:10",
    "title": "NER model for 40 languages trained with the new TFTrainer",
    "description": "This model is a fine-tuned XLM-Roberta-base over the 40 languages proposed in XTREME from Wikiann. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 791,
    "created_on": "2020-05-09 14:30:08",
    "title": "Pose Animator",
    "description": "Takes a 2D vector illustration and animates its containing curves in real-time based on the recognition result from PoseNet and FaceMesh.",
    "tag": "computer-vision"
  },
  {
    "id": 792,
    "created_on": "2020-05-09 16:59:54",
    "title": "A Commit History of BERT and its Forks",
    "description": "What a commit history of version-controlled research papers could look like?",
    "tag": "natural-language-processing"
  },
  {
    "id": 795,
    "created_on": "2020-05-10 04:51:17",
    "title": "U^2-Net",
    "description": "The code for our newly accepted paper in Pattern Recognition 2020: \"U^2-Net: Going Deeper with Nested U-Structure for Salient Object Detection.\"",
    "tag": "computer-vision"
  },
  {
    "id": 796,
    "created_on": "2020-05-10 05:08:27",
    "title": "Age and Gender Estimation using Multi-Task CNN",
    "description": "Used a multi task CNN to predict the age group and gender of the person in the image.",
    "tag": "computer-vision"
  },
  {
    "id": 797,
    "created_on": "2020-05-10 15:31:27",
    "title": "Data augmentation recipes in tf.keras image-based models",
    "description": "Learn about different ways of doing data augmentation when training an image classifier in tf.keras.",
    "tag": "computer-vision"
  },
  {
    "id": 799,
    "created_on": "2020-05-11 00:40:49",
    "title": "Injecting Inductive Bias in Graph Neural Networks (MIT talk)",
    "description": "Equivariant Mesh Neural Networks and Neural Augmented (Factor) Graph Neural Networks.",
    "tag": "graph-learning"
  },
  {
    "id": 800,
    "created_on": "2020-05-11 00:44:10",
    "title": "Feature Stores for ML",
    "description": "List of production ML groups and their open-source feature store architectures.",
    "tag": "mlops"
  },
  {
    "id": 803,
    "created_on": "2020-05-11 02:13:32",
    "title": "Image Semantic Segmentation of UAV mining area based on Deeplabv3",
    "description": "Data: UAV mining area image\r\nTools: PyTorch\r\nFrame: Deeplabv3\r\nSemantic Segmentation ",
    "tag": "computer-vision"
  },
  {
    "id": 807,
    "created_on": "2020-05-11 02:25:51",
    "title": "Introduction to Machine Learning Problem Framing",
    "description": "This course helps you frame machine learning (ML) problems.",
    "tag": "mlops"
  },
  {
    "id": 820,
    "created_on": "2020-05-11 14:19:18",
    "title": "A Comprehensive Survey on Graph Neural Networks",
    "description": "A Comprehensive Survey on Graph Neural Networks.",
    "tag": "graph-learning"
  },
  {
    "id": 821,
    "created_on": "2020-05-11 15:03:57",
    "title": "Hidden Technical Debt in Machine Learning Systems",
    "description": "Using the software engineering framework of technical debt, we find it is common to incur massive ongoing maintenance costs in real-world ML systems. ",
    "tag": "mlops"
  },
  {
    "id": 822,
    "created_on": "2020-05-11 15:10:09",
    "title": "In-Domain GAN Inversion for Real Image Editing",
    "description": "We propose an in-domain GAN inversion method, which faithfully reconstructs the input image but also ensures the inverted code to be semantically meaningful.",
    "tag": "computer-vision"
  },
  {
    "id": 825,
    "created_on": "2020-05-11 23:07:39",
    "title": "Neural Networks for NLP (CMU CS 11-747)",
    "description": "This class will start with a brief overview of neural networks, then spend the majority of the class demonstrating how to apply neural networks to language.",
    "tag": "natural-language-processing"
  },
  {
    "id": 826,
    "created_on": "2020-05-12 03:02:02",
    "title": "DANet PyTorch",
    "description": "A Pytorch implementation of Dual Attention Network for Scene Segmentation",
    "tag": "computer-vision"
  },
  {
    "id": 828,
    "created_on": "2020-05-12 05:04:58",
    "title": "BART version of closed-book QA",
    "description": "This is a BART version of sequence-to-sequence model for open-domain QA in a closed-book setup, based on PyTorch and Huggingface's Transformers.",
    "tag": "natural-language-processing"
  },
  {
    "id": 829,
    "created_on": "2020-05-12 05:07:35",
    "title": "Unsupervised Reinforcement Learning",
    "description": "Lecture on unsupervised reinforcement learning by Sergey Levine. Originally prepared for AAMAS 2020.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 831,
    "created_on": "2020-05-13 02:24:24",
    "title": "CCNet_PyTorch",
    "description": "A PyTorch Implementation of  CCNet: Criss-Cross Attention for Semantic Segmentation",
    "tag": "computer-vision"
  },
  {
    "id": 832,
    "created_on": "2020-05-13 04:22:09",
    "title": "Image segmentation in 2020",
    "description": "Architectures, Losses, Datasets, and Frameworks",
    "tag": "computer-vision"
  },
  {
    "id": 833,
    "created_on": "2020-05-13 04:27:08",
    "title": "Plan2Explore: Plan to Explore via Self-Supervised World Models",
    "description": "A self-supervised reinforcement learning agent that tackles task-specific and the sample efficiency challenges.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 834,
    "created_on": "2020-05-13 04:36:33",
    "title": "TailorGAN: Making User-Defined Fashion Designs",
    "description": "Generate a photo-realistic image which combines the texture from reference A and the new attribute from reference B.",
    "tag": "computer-vision"
  },
  {
    "id": 835,
    "created_on": "2020-05-13 04:39:31",
    "title": "Toward Better Storylines with Sentence-Level Language Models",
    "description": "We propose a sentence-level language model which selects the next sentence in a story from a finite set of fluent alternatives.",
    "tag": "natural-language-processing"
  },
  {
    "id": 836,
    "created_on": "2020-05-13 04:43:57",
    "title": "Epipolar Transformers",
    "description": "Differentiable \"epipolar transformer\", which enables the 2D detector to leverage 3D-aware features to improve 2D pose estimation.",
    "tag": "computer-vision"
  },
  {
    "id": 840,
    "created_on": "2020-05-13 05:03:33",
    "title": "Machine Learning on Graphs: A Model and Comprehensive Taxonomy",
    "description": "We propose a simple framework (GraphEDM) and a comprehensive Taxonomy to review and unify several graph representation learning methods.",
    "tag": "graph-learning"
  },
  {
    "id": 841,
    "created_on": "2020-05-13 05:10:58",
    "title": "BLEURT: Learning Robust Metrics for Text Generation",
    "description": "A metric for Natural Language Generation based on transfer learning.",
    "tag": "natural-language-processing"
  },
  {
    "id": 842,
    "created_on": "2020-05-13 13:20:07",
    "title": "Identifying Brain Tumor from MRI images using FastAI -DynamicUnet",
    "description": "To use FASTAI unet learner to identify tumours from MRI of Brain, logging loss metrics in Neptune AI logger and compare the results after hyperparameter tuning.",
    "tag": "computer-vision"
  },
  {
    "id": 843,
    "created_on": "2020-05-13 14:49:21",
    "title": "T5 fine-tuning",
    "description": "A colab notebook to showcase how to fine-tune T5 model on various NLP tasks (especially non text-2-text tasks with text-2-text approach)",
    "tag": "natural-language-processing"
  },
  {
    "id": 847,
    "created_on": "2020-05-13 22:53:36",
    "title": "HuggingTweets",
    "description": "Tweet Generation with Huggingface.",
    "tag": "natural-language-processing"
  },
  {
    "id": 849,
    "created_on": "2020-05-13 22:59:38",
    "title": "Top Down Introduction to BERT with HuggingFace and PyTorch",
    "description": "I will also provide some intuition into how BERT works with a top down approach (applications to algorithm).",
    "tag": "natural-language-processing"
  },
  {
    "id": 850,
    "created_on": "2020-05-13 23:02:29",
    "title": "Transformers from Scratch",
    "description": "Attempt to explain directly how modern transformers work, and why, without some of the historical baggage.",
    "tag": "natural-language-processing"
  },
  {
    "id": 852,
    "created_on": "2020-05-14 07:11:26",
    "title": "Scene Classification using Pytorch and Fast.ai",
    "description": "The objective is to classify Multi-label images using deep learning. Here I have used Fast.ai library for implementing the model. ",
    "tag": "computer-vision"
  },
  {
    "id": 854,
    "created_on": "2020-05-14 12:05:20",
    "title": "ASAP: Pooling for Graph Neural Network (AAAI 2020)",
    "description": "ASAP is a sparse and differentiable pooling method that addresses the limitations of previous graph pooling layers.",
    "tag": "graph-learning"
  },
  {
    "id": 855,
    "created_on": "2020-05-14 12:32:20",
    "title": "Fake new detection Pytorch",
    "description": "Fake News Detection by Learning Convolution Filters through Contextualized Attention.",
    "tag": "natural-language-processing"
  },
  {
    "id": 857,
    "created_on": "2020-05-14 14:25:11",
    "title": "FastHugs: Sequence Classification with Transformers and Fastai",
    "description": "Fine-tune a text classification model with HuggingFace \ud83e\udd17 transformers and fastai-v2.",
    "tag": "natural-language-processing"
  },
  {
    "id": 858,
    "created_on": "2020-05-14 14:35:37",
    "title": "Open-Dialog Chatbots for Learning New Languages",
    "description": "A tutorial for automatically generate code comments using Deep Learning.",
    "tag": "natural-language-processing"
  },
  {
    "id": 860,
    "created_on": "2020-05-14 17:35:04",
    "title": "Electra",
    "description": "ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators",
    "tag": "natural-language-processing"
  },
  {
    "id": 862,
    "created_on": "2020-05-14 19:13:59",
    "title": "DQN In Pytorch Livestream Series",
    "description": "I'm doing a series of streams about reinforcement learning (starting from Q learning) focused on showing the work in as much detail as possible (e.g. debugging)",
    "tag": "reinforcement-learning"
  },
  {
    "id": 863,
    "created_on": "2020-05-15 04:24:58",
    "title": "S2IGAN: Speech-to-Image Generation via Adversarial Learning",
    "description": "A speech-to-image generation (S2IG) framework is proposed which translates speech descriptions to photo-realistic images without using any text information.",
    "tag": "computer-vision"
  },
  {
    "id": 864,
    "created_on": "2020-05-15 13:04:19",
    "title": "Twitter Sentiment Analysis",
    "description": "This project is based on Natural Language processing (NLP), in this we do sentiment analysis(i.e, how much it is positive or negative) of tweets of any account.",
    "tag": "natural-language-processing"
  },
  {
    "id": 866,
    "created_on": "2020-05-15 13:51:56",
    "title": "HuggingFace nlp library",
    "description": "nlp is a lightweight and extensible library to easily share and load dataset and evaluation metrics, already providing access to ~100 datasets and ~10 evaluatio",
    "tag": "natural-language-processing"
  },
  {
    "id": 868,
    "created_on": "2020-05-15 14:07:47",
    "title": "RXNMapper: Unsupervised Attention-Guided Atom-Mapping",
    "description": "The atom-mapping information was learned by an ALBERT model trained in an unsupervised fashion on a large dataset of chemical reactions.",
    "tag": "natural-language-processing"
  },
  {
    "id": 869,
    "created_on": "2020-05-15 14:08:12",
    "title": "ICLR 2020 Trends: Better & Faster Transformers for NLP",
    "description": "A summary of promising directions from ICLR 2020 for better and faster pretrained tranformers language models. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 875,
    "created_on": "2020-05-15 22:53:58",
    "title": "Differentiable Reasoning over Text",
    "description": "We consider the task of answering complex multi-hop questions using a corpus as a virtual knowledge base (KB).",
    "tag": "natural-language-processing"
  },
  {
    "id": 877,
    "created_on": "2020-05-16 02:42:32",
    "title": "Semi-supervised image classification with GANs",
    "description": "Shows how to perform semi-supervised image classification with GANs. The cover image is from Chapter 7, GANs in Action.",
    "tag": "computer-vision"
  },
  {
    "id": 878,
    "created_on": "2020-05-16 05:27:56",
    "title": "Exploratory Data Analysis on MS COCO Style Datasets",
    "description": "A Simple Toolkit to do exploratory data analysis on MS COCO style formatted datasets.",
    "tag": "computer-vision"
  },
  {
    "id": 879,
    "created_on": "2020-05-16 10:57:53",
    "title": "HighRes-net: Multi-Frame Super-Resolution of satellite imagery",
    "description": "Pytorch implementation of HighRes-net, a neural network for multi-frame super-resolution, trained and tested on the European Space Agency\u2019s Kelvin competition.",
    "tag": "computer-vision"
  },
  {
    "id": 880,
    "created_on": "2020-05-16 11:50:31",
    "title": "How Deep Is Your Love For Transfer Learning In NLP?",
    "description": "A review of NLP research",
    "tag": "natural-language-processing"
  },
  {
    "id": 881,
    "created_on": "2020-05-16 13:32:51",
    "title": "Time Series Forecasting with TensorFlow.js",
    "description": "Machine learning is becoming increasingly popular these days and a growing number of the world\u2019s population see it is as a magic crystal ball: predicting when a",
    "tag": "time-series"
  },
  {
    "id": 882,
    "created_on": "2020-05-16 13:35:31",
    "title": "Phrases extraction and D3 Wordcloud",
    "description": "100% JavaScript solution to extracting phrases from text and display key points in a beautiful D3 wordcloud.",
    "tag": "natural-language-processing"
  },
  {
    "id": 883,
    "created_on": "2020-05-16 13:37:44",
    "title": "Reinforcement Learning Tic Tac Toe with Value Function",
    "description": "A reinforcement learning algorithm for agents to learn the tic-tac-toe, using the value function\r\n\r\n",
    "tag": "reinforcement-learning"
  },
  {
    "id": 884,
    "created_on": "2020-05-16 13:40:07",
    "title": "Build a Textual Similarity Web App with TensorFlow.js",
    "description": "Have you wondered how search engines understand your queries and retrieve relevant results? How chatbots extract your intent from your questions and provide the",
    "tag": "natural-language-processing"
  },
  {
    "id": 890,
    "created_on": "2020-05-16 19:51:33",
    "title": "cyBERT: Applying BERT to Windows event logs",
    "description": "This blog shows how interpreting cybersecurity logs as a natural language, improving upon the standard regex-based parsing of log data.",
    "tag": "natural-language-processing"
  },
  {
    "id": 892,
    "created_on": "2020-05-17 02:08:12",
    "title": "DPOD: Pose Estimator",
    "description": "PyTorch recreation of a SOTA 6D Pose estimation research paper. ",
    "tag": "computer-vision"
  },
  {
    "id": 893,
    "created_on": "2020-05-17 04:44:04",
    "title": "ESTorch",
    "description": "ESTorch is an Evolution Strategy Library build around PyTorch.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 894,
    "created_on": "2020-05-17 04:47:40",
    "title": "A Large-Scale, Open-Domain, Mixed-Interface Dialogue-Based ITS ",
    "description": "Korbit, a large-scale, open-domain, mixed-interface, dialogue-based intelligent tutoring system (ITS).",
    "tag": "natural-language-processing"
  },
  {
    "id": 898,
    "created_on": "2020-05-17 05:11:22",
    "title": "Single-Stage Semantic Segmentation from Image Labels",
    "description": "We attain competitive results by training a single network model\r\nfor segmentation in a self-supervised fashion using only\r\nimage-level annotations",
    "tag": "computer-vision"
  },
  {
    "id": 900,
    "created_on": "2020-05-17 08:14:24",
    "title": "A Visual Survey of Data Augmentation in NLP",
    "description": "An extensive overview of text data augmentation techniques for Natural Language Processing",
    "tag": "natural-language-processing"
  },
  {
    "id": 901,
    "created_on": "2020-05-17 09:57:38",
    "title": "DoYouEvenLearn",
    "description": "Essential Guide to keep up with AI/ML/DL/CV",
    "tag": "computer-vision"
  },
  {
    "id": 902,
    "created_on": "2020-05-18 00:57:27",
    "title": "Differentiable Adaptive Computation Time for Visual Reasoning ",
    "description": "DACT, a new algorithm for achieving adaptive computation time that, unlike existing approaches, is fully differentiable. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 903,
    "created_on": "2020-05-18 11:15:12",
    "title": "Semixup: In- and Out-of-Manifold Regularization",
    "description": "Semixup is a semi-supervised learning method based on in/out-of-manifold regularization.",
    "tag": "computer-vision"
  },
  {
    "id": 905,
    "created_on": "2020-05-18 14:40:51",
    "title": "Deep Reinforcement Learning for Supply Chain & Price Optimization",
    "description": "Explore how deep reinforcement learning methods can be applied in several basic supply chain and price management scenarios.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 906,
    "created_on": "2020-05-18 14:50:45",
    "title": "NLPAug",
    "description": "Data augmentation for NLP",
    "tag": "natural-language-processing"
  },
  {
    "id": 907,
    "created_on": "2020-05-18 14:53:33",
    "title": "TextAttack",
    "description": "A Python framework for building adversarial attacks on NLP models.",
    "tag": "natural-language-processing"
  },
  {
    "id": 913,
    "created_on": "2020-05-19 03:19:59",
    "title": "aitextgen",
    "description": "A robust Python tool for text-based AI training and generation using GPT-2.",
    "tag": "natural-language-processing"
  },
  {
    "id": 914,
    "created_on": "2020-05-19 03:25:11",
    "title": "How Hugging Face achieved a 2x performance boost for QA",
    "description": "Question Answering with DistilBERT in Node.js",
    "tag": "natural-language-processing"
  },
  {
    "id": 916,
    "created_on": "2020-05-19 08:11:05",
    "title": "Get Subreddit Suggestions for a Post",
    "description": "Trained on 4M Reddit posts from 4k Subreddits. End-to-end ML pipeline built with fasttext and FastAPI, deployed to Valohai.",
    "tag": "natural-language-processing"
  },
  {
    "id": 917,
    "created_on": "2020-05-19 13:45:03",
    "title": "Transfer Learning In NLP",
    "description": "A brief history of Transfer Learning In NLP",
    "tag": "natural-language-processing"
  },
  {
    "id": 918,
    "created_on": "2020-05-19 22:36:09",
    "title": "Accelerate your NLP pipelines using Hugging Face and ONNX",
    "description": "How the ONNX Runtime team and Hugging Face are working together to address challenges in training and deployment of Transformer models.",
    "tag": "natural-language-processing"
  },
  {
    "id": 919,
    "created_on": "2020-05-20 02:29:48",
    "title": "IntelliCode Compose: Code Generation Using Transformer",
    "description": "Code completion tool which is capable of predicting sequences of code tokens of arbitrary types, generating up to entire lines of syntactically correct code.",
    "tag": "natural-language-processing"
  },
  {
    "id": 920,
    "created_on": "2020-05-20 02:35:11",
    "title": "Attentron",
    "description": "Few-shot text-to-speech exploiting attention-based variable length embedding",
    "tag": "natural-language-processing"
  },
  {
    "id": 921,
    "created_on": "2020-05-20 02:39:09",
    "title": "Torch Points3D",
    "description": "Pytorch framework for doing deep learning on point clouds.",
    "tag": "computer-vision"
  },
  {
    "id": 922,
    "created_on": "2020-05-20 07:23:50",
    "title": "NLP Model Selection ",
    "description": "NLP model selection guide to make it easier to select models. This is prescriptive in nature and has to be used with caution.",
    "tag": "natural-language-processing"
  },
  {
    "id": 925,
    "created_on": "2020-05-20 16:20:28",
    "title": "Model-Agnostic Meta-Learning for Reinforcement Learning with TF2",
    "description": "Reimplementation of Model-Agnostic Meta-Learning (MAML) applied on Reinforcement Learning problems in TensorFlow 2.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 927,
    "created_on": "2020-05-21 03:16:17",
    "title": "FashionBERT",
    "description": "Text and image matching with adaptive loss for cross-modal retrieval.",
    "tag": "natural-language-processing"
  },
  {
    "id": 934,
    "created_on": "2020-05-21 03:45:38",
    "title": "\ud83d\udcc8 Automated Time Series Forecasting",
    "description": "This data app uses Facebook's open-source Prophet library to automatically forecast values into the future. ",
    "tag": "time-series"
  },
  {
    "id": 935,
    "created_on": "2020-05-21 14:22:01",
    "title": "Look inside the workings of \"Label Smoothing\"",
    "description": "This blog post describes how and why does \"trick\" of label smoothing improves the model accuracy and when should we use it ",
    "tag": "computer-vision"
  },
  {
    "id": 938,
    "created_on": "2020-05-22 01:01:32",
    "title": "Content and Style Disentanglement for Artistic Style Transfer",
    "description": "Hi-Res style transfer and interpolation between styles",
    "tag": "computer-vision"
  },
  {
    "id": 939,
    "created_on": "2020-05-22 03:08:40",
    "title": "Time Series Classification Using Deep Learning",
    "description": "In this article, I will introduce you to a new package called timeseries for fastai2 that I lately developed. ",
    "tag": "time-series"
  },
  {
    "id": 940,
    "created_on": "2020-05-22 03:16:29",
    "title": "TAO: A Large-Scale Benchmark for Tracking Any Object",
    "description": "A diverse dataset for Tracking Any Object (TAO) consisting of 2,907 high resolution videos, captured in diverse environments, which are half a minute long on ",
    "tag": "computer-vision"
  },
  {
    "id": 941,
    "created_on": "2020-05-22 03:21:10",
    "title": "BiT: Exploring Large-Scale Pre-training for Compute",
    "description": "We are excited to share the best BiT models pre-trained on public datasets, along with code in TF2, Jax, and PyTorch. ",
    "tag": "computer-vision"
  },
  {
    "id": 943,
    "created_on": "2020-05-22 06:27:43",
    "title": "Transfer Learning in NLP with Tensorflow Hub and Keras",
    "description": "Learn how to integrate and finetune tensorflow-hub modules in Tensorflow 2.0",
    "tag": "natural-language-processing"
  },
  {
    "id": 946,
    "created_on": "2020-05-22 07:57:14",
    "title": "Replicating Airbnb's Amenity Detection (documentary series)",
    "description": "Airbnb's engineering team shared an article on how they used computer vision to detection amenities in photos. It read like a recipe so I replicated it.",
    "tag": "computer-vision"
  },
  {
    "id": 947,
    "created_on": "2020-05-22 13:34:30",
    "title": "Self Driving Car",
    "description": "This project is a demonstration of a working model of self driving car \ud83d\ude97\ud83d\ude97 identifying and following lanes using powerful computer vision \ud83d\udd76\ud83d\udd76 algorithms.",
    "tag": "computer-vision"
  },
  {
    "id": 948,
    "created_on": "2020-05-22 13:39:15",
    "title": "Plant Disease Detection",
    "description": "This website help you to detect disease in your plant\ud83c\udf33 based to the plant's leaf\ud83c\udf43 image",
    "tag": "computer-vision"
  },
  {
    "id": 951,
    "created_on": "2020-05-23 03:19:00",
    "title": "YoloV3 implementation in keras and tensorflow 2.2",
    "description": "YoloV3 Real Time Object Detector in tensorflow 2.2.",
    "tag": "computer-vision"
  },
  {
    "id": 952,
    "created_on": "2020-05-23 03:22:11",
    "title": "Face Mask Detector",
    "description": "A simple Streamlit frontend for face mask detection in images using a pre-trained Keras CNN model + OpenCV and model interpretability.",
    "tag": "computer-vision"
  },
  {
    "id": 957,
    "created_on": "2020-05-23 09:18:52",
    "title": "Colbert AI",
    "description": "Colbert AI is a Deep Learning Language Model that generates text in the style of Stephen Colbert's famous monologues.",
    "tag": "natural-language-processing"
  },
  {
    "id": 961,
    "created_on": "2020-05-23 16:01:21",
    "title": "How to Build Robust Embeddings for Visual Similarity Tasks",
    "description": "This repository I package a bunch of tips and tricks to efficiently train deep learning models in computer vision",
    "tag": "computer-vision"
  },
  {
    "id": 962,
    "created_on": "2020-05-24 00:09:28",
    "title": "Basic ML Algorithms from scratch.",
    "description": "Implement basic Machine Learning Algorithms from scratch in python.",
    "tag": "natural-language-processing"
  },
  {
    "id": 963,
    "created_on": "2020-05-24 03:13:28",
    "title": "Build your first data warehouse with Airflow on GCP",
    "description": "What are the steps in building a data warehouse? What cloud technology should you use? How to use Airflow to orchestrate your pipeline?",
    "tag": "mlops"
  },
  {
    "id": 965,
    "created_on": "2020-05-24 08:14:30",
    "title": "GANs in Computer Vision : An article review series ",
    "description": "An article series where we review the most important research papers on GANs from 2015 to today.  6 articles,  20 papers, 20000 words",
    "tag": "computer-vision"
  },
  {
    "id": 966,
    "created_on": "2020-05-24 10:24:03",
    "title": "Building an Intelligent Twitter Bot",
    "description": "The volume of information going through Twitter per day makes it one of the best platforms to get information on any subject of interest. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 968,
    "created_on": "2020-05-24 16:40:46",
    "title": "Self Supervised Representation Learning in NLP",
    "description": "An overview of self-supervised pretext tasks in Natural Language Processing",
    "tag": "natural-language-processing"
  },
  {
    "id": 970,
    "created_on": "2020-05-24 20:01:29",
    "title": "Job Classification",
    "description": "Job Classification done using Techniques of NLP and ML.\r\n\r\nDataset used from Kaggle of Indeeed job posting.",
    "tag": "natural-language-processing"
  },
  {
    "id": 972,
    "created_on": "2020-05-25 03:23:16",
    "title": "Next Word Prediction",
    "description": "Using transformers to predict next word and predict <mask> word.",
    "tag": "natural-language-processing"
  },
  {
    "id": 974,
    "created_on": "2020-05-25 03:28:32",
    "title": "PixelLib",
    "description": "Pixellib is a library for performing segmentation of images. ",
    "tag": "computer-vision"
  },
  {
    "id": 978,
    "created_on": "2020-05-25 05:53:46",
    "title": "TensorFlow.js - Gesture Controlled 2048",
    "description": "Gesture Controlled 2048 built with TensorFlow.js",
    "tag": "computer-vision"
  },
  {
    "id": 979,
    "created_on": "2020-05-25 11:04:50",
    "title": "Taxi Demand Prediction NewYorkCity",
    "description": "Predict the number of pickups as accurately as possible for each region in a 10 -min interval.",
    "tag": "time-series"
  },
  {
    "id": 980,
    "created_on": "2020-05-25 14:52:17",
    "title": "Super-BPD for Fast Image Segmentation",
    "description": "We propose direction-based super-BPD, an alternative to superpixel, for fast generic image segmentation, achieving state-of-the-art real-time result.",
    "tag": "computer-vision"
  },
  {
    "id": 986,
    "created_on": "2020-05-26 03:47:15",
    "title": "Neural Topological SLAM for Visual Navigation",
    "description": "Topological representations for space that effectively leverage semantics and afford approximate geometric reasoning.",
    "tag": "computer-vision"
  },
  {
    "id": 987,
    "created_on": "2020-05-26 13:16:48",
    "title": "Zero To One For NLP",
    "description": "A collection of all resources for learning NLP",
    "tag": "natural-language-processing"
  },
  {
    "id": 989,
    "created_on": "2020-05-26 17:17:14",
    "title": "NLP for Developers: Shrinking Transformers | Rasa",
    "description": "In this video, Rasa Senior Developer Advocate Rachael will talk about different approaches to make transformer models smaller.",
    "tag": "natural-language-processing"
  },
  {
    "id": 991,
    "created_on": "2020-05-27 05:09:20",
    "title": "NLP Viewer \ud83e\udd17",
    "description": "A simple website for browsing popular NLP datasets.",
    "tag": "natural-language-processing"
  },
  {
    "id": 993,
    "created_on": "2020-05-27 05:26:33",
    "title": "DETR: End-to-End Object Detection with Transformers",
    "description": "A new method that views object detection as a direct set prediction problem. ",
    "tag": "computer-vision"
  },
  {
    "id": 997,
    "created_on": "2020-05-28 03:20:06",
    "title": "AutoSweep: Recovering 3D Editable Objects from a Single Photo",
    "description": "Fully automatic framework for extracting editable 3D objects directly from a single photograph.",
    "tag": "computer-vision"
  },
  {
    "id": 999,
    "created_on": "2020-05-28 03:32:05",
    "title": "MediaPipe",
    "description": "Simplest way for researchers and developers to build world-class ML solutions and applications for mobile, edge, cloud and the web. ",
    "tag": "computer-vision"
  },
  {
    "id": 1000,
    "created_on": "2020-05-28 03:33:52",
    "title": "CMU LTI Low Resource NLP Bootcamp 2020",
    "description": "A low-resource natural language and speech processing bootcamp held by the Carnegie Mellon University Language Technologies Institute in May 2020.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1007,
    "created_on": "2020-05-28 21:30:37",
    "title": "Humour.ai : Language Model that can crack Jokes",
    "description": "A Language model that can make you laugh. Humour.ai model tries to\r\ncomplete a sentence in a humourous way given some input words. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1008,
    "created_on": "2020-05-29 02:28:53",
    "title": "face mask detection ",
    "description": "detects whether a person wearing a mask or not",
    "tag": "computer-vision"
  },
  {
    "id": 1009,
    "created_on": "2020-05-29 02:47:06",
    "title": "Train ALBERT for NLP with TensorFlow on Amazon SageMaker",
    "description": "To train BERT in 1 hour, we efficiently scaled out to 2,048 NVIDIA V100 GPUs by improving the underlying infrastructure, network, and ML framework. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1010,
    "created_on": "2020-05-29 02:51:39",
    "title": "GPT-3: Language Models are Few-Shot Learners",
    "description": "We show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior SOTA.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1011,
    "created_on": "2020-05-29 02:57:44",
    "title": "ML in Production - Deployment Series",
    "description": "A multi-part blog series on deploying machine learning models in an automated, reproducible, and auditable manner.",
    "tag": "mlops"
  },
  {
    "id": 1013,
    "created_on": "2020-05-29 03:06:41",
    "title": "Guided Uncertainty-Aware Policy Optimization",
    "description": "Combining learning and model-based strategies for sample-efficient policy learning.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1018,
    "created_on": "2020-05-29 08:09:04",
    "title": "GOTURN-PyTorch",
    "description": "PyTorch implementation of \"Learning to Track at 100 FPS with Deep Regression Networks\"",
    "tag": "computer-vision"
  },
  {
    "id": 1019,
    "created_on": "2020-05-29 08:14:05",
    "title": "Visual Object Tracking using Adaptive Correlation Filters",
    "description": "This article gives step by step tutorial with code on understanding MOSSE tracking algorithm",
    "tag": "computer-vision"
  },
  {
    "id": 1020,
    "created_on": "2020-05-29 09:54:04",
    "title": "Applying Modern Best Practices to Autoencoders",
    "description": "This project applies best modern practices found in other areas of image research to autoencoders. Comparing models from other areas of image research.",
    "tag": "computer-vision"
  },
  {
    "id": 1021,
    "created_on": "2020-05-29 10:33:26",
    "title": "Sentiment analysis ",
    "description": "Sentiment analysis by combining three dataset amazon,yelp, IMDb reviews to train our,model to classify if a comment is negative or positive denoted by 0 and 1.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1022,
    "created_on": "2020-05-29 13:27:20",
    "title": "The designer - gpt2 bot that talks about UX Design",
    "description": "This twitter profile spits out thoughts on design and development. Trained with hundreds of Books on UX design and Front end development, it has opinions.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1024,
    "created_on": "2020-05-29 14:15:30",
    "title": "Sentiment Classification for UtaPass & KKBOX Reviews",
    "description": "Text classification for reviews of UtaPass & KKBOX using different deep learning models.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1025,
    "created_on": "2020-05-29 14:18:59",
    "title": "Forex Prediction",
    "description": "Using neural networks to predict movement of forex direction.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1026,
    "created_on": "2020-05-29 14:24:07",
    "title": "Lyrics-Based Music Genre Classifier",
    "description": "Classify the genre (Rock, Pop, Hip-Hop, Not Available, Metal, Other, Country, Jazz, Electronic, R&B, Indie, Folk) of the song by its lyrics.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1028,
    "created_on": "2020-05-29 14:39:16",
    "title": "ARBML",
    "description": "Implementation of many Arabic NLP and ML projects. Providing real time experience using many interfaces like web, command line and notebooks.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1032,
    "created_on": "2020-05-29 14:50:28",
    "title": "Pix2Pix with Tf-js",
    "description": "Implementation of web friendly ML models using TensorFlow.js. pix2pix, face segmentation, fast style transfer and many more ...",
    "tag": "computer-vision"
  },
  {
    "id": 1035,
    "created_on": "2020-05-29 16:11:11",
    "title": "Zero Shot Topic Classification",
    "description": "Bart with a classification head trained on MNLI.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1045,
    "created_on": "2020-05-30 01:35:24",
    "title": "Illustrated Guide to Transformers: Step by Step Explanation",
    "description": "In this post, we\u2019ll focus on the one paper that started it all, \u201cAttention is all you need\u201d.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1046,
    "created_on": "2020-05-30 01:39:25",
    "title": "Illustrated Guide to Transformers",
    "description": "A component by component breakdown analysis.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1055,
    "created_on": "2020-05-30 09:02:27",
    "title": "Automatic-Face-Detection-Annotation-and-Preprocessing",
    "description": "Automatically detect , annotate , collect the coordinates , convert to csv and to tfrecord",
    "tag": "computer-vision"
  },
  {
    "id": 1056,
    "created_on": "2020-05-30 09:08:31",
    "title": "Font Recognition Using Deep Learning - DeepFont ( Adobe )",
    "description": "DeepFont Paper is a technique created by Adobe.Inc to detect font from images using deep learning . They published their work as a paper for the public .",
    "tag": "computer-vision"
  },
  {
    "id": 1058,
    "created_on": "2020-05-30 09:43:39",
    "title": "SmartFeed.ai",
    "description": "NLP Based Article Recommendation System ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1059,
    "created_on": "2020-05-30 10:50:55",
    "title": "Wheat Detection \ud83c\udf3e",
    "description": "This is a project for detecting and creating bounding box of wheat heads \ud83c\udf3e.",
    "tag": "computer-vision"
  },
  {
    "id": 1068,
    "created_on": "2020-05-30 18:20:40",
    "title": "Effects of News Sentiments on Stock Predictions",
    "description": "Project is based on the Natural Language Processing technique called Sentiment Analysis. Stock market and news related to it as the subject of analysis.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1069,
    "created_on": "2020-05-30 20:04:49",
    "title": "NLP News Category",
    "description": "The objective of this repository is to create a NLP bot for when you give the robot the headline of the news and a short description it will return the genre.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1070,
    "created_on": "2020-05-30 20:06:48",
    "title": "AI Debate Master",
    "description": "Created and deployed a bot made to debate with a human on any\r\ngiven topic. Employed a Doc2Vec model using Gensim library in Python",
    "tag": "natural-language-processing"
  },
  {
    "id": 1075,
    "created_on": "2020-05-31 04:44:27",
    "title": "Zero-Shot Learning for Text Classification",
    "description": "A visual summary of \u201cTrain Once, Test Anywhere\u201d paper for zero-shot text classification",
    "tag": "natural-language-processing"
  },
  {
    "id": 1078,
    "created_on": "2020-05-31 05:04:44",
    "title": "Building Footprint Extraction",
    "description": "The project retrieves satellite imagery from Google and performs building footprint extraction using a U-Net. ",
    "tag": "computer-vision"
  },
  {
    "id": 1080,
    "created_on": "2020-05-31 05:23:23",
    "title": "Dash DETR Detection App",
    "description": "A User Interface for DETR built with Dash. 100% Python.",
    "tag": "computer-vision"
  },
  {
    "id": 1081,
    "created_on": "2020-05-31 05:28:53",
    "title": "AI Basketball Analysis",
    "description": "\ud83c\udfc0   AI web app and API to analyze basketball shots and shooting pose. ",
    "tag": "computer-vision"
  },
  {
    "id": 1083,
    "created_on": "2020-05-31 08:20:06",
    "title": "Reverse Image Search",
    "description": "Have you ever wondered how google image search works or How amazon can retrieve products similar to the image that we upload in the app/site? To achieve this ta",
    "tag": "computer-vision"
  },
  {
    "id": 1084,
    "created_on": "2020-05-31 08:22:45",
    "title": "Beginner\u2019s guide to Machine Learning Model Deployment",
    "description": "Are you a beginner in the field of machine learning and wondering how to bring your project to live. I'm was in the same situation when I started learning ML. M",
    "tag": "mlops"
  },
  {
    "id": 1093,
    "created_on": "2020-05-31 17:39:22",
    "title": "MedicalZoo PyTorch",
    "description": "A pytorch-based deep learning framework for multi-modal 2D/3D medical image segmentation",
    "tag": "computer-vision"
  },
  {
    "id": 1094,
    "created_on": "2020-05-31 19:11:28",
    "title": "Paraphrase Any Question with T5  (Text-To-Text  Transformer)",
    "description": "Given a question, generate paraphrased versions of the question with T5 transformer. Pretrained model and training script provided.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1100,
    "created_on": "2020-06-01 05:56:43",
    "title": "Movie Recommendation System",
    "description": "This is a web app which recommends movies based on their plots found on IMDb.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1104,
    "created_on": "2020-06-01 10:02:09",
    "title": "Convnet Galaxy Morphology Classifier",
    "description": "Classify galaxies from Hubble Tuning Fork using Convnet. ",
    "tag": "computer-vision"
  },
  {
    "id": 1107,
    "created_on": "2020-06-01 14:52:29",
    "title": "2nd Place Solution to Ship Identification Hackathon ",
    "description": "The problem statement was to identify the type of ship from photos taken from the survey boats. The hackathon was organized by Analytics Vidhya.",
    "tag": "computer-vision"
  },
  {
    "id": 1110,
    "created_on": "2020-06-01 16:44:55",
    "title": "Deep learning Architecture: AlexNet",
    "description": "Explaining network architecture for AlexNet",
    "tag": "computer-vision"
  },
  {
    "id": 1111,
    "created_on": "2020-06-01 18:13:26",
    "title": "Movement Pruning: Adaptive Sparsity by Fine-Tuning",
    "description": "We propose the use of movement pruning, a simple, deterministic first-order weight pruning method that is more adaptive to pretrained model fine-tuning.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1112,
    "created_on": "2020-06-01 18:57:31",
    "title": "Document search engine",
    "description": "NLP based search engine for single page pdf files.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1114,
    "created_on": "2020-06-01 21:00:24",
    "title": "Reinforcement Learning in JAX",
    "description": "Implementation of interesting Deep Reinforcement Learning Algorithms using JAX based libraries (flax, haiku and rlax) As of now tasks come from OpenAI gym",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1115,
    "created_on": "2020-06-01 21:07:53",
    "title": "Softbot design with WANNS",
    "description": "Soft robots are robots built from highly compliant materials, similar to those found in living organisms. This project explored CPPNs and WANNs to design them",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1121,
    "created_on": "2020-06-02 05:07:17",
    "title": "Motion2Vec",
    "description": "Semi-Supervised Representation Learning from Surgical Videos",
    "tag": "computer-vision"
  },
  {
    "id": 1122,
    "created_on": "2020-06-02 05:10:18",
    "title": "Machine Learning: Tests and Production",
    "description": "Best practices for testing ML-based systems.",
    "tag": "mlops"
  },
  {
    "id": 1130,
    "created_on": "2020-06-02 11:51:38",
    "title": "Generate True or False questions from any content",
    "description": "Automatically generate \u201cTrue or False\u201d questions like the ones you see in school textbooks using  OpenAI GPT2, Sentence BERT, and Berkley parser",
    "tag": "natural-language-processing"
  },
  {
    "id": 1131,
    "created_on": "2020-06-02 13:41:32",
    "title": "Sized Fill-in-the-blank or Multi Mask filling with RoBERTa",
    "description": "Sized fill-in-the-blank or conditional text filling is the idea of filling missing words of a sentence with the most probable choice of words.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1132,
    "created_on": "2020-06-02 14:56:10",
    "title": "T5 for Sentiment Span Extraction",
    "description": "Exploring how T5 works and applying it for sentiment span extraction.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1133,
    "created_on": "2020-06-02 14:58:58",
    "title": "Getting Started with Time Series analysis using Pandas",
    "description": "An introductory guide to get started with the Time Series datasets in Python",
    "tag": "time-series"
  },
  {
    "id": 1135,
    "created_on": "2020-06-02 15:06:34",
    "title": "Melanoma Detection with Pytorch",
    "description": "In this video, I show you how you can build a deep learning model to detect melanoma with a very high accuracy.",
    "tag": "computer-vision"
  },
  {
    "id": 1139,
    "created_on": "2020-06-02 19:53:37",
    "title": "RoBERTa \u2192 Longformer: Build a \"Long\" Version of Pretrained Models",
    "description": "This notebook replicates the procedure descriped in the Longformer paper to train a Longformer model starting from the RoBERTa checkpoint. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1145,
    "created_on": "2020-06-03 01:51:14",
    "title": "Learning Dexterity End-to-End",
    "description": "We trained a human-like robot hand to manipulate physical objects with unprecedented dexterity.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1148,
    "created_on": "2020-06-03 02:28:20",
    "title": "A Practical guide to building a conversational chatbot",
    "description": "Building a Chatbot from scratch using Keras and NLTK library for a customer service company",
    "tag": "natural-language-processing"
  },
  {
    "id": 1151,
    "created_on": "2020-06-03 07:25:27",
    "title": "Web Mining and Information theory",
    "description": "Mining the Web and playing with Natural Language processing. Implementing Information retrieval System tasks. Going towards the NLP and Performing Machine Learning algorithms. Through these codes and problems, I have understood the information retrieval process of any search engine. These are very useful problems towards sentiment analysis.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1155,
    "created_on": "2020-06-03 15:22:11",
    "title": "GaborNet",
    "description": "Modified network architecture that focuses on improving convergence and reducing training complexity.",
    "tag": "computer-vision"
  },
  {
    "id": 1159,
    "created_on": "2020-06-03 18:17:01",
    "title": "Learning To Classify Images Without Labels",
    "description": "A two-step approach where feature learning and clustering are decoupled.",
    "tag": "computer-vision"
  },
  {
    "id": 1162,
    "created_on": "2020-06-03 22:05:30",
    "title": "Deep Q-Network on Space Invaders. ",
    "description": "This is a PyTorch implementation of a Deep Q-Network agent trained to play the Atari 2600 game of Space Invaders.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1165,
    "created_on": "2020-06-04 03:53:43",
    "title": "YOLOv4",
    "description": "A TensorFlow 2.0 implementation of YOLOv4: Optimal Speed and Accuracy of Object Detection.",
    "tag": "computer-vision"
  },
  {
    "id": 1166,
    "created_on": "2020-06-04 03:55:53",
    "title": "Acme: A Research Framework for Reinforcement Learning",
    "description": "A library of reinforcement learning components and agents.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1167,
    "created_on": "2020-06-04 03:58:21",
    "title": "From Pre-trained Word Embeddings to Pre-trained Language Models",
    "description": "from Static Word Embedding to Dynamic (Contextualized) Word Embedding.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1172,
    "created_on": "2020-06-04 07:01:13",
    "title": "Converting images to TF Records",
    "description": "A Colab Notebook showing how to convert an image dataset (for classification) to TF Records and more.",
    "tag": "computer-vision"
  },
  {
    "id": 1176,
    "created_on": "2020-06-04 09:10:07",
    "title": "doc2vec Paragraph Embeddings for Text Classification",
    "description": "Text classification model which uses gensim's Doc2Vec for generating paragraph embeddings and scikit-learn Logistic Regression for classification. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1178,
    "created_on": "2020-06-04 12:19:52",
    "title": "Machine Learning with Fastai",
    "description": "The fastai library is based on research into deep learning best practices undertaken at fast.ai, and includes support for Vision, Text, tabular and Collab",
    "tag": "computer-vision"
  },
  {
    "id": 1180,
    "created_on": "2020-06-04 14:58:19",
    "title": "The Transformer \u2026 \u201cExplained\u201d?",
    "description": "An intuitive explanation of the Transformer by motivating it through the lens of CNNs, RNNs, etc.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1181,
    "created_on": "2020-06-04 16:28:24",
    "title": "TensorflowTTS: Real-Time SOTA Speech Synthesis for Tensorflow 2.0",
    "description": "TensorflowTTS provides real-time state-of-the-art speech synthesis architectures such as Tacotron2, Melgan, FastSpeech.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1185,
    "created_on": "2020-06-04 22:36:31",
    "title": "PyTorch Transformers Tutorials",
    "description": "A set of annotated Jupyter notebooks, that give user a template to fine-tune transformers model to downstream NLP tasks such as classification, NER etc. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1192,
    "created_on": "2020-06-05 04:28:52",
    "title": "BERT Summarization",
    "description": "This folder contains colab notebooks that guide you through the summarization by BERT and GPT-2 to play with your data.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1194,
    "created_on": "2020-06-05 04:35:14",
    "title": "Divide Hugging Face Transformers Training Time By 2",
    "description": "Reducing training time helps to iterate more in a fixed budget time and thus achieve better results.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1199,
    "created_on": "2020-06-05 15:39:56",
    "title": "How NLP has evolved for Financial Sentiment Analysis",
    "description": "Do we still need humans to read boring financial statements?",
    "tag": "natural-language-processing"
  },
  {
    "id": 1202,
    "created_on": "2020-06-05 17:51:33",
    "title": "The NLP Pandect - All NLP resources in one place",
    "description": "The NLP Pandect was created to help you find almost anything related to Natural Language Processing that is available online.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1203,
    "created_on": "2020-06-05 18:18:18",
    "title": "Summary of \ud83e\udd17 Transformers Models",
    "description": "A high-level summary of the differences between each model in HuggingFace's Transformer library.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1204,
    "created_on": "2020-06-05 22:56:38",
    "title": "Snaked: Classifying Snake Species using Images",
    "description": "Proof of concept that it is possible to identify snake species and whether poisonous from photographs (PyTorch code/model with Android app)",
    "tag": "computer-vision"
  },
  {
    "id": 1211,
    "created_on": "2020-06-06 15:13:13",
    "title": "Literate Lamp: Answering Question with Common Sense",
    "description": "We study the problem of answering questions that require common sense to be answered using Transformer-based models and the ConceptNet knowledge base.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1215,
    "created_on": "2020-06-06 19:00:39",
    "title": "Pytorch Faster RCNN",
    "description": "Fine Tune Faster RCNN in pytorch for your task.",
    "tag": "computer-vision"
  },
  {
    "id": 1222,
    "created_on": "2020-06-07 04:34:58",
    "title": "Paragraph Summarizer",
    "description": "Uses the extractive way of summarizing the text by finding the score and ranking it.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1223,
    "created_on": "2020-06-07 04:39:32",
    "title": "Leafy: Plant Leaf Classifier",
    "description": "The sequential model trained on images from the leafsnap.com",
    "tag": "computer-vision"
  },
  {
    "id": 1236,
    "created_on": "2020-06-07 21:03:31",
    "title": "COVID-Q: A Dataset of 1,690 Questions about COVID-19",
    "description": "This dataset consists of COVID-19 questions which have been annotated into a broad category (e.g. Transmission, Prevention) and a more specific class such that ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1237,
    "created_on": "2020-06-08 03:43:45",
    "title": "Keras notifications on Slack!",
    "description": "Get slack notifications of your model's training progress when training with Keras (or tf.keras)",
    "tag": "computer-vision"
  },
  {
    "id": 1239,
    "created_on": "2020-06-08 07:05:15",
    "title": "Zero-shot Text Classification With Generative Language Models",
    "description": "An overview of a text generation approach to zero-shot text classification with GPT-2",
    "tag": "natural-language-processing"
  },
  {
    "id": 1241,
    "created_on": "2020-06-08 08:25:01",
    "title": "Funnel-Transformer: Filtering out Sequential Redundancy",
    "description": "Funnel-Transformer is a self-attention model that gradually compresses the sequence of hidden states to a shorter one and hence reduces the computation cost.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1243,
    "created_on": "2020-06-08 08:39:34",
    "title": "Timeseries Anomaly Detection using an Autoencoder",
    "description": "Detect anomalies in a timeseries using an Autoencoder.",
    "tag": "time-series"
  },
  {
    "id": 1246,
    "created_on": "2020-06-08 09:47:02",
    "title": "Fairseq-tagging",
    "description": "a Fairseq fork for sequence tagging/labeling tasks\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1249,
    "created_on": "2020-06-08 16:59:01",
    "title": "Know-Corona : Kaggle COVID-19 Open Research Dataset Challenge (CO",
    "description": "NLP/state-of-the-art language model (BERT) based Question & Answering pipeline to answer all task questions after analyzing articles abstract of COVID-19, SARS-",
    "tag": "natural-language-processing"
  },
  {
    "id": 1251,
    "created_on": "2020-06-08 18:38:49",
    "title": "Automatic Asset Classification",
    "description": "This project aims to automate the task of labelling images of flood defence assets as well as clustering images to find possibly better groupings.",
    "tag": "computer-vision"
  },
  {
    "id": 1255,
    "created_on": "2020-06-09 01:50:33",
    "title": "TransformerTTS",
    "description": "\ud83e\udd16\ud83d\udcac Transformer TTS: Implementation of a non-autoregressive Transformer based neural network for text to speech.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1257,
    "created_on": "2020-06-09 01:58:48",
    "title": "How Big Should My Language Model Be?",
    "description": "Tool to explore language model training and optimize the compute costs.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1258,
    "created_on": "2020-06-09 02:04:49",
    "title": "MSeg: A Composite Dataset for Multi-domain Semantic Segmentation",
    "description": "A composite dataset that unifies semantic segmentation datasets from different domains.",
    "tag": "computer-vision"
  },
  {
    "id": 1259,
    "created_on": "2020-06-09 02:11:15",
    "title": "Network Fusion for Content Creation With Conditional Inns",
    "description": "We present a method to repurpose powerful, existing models for new tasks, even though they have never been designed for them.",
    "tag": "computer-vision"
  },
  {
    "id": 1260,
    "created_on": "2020-06-09 02:14:59",
    "title": "Advanced Deep Learning for Computer Vision (ADL4CV)",
    "description": "The Visual Computing Group offers a variety of lectures and seminars on a regular basis, covering hot areas in computer graphics, vision, and machine learning.",
    "tag": "computer-vision"
  },
  {
    "id": 1266,
    "created_on": "2020-06-09 16:09:08",
    "title": "Text Classification using Bert from Tensorflow-Hub",
    "description": "This Tutorial helps to learn about Bert Models for Classification  task on a #Tweet dataset.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1272,
    "created_on": "2020-06-10 05:13:41",
    "title": "Linformer: Self-Attention with Linear Complexity",
    "description": "We demonstrate that the self-attention mechanism can be approximated by a low-rank matrix.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1274,
    "created_on": "2020-06-10 05:21:00",
    "title": "Getting Machine Learning to Production",
    "description": "Machine learning is hard and there are a lot, a lot of moving pieces.",
    "tag": "mlops"
  },
  {
    "id": 1275,
    "created_on": "2020-06-10 05:24:07",
    "title": "Exploration Strategies in Deep Reinforcement Learning",
    "description": "Exploitation versus exploration is a critical topic in reinforcement learning. This post introduces several common approaches for better exploration in Deep RL.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1278,
    "created_on": "2020-06-10 12:50:41",
    "title": "Automatically Generate Multiple Choice Questions (MCQs) ",
    "description": "Automatically Generate Multiple Choice Questions (MCQs) from any content with BERT Summarizer, Wordnet, and Conceptnet",
    "tag": "natural-language-processing"
  },
  {
    "id": 1286,
    "created_on": "2020-06-10 17:24:19",
    "title": "Exploring Knowledge Captured in Probability of Strings",
    "description": "An exploration of simple knowledge captured by language models with code examples",
    "tag": "natural-language-processing"
  },
  {
    "id": 1287,
    "created_on": "2020-06-10 18:27:24",
    "title": "BERT Loses Patience: Fast and Robust Inference with Early Exit",
    "description": "Patience-based Early Exit, a inference method that can be used as a plug-and-play technique to simultaneously improve the efficiency of a pretrained LM.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1298,
    "created_on": "2020-06-11 04:18:27",
    "title": "PEGASUS: a SOTA model for Abstractive Text Summarization",
    "description": "A State-of-the-Art Model for Abstractive Text Summarization.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1301,
    "created_on": "2020-06-11 04:29:24",
    "title": "Big GANs Are Watching You",
    "description": " We demonstrate that object saliency masks for GAN-produced images can be obtained automatically with BigBiGAN.",
    "tag": "computer-vision"
  },
  {
    "id": 1309,
    "created_on": "2020-06-11 19:04:31",
    "title": "Sentiment Analysis on News Article",
    "description": "Used Twitter API to extract news-related tweets. Did some preprocessing and then calculated the tweets' polarity.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1310,
    "created_on": "2020-06-11 20:30:38",
    "title": "GPT-3 Language Model: A Technical Overview",
    "description": "Technical details of the GPT-3 model, training, inference and what to expect next. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1312,
    "created_on": "2020-06-11 20:37:47",
    "title": "OpenAI API",
    "description": "API for accessing new AI models developed by OpenAI.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1320,
    "created_on": "2020-06-12 04:17:08",
    "title": "Implementation of a Contextual Chatbot in PyTorch",
    "description": "Simple chatbot implementation with PyTorch.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1325,
    "created_on": "2020-06-12 11:06:34",
    "title": "Author Identification using Doc2Vec",
    "description": "Web app of an author identification model trained on PAN 2012 dataset and Kaggle's Spooky Authorship Dataset",
    "tag": "natural-language-processing"
  },
  {
    "id": 1329,
    "created_on": "2020-06-12 12:44:18",
    "title": "Training game agents with supervised learning",
    "description": "This is a continuing research project trying find ways to learn complex tasks such as games without using Reinforcement Learning.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1363,
    "created_on": "2020-06-13 13:46:44",
    "title": "Short Notes on Batch Constrained Deep Reinforcement Learning",
    "description": "Blog article on Off-Policy Deep Reinforcement Learning without Exploration paper by Fujimoto et al. (ICML 2019)",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1371,
    "created_on": "2020-06-13 17:16:07",
    "title": "Baymax - ChatBot",
    "description": "Baymax Chatbot is a part of my summer training program @AdHoc Networks, Jaipur.\r\n\r\nA chatbot that allows user to signup and login to maintain their record. When c",
    "tag": "natural-language-processing"
  },
  {
    "id": 1372,
    "created_on": "2020-06-13 17:21:43",
    "title": "How to Evaluate Longformer on TriviaQA using NLP",
    "description": "We will evaluate a pretrained LongformerForQuestionAnswering model on the validation dataset of TriviaQA.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1374,
    "created_on": "2020-06-13 17:28:13",
    "title": "Extracting Structured Data from Templatic Documents",
    "description": "Automatically extract data from structured documents\u2014invoices, receipts, etc.\u2014with the potential to streamline many business workflows.",
    "tag": "computer-vision"
  },
  {
    "id": 1392,
    "created_on": "2020-06-13 20:58:33",
    "title": "StackOver Flow Data Analysis",
    "description": "Analysing certain aspects of the stack overflow data and creating \"Tag Predictor\" which predicts tag based on the post posted. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1398,
    "created_on": "2020-06-14 05:51:06",
    "title": "Super-resolution Variational Auto-Encoders",
    "description": "VAE with RealNVP prior and Super-Resolution VAE in PyTorch.",
    "tag": "computer-vision"
  },
  {
    "id": 1399,
    "created_on": "2020-06-14 05:57:16",
    "title": "Video object grounding",
    "description": "Video object grounding using semantic roles in language description. ",
    "tag": "computer-vision"
  },
  {
    "id": 1418,
    "created_on": "2020-06-14 17:43:34",
    "title": "Short Notes on Behavior Regularized Offline RL",
    "description": "Blog Article on Behavior Regularized Offline Reinforcement Learning by Yifan Wu et al. (2019)",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1423,
    "created_on": "2020-06-14 22:10:57",
    "title": "Entity Embedding with LSTM for Time-Series",
    "description": "Demonstration of using LSTM for forecasting with structured time-series data, containing categorical and numerical features.",
    "tag": "time-series"
  },
  {
    "id": 1424,
    "created_on": "2020-06-15 02:27:55",
    "title": "Why We Switched from Flask to FastAPI for Production ML",
    "description": "The most popular tool isn\u2019t always the best.",
    "tag": "mlops"
  },
  {
    "id": 1425,
    "created_on": "2020-06-15 02:31:48",
    "title": "Building a Captcha OCR in TF2.0",
    "description": "A Kaggle notebook showcasing the use of an Endpoint layer for CTC loss function used for building a Captcha Reader in TensorFlow.",
    "tag": "computer-vision"
  },
  {
    "id": 1426,
    "created_on": "2020-06-15 02:34:27",
    "title": "From GRU to Transformer",
    "description": "How recurrent units and self-attention are related to each other.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1427,
    "created_on": "2020-06-15 02:40:48",
    "title": "101 Ways to Solve Search - Dair AI ft. Pratik Bhavsar",
    "description": "A comprehensive overview of explaining how NLP is used for search.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1430,
    "created_on": "2020-06-15 04:24:12",
    "title": "Melanoma Classification",
    "description": "This was Shubhamai 3-week project for working a new kaggle competition and deploying a web application to predicting benign or malignant based on images.",
    "tag": "computer-vision"
  },
  {
    "id": 1434,
    "created_on": "2020-06-15 07:52:13",
    "title": "Universal Sentence Encoder Visually Explained",
    "description": "A deep-dive into how Universal Sentence Encoder learns to generate fixed-length sentence embeddings",
    "tag": "natural-language-processing"
  },
  {
    "id": 1438,
    "created_on": "2020-06-15 11:06:35",
    "title": "Multimodal Meme Classification",
    "description": "UNITER has given state of the art results in various image-text related problems. This project aims at finetuning UNITER to solve Hateful memes challenge",
    "tag": "computer-vision"
  },
  {
    "id": 1445,
    "created_on": "2020-06-15 17:49:16",
    "title": "Image Smoothing via L0 Gradient Minimization",
    "description": "This is a edge-aware image smoothing algorithm. This algorithm tries to smoothen the image while preserving the global structural information of the image. ",
    "tag": "computer-vision"
  },
  {
    "id": 1450,
    "created_on": "2020-06-15 21:00:47",
    "title": "BERT NLP \u2014 How To Build a Question Answering Bot",
    "description": "Understanding the intuition with hands-on PyTorch code for BERT fine-tuned on SQuAD.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1451,
    "created_on": "2020-06-16 01:21:09",
    "title": "EfficientDet (PyTorch)",
    "description": "A PyTorch implementation of EfficientDet faithful to the original Google implementation with ported weights.",
    "tag": "computer-vision"
  },
  {
    "id": 1453,
    "created_on": "2020-06-16 01:32:49",
    "title": "Interpretable Machine Learning for Computer Vision",
    "description": "Recent progress we made on visualization, interpretation, and explanation methodologies for analyzing both the data and the models in computer vision.",
    "tag": "computer-vision"
  },
  {
    "id": 1455,
    "created_on": "2020-06-16 02:32:53",
    "title": "Predicting Unintentional Action in Video",
    "description": "We introduce a dataset of in-the-wild videos of unintentional action, as well as a suite of tasks for recognizing, localizing, and anticipating its onset. ",
    "tag": "computer-vision"
  },
  {
    "id": 1457,
    "created_on": "2020-06-16 02:46:25",
    "title": " Synthesizing High-Resolution Images with StyleGAN2",
    "description": "Developed by NVIDIA Researchers, StyleGAN2 yields state-of-the-art results in data-driven unconditional generative image modeling.",
    "tag": "computer-vision"
  },
  {
    "id": 1458,
    "created_on": "2020-06-16 02:51:13",
    "title": "PIFuHD: High-Resolution 3D Human Digitization ",
    "description": "This repository contains a pytorch implementation of \"Multi-Level Pixel-Aligned Implicit Function for High-Resolution 3D Human Digitization\".",
    "tag": "computer-vision"
  },
  {
    "id": 1459,
    "created_on": "2020-06-16 03:06:10",
    "title": "SuperGlue: Learning Feature Matching with Graph Neural Networks",
    "description": "SuperGlue, a neural network that matches two sets of local features by jointly finding correspondences and rejecting non-matchable points.",
    "tag": "graph-learning"
  },
  {
    "id": 1460,
    "created_on": "2020-06-16 03:21:07",
    "title": "Instance Shadow Detection",
    "description": "Instance shadow detection aims to find shadow instances paired with object instances.",
    "tag": "computer-vision"
  },
  {
    "id": 1461,
    "created_on": "2020-06-16 03:24:02",
    "title": "Detectron2",
    "description": "FAIR's next-generation platform for object detection and segmentation.",
    "tag": "computer-vision"
  },
  {
    "id": 1462,
    "created_on": "2020-06-16 03:28:40",
    "title": "Open Compound Domain Adaptation",
    "description": "Pytorch implementation for \"Open Compound Domain Adaptation\"",
    "tag": "computer-vision"
  },
  {
    "id": 1473,
    "created_on": "2020-06-16 22:37:58",
    "title": "tslearn",
    "description": "A machine learning toolkit dedicated to time-series data.",
    "tag": "time-series"
  },
  {
    "id": 1475,
    "created_on": "2020-06-16 22:45:15",
    "title": "PyTorch3D",
    "description": "FAIR's library of reusable components for deep learning with 3D data.",
    "tag": "computer-vision"
  },
  {
    "id": 1476,
    "created_on": "2020-06-16 22:48:45",
    "title": "Course Review - Causal Inference",
    "description": "Types of understanding that causal inference researchers value.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1478,
    "created_on": "2020-06-16 22:56:31",
    "title": "Unsupervised Learning of Probably Symmetric Deformable 3D Objects",
    "description": "A method to learn 3D deformable object categories from raw single-view images, without external supervision.",
    "tag": "computer-vision"
  },
  {
    "id": 1480,
    "created_on": "2020-06-16 23:06:13",
    "title": "A Guide to Natural Language Processing With AllenNLP",
    "description": "basics of using AllenNLP",
    "tag": "natural-language-processing"
  },
  {
    "id": 1482,
    "created_on": "2020-06-17 12:12:03",
    "title": "Real Time Object Detection using CNN YOLO",
    "description": "This project is done on real time object detection using a deep learning object detection algorithm i.e., YOLO.",
    "tag": "computer-vision"
  },
  {
    "id": 1483,
    "created_on": "2020-06-17 14:38:33",
    "title": "Short Notes on Model-Based Offline Reinforcement Learning (MOReL)",
    "description": "Blog article on Model-Based Offline Reinforcement Learning (MOReL) paper by Rahul Kidambi & Aravind Rajeswaran et al.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1485,
    "created_on": "2020-06-17 16:33:50",
    "title": "Sudoku-Game-Solver",
    "description": "This is a Computer Vision Application that solves a 9x9 sudoku board game using Deep Learning and Backtracking algorithm.",
    "tag": "computer-vision"
  },
  {
    "id": 1488,
    "created_on": "2020-06-17 19:27:36",
    "title": "Smart Picture Editor",
    "description": "Tool to automatically remove unwanted objects from photos",
    "tag": "computer-vision"
  },
  {
    "id": 1491,
    "created_on": "2020-06-18 00:04:34",
    "title": "Image GPT: Generative Pretraining from Pixels",
    "description": " Transformers trained on pixel sequences can generate coherent image completions and samples.",
    "tag": "computer-vision"
  },
  {
    "id": 1492,
    "created_on": "2020-06-18 00:06:53",
    "title": "Q*BERT",
    "description": "Agents that build knowledge graphs and explore textual worlds by asking questions.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1494,
    "created_on": "2020-06-18 00:14:40",
    "title": "Object Goal Navigation using Goal-oriented Semantic Exploration",
    "description": "Embodied interactive learning for object detection by using semantic curiosity to learn an exploration policy on set of the training environments.",
    "tag": "computer-vision"
  },
  {
    "id": 1499,
    "created_on": "2020-06-18 13:41:39",
    "title": "History of Language Models - Alec Radford",
    "description": "A quick history of language models",
    "tag": "natural-language-processing"
  },
  {
    "id": 1501,
    "created_on": "2020-06-18 18:17:18",
    "title": "Traffic-Sign-Recognition-Using-Deep-Learning",
    "description": "The training dataset contains around 39,000 images while test dataset contains around 12,000 images containing 43 different classes. We will be using Convolutio",
    "tag": "computer-vision"
  },
  {
    "id": 1502,
    "created_on": "2020-06-18 19:45:49",
    "title": "Generate Boolean (Yes/No) Questions From Any Content ",
    "description": "Question generation algorithm trained on the BoolQ dataset using T5 text-to-text transformer model.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1504,
    "created_on": "2020-06-19 06:19:25",
    "title": "Fast Neural Style Transfer (feed-forward method) \u26a1\ud83d\udcbb + \ud83c\udfa8 = \u2764\ufe0f",
    "description": "This repo contains a concise PyTorch implementation of the original feed-forward NST paper.",
    "tag": "computer-vision"
  },
  {
    "id": 1505,
    "created_on": "2020-06-19 06:22:56",
    "title": "Diverse Image Generation via Self-Conditioned GANs",
    "description": "A simple but effective unsupervised method for generating realistic & diverse images using a class-conditional GAN model without using manually annotated class.",
    "tag": "computer-vision"
  },
  {
    "id": 1506,
    "created_on": "2020-06-19 06:26:17",
    "title": "Using GitHub Actions for MLOps & Data Science",
    "description": "A collection of resources on how to facilitate Machine Learning Ops with GitHub.",
    "tag": "mlops"
  },
  {
    "id": 1508,
    "created_on": "2020-06-19 06:43:47",
    "title": "Long Form Question Answering with ELI5",
    "description": "A model for open domain long form question answering.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1511,
    "created_on": "2020-06-19 06:54:23",
    "title": "RepNet - Class Agnostic Video Repetition Counting in the Wild",
    "description": "Counting Out Time: Class Agnostic Video Repetition Counting in the Wild",
    "tag": "computer-vision"
  },
  {
    "id": 1515,
    "created_on": "2020-06-19 16:37:10",
    "title": "Cut, Paste and Learn: Surprisingly Easy Synthesis for Detection",
    "description": "Generate synthetic scenes and bounding box annotations for object detection.",
    "tag": "computer-vision"
  },
  {
    "id": 1519,
    "created_on": "2020-06-20 05:40:46",
    "title": "Image and Bounding Box Annotation Slicer",
    "description": "This easy-to-use library slices (also resizes) images and its bounding box annotations into tiles of specific sizes or any arbitrary number of equal parts. \u2702\ufe0f",
    "tag": "computer-vision"
  },
  {
    "id": 1524,
    "created_on": "2020-06-20 10:42:25",
    "title": "Machine Learning Projects ",
    "description": "This Repo contains projects done by me while learning the basics. All the familiar types of regression, classification, and clustering methods have been used.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1525,
    "created_on": "2020-06-20 16:21:38",
    "title": "Huggingtweets",
    "description": "This is a streamlit app built around the huggingtweets project. I fine-tune a pre-trained gpt2 model to tweet like a user given twitter handle.  ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1528,
    "created_on": "2020-06-20 22:06:48",
    "title": "The Future of Computer Vision is Self-Supervised Learning",
    "description": "Talk by Yann Lecun on the applications of self-supervised learning on computer vision during CVPR 2020.",
    "tag": "computer-vision"
  },
  {
    "id": 1529,
    "created_on": "2020-06-20 22:11:14",
    "title": "Using Selective Attention in Reinforcement Learning Agents",
    "description": "In this work, we establish that self-attention can be viewed as a form of indirect encoding, which enables us to construct highly parameter-efficient agents.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1539,
    "created_on": "2020-06-21 12:45:42",
    "title": "A Visual Guide to FastText Word Embeddings",
    "description": "A deep-dive into how FastText enriches word vectors with sub-word information  ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1540,
    "created_on": "2020-06-21 13:03:19",
    "title": "codeBERT - Masked Language Model for source code ",
    "description": "Tutorial to use codeBERT a MLM for Python code. Model trained from scratch using roBERTa",
    "tag": "natural-language-processing"
  },
  {
    "id": 1542,
    "created_on": "2020-06-21 20:46:12",
    "title": "Autocoder - Finetuning GPT-2 for Auto Code Completion",
    "description": "A basic and simple tool for code auto completion, built upon GPT-2",
    "tag": "natural-language-processing"
  },
  {
    "id": 1546,
    "created_on": "2020-06-22 00:46:32",
    "title": "DeepSNAP",
    "description": "Python library assists deep learning on graphs.",
    "tag": "graph-learning"
  },
  {
    "id": 1547,
    "created_on": "2020-06-22 00:50:30",
    "title": "RoBERTa meets TPUs",
    "description": "Understanding and applying the RoBERTa model to the current challenge.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1549,
    "created_on": "2020-06-22 01:00:45",
    "title": "Deep Model-Based RL for Real-World Robotic Control",
    "description": "Short talk about model-based RL by Sergey Levine.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1551,
    "created_on": "2020-06-22 03:17:48",
    "title": "Pokemon Classifier",
    "description": "I want to build a classifier that can classify 150 types of Pokemon.",
    "tag": "computer-vision"
  },
  {
    "id": 1552,
    "created_on": "2020-06-22 03:45:01",
    "title": "Workshop on Scalability in Autonomous Driving - Andrej Karpathy",
    "description": "An overview of autonomous driving and computer vision at Tesla.",
    "tag": "computer-vision"
  },
  {
    "id": 1560,
    "created_on": "2020-06-22 15:56:00",
    "title": "Battle-Tested Techniques for Scoping Machine Learning Projects",
    "description": "One of the challenges of managing an ML project is project scoping. Even small changes in data or architecture can create huge differences in model outputs.",
    "tag": "mlops"
  },
  {
    "id": 1563,
    "created_on": "2020-06-22 16:04:10",
    "title": "Classify photos in 600 classes using nine million Open Images",
    "description": "If you\u2019re looking build an image classifier but need training data, look no further than Google Open Images.",
    "tag": "computer-vision"
  },
  {
    "id": 1569,
    "created_on": "2020-06-22 16:52:01",
    "title": "Trackable",
    "description": "The project deals with tracking humans in a narrow hallway under different lighting conditions.",
    "tag": "computer-vision"
  },
  {
    "id": 1571,
    "created_on": "2020-06-23 02:04:12",
    "title": "Stochastic Segmentation Networks",
    "description": "An efficient probabilistic method for modelling aleatoric uncertainty with any image segmentation network architecture.",
    "tag": "computer-vision"
  },
  {
    "id": 1575,
    "created_on": "2020-06-23 02:30:20",
    "title": "Deep Learning for Computer Vision ",
    "description": "Special topics class on deep learning for computer vision from the University of Michigan taught by Justin Johnson.",
    "tag": "computer-vision"
  },
  {
    "id": 1576,
    "created_on": "2020-06-23 02:37:15",
    "title": "VPSNet for Video Panoptic Segmentation",
    "description": "Video panoptic segmentation by generating consistent panoptic segmentation as well as an association of instance ids across video frames.",
    "tag": "computer-vision"
  },
  {
    "id": 1580,
    "created_on": "2020-06-24 03:00:16",
    "title": "What I Learned From Looking at 200 Machine Learning Tools",
    "description": "To better understand the landscape of available tools for machine learning production, I decided to look up every AI/ML tool I could find.",
    "tag": "mlops"
  },
  {
    "id": 1581,
    "created_on": "2020-06-24 03:04:31",
    "title": "Discovering Symbolic Models from Deep Learning w/ Inductive Bias",
    "description": "A general approach to distill symbolic representations of a learned deep model by introducing strong inductive biases.",
    "tag": "graph-learning"
  },
  {
    "id": 1585,
    "created_on": "2020-06-24 03:18:20",
    "title": "Breaking the cycle\u2014Colleagues are all you need",
    "description": "A novel approach to performing image-to-image translation between unpaired domains.",
    "tag": "computer-vision"
  },
  {
    "id": 1587,
    "created_on": "2020-06-24 03:25:25",
    "title": "Deep Learning Based Text Classification: A Comprehensive Review",
    "description": "An overview of deep learning approaches to text classification.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1588,
    "created_on": "2020-06-24 03:29:51",
    "title": "Multi-task Training with Hugging Face Transformers and NLP",
    "description": " A recipe for multi-task training with Transformers' Trainer and NLP datasets.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1589,
    "created_on": "2020-06-24 03:33:09",
    "title": "jiant",
    "description": "A software toolkit for research on general-purpose text understanding models.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1592,
    "created_on": "2020-06-24 04:27:58",
    "title": "Text Classification",
    "description": "Re-implemented an article (link is given below) which was on Text classification with CNN, beside this I tried out some ML classification algorithm.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1595,
    "created_on": "2020-06-24 15:42:20",
    "title": "multi-task-NLP",
    "description": "A utility toolkit enabling NLP developers to easily train and infer a single model for multiple tasks.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1597,
    "created_on": "2020-06-25 00:17:39",
    "title": "Maximizing Business Impact with Machine Learning",
    "description": "how to effectively leverage machine learning to build intelligent products as efficiently as possible.",
    "tag": "mlops"
  },
  {
    "id": 1598,
    "created_on": "2020-06-25 00:29:18",
    "title": "Automatic Data Augmentation for  Generalization in Deep RL",
    "description": "We compare three approaches for automatically finding an appropriate augmentation combined with two novel regularization terms for the policy and value function",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1599,
    "created_on": "2020-06-25 00:42:36",
    "title": "High-Fidelity Generative Image Compression",
    "description": "How to combine Generative Adversarial Networks and learned compression to obtain a state-of-the-art generative lossy compression system.",
    "tag": "computer-vision"
  },
  {
    "id": 1600,
    "created_on": "2020-06-25 00:45:26",
    "title": "BERT Distillation with Catalyst",
    "description": "How to distill BERT with Catalyst.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1602,
    "created_on": "2020-06-25 04:03:38",
    "title": "Unet Model for Image Segmentation With EfficientNet Encoder",
    "description": "Implemented using tensorflow 2.2.0 with custom train and test step.",
    "tag": "computer-vision"
  },
  {
    "id": 1603,
    "created_on": "2020-06-25 10:40:56",
    "title": "A Million of ML Predictions at the Tip of Your Fingers",
    "description": "Announcement - SashiDo is breaking the barrier to Machine Learning by introducing a fully open-sourced Content Moderation Service.",
    "tag": "computer-vision"
  },
  {
    "id": 1605,
    "created_on": "2020-06-26 02:19:39",
    "title": "NetHack Learning Environment (NLE)",
    "description": "A procedurally-generated grid-world dungeon-crawl game that strikes a great balance between complexity and speed for single-agent RL research.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1606,
    "created_on": "2020-06-26 02:24:53",
    "title": "Paraphrase Generation Using T5 model",
    "description": "Simple application using T5 base model fine tuned in Quora Question Pairs to generate paraphrased questions.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1607,
    "created_on": "2020-06-26 02:28:15",
    "title": "Message Passing Query Embedding",
    "description": "MPQE is a model for answering complex queries over knowledge graphs, that learns embeddings of entities in the knowledge graph, & embeddings for variable types.",
    "tag": "graph-learning"
  },
  {
    "id": 1608,
    "created_on": "2020-06-26 02:31:17",
    "title": "Quantifying Attention Flow in Transformers",
    "description": "I explain two simple but effective methods, called Attention Rollout and Attention Flow",
    "tag": "natural-language-processing"
  },
  {
    "id": 1614,
    "created_on": "2020-06-27 04:15:51",
    "title": "Natural Language Processing Roadmap",
    "description": "Roadmap for learning NLP topics.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1615,
    "created_on": "2020-06-27 04:29:04",
    "title": "Weight Poisoning Attacks on Pre-trained Models",
    "description": "How Bert can be infused with nefarious behavior, even after fine-tuning.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1616,
    "created_on": "2020-06-27 04:37:16",
    "title": "Leveraging Temporal Context for Object Detection",
    "description": "Object detection architecture leveraging contextual clues across time for each camera deployment in a network, improving recognition of objects",
    "tag": "computer-vision"
  },
  {
    "id": 1617,
    "created_on": "2020-06-27 04:42:47",
    "title": "Expressive Power of Graph Neural Networks",
    "description": "Graph isomorphism problem, the Weisfeiler-Lehman heuristic for graph isomorphism testing, and how it can be used to analyse the expressive power of GNNs.",
    "tag": "graph-learning"
  },
  {
    "id": 1620,
    "created_on": "2020-06-27 10:27:43",
    "title": "rlx: A modular Deep RL library for research",
    "description": "\"rlx\" is a Deep RL library written on top of PyTorch & built for educational and research purpose.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1622,
    "created_on": "2020-06-27 14:18:13",
    "title": "Building AI Trading Systems",
    "description": "Lessons learned building a profitable algorithmic trading system using Reinforcement Learning techniques.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1623,
    "created_on": "2020-06-27 14:20:49",
    "title": "Introduction to NLP using Fastai",
    "description": "Implementing and decoding the revolutionary ULMFiT approach to train a language model on any downstream NLP task.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1628,
    "created_on": "2020-06-28 06:12:20",
    "title": "Deep Reinforcement Learning Amidst Lifelong Non-Stationarity",
    "description": "How can robots learn in changing, open-world environments? We introduce dynamic-parameter MDPs, to capture environments with persistent, unobserved changes. ",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1629,
    "created_on": "2020-06-28 07:37:00",
    "title": "TF Lite Semantic Segmentation Models",
    "description": "Faster and lighter TF Lite models can perform semantic segmentation. ",
    "tag": "computer-vision"
  },
  {
    "id": 1630,
    "created_on": "2020-06-28 07:40:40",
    "title": "Semantic Segmentation + Background Removal + Style Transfer",
    "description": "Running multiple TF Lite models to perform semantic segmentation, remove background, and apply style transfer. ",
    "tag": "computer-vision"
  },
  {
    "id": 1636,
    "created_on": "2020-06-29 00:00:47",
    "title": "Automatic translation of the SQUAD dataset to spanish",
    "description": "Machine translation is used on the SQuAD dataset to produce an equivalent dataset in Spanish. Word alignment is applied to produce a synthetic spanisQA corpus.\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1638,
    "created_on": "2020-06-29 02:56:43",
    "title": "Dakshina Dataset",
    "description": "A collection of text in both Latin and native scripts for 12 South Asian languages.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1639,
    "created_on": "2020-06-29 02:58:52",
    "title": "Computer Vision Recipes",
    "description": "This repository provides examples and best practice guidelines for building computer vision systems.",
    "tag": "computer-vision"
  },
  {
    "id": 1644,
    "created_on": "2020-06-29 12:42:44",
    "title": "A research guide for data scientists",
    "description": "Tips on research from top data scientists",
    "tag": "natural-language-processing"
  },
  {
    "id": 1645,
    "created_on": "2020-06-29 17:16:17",
    "title": "Using Data Science Pipelines for Disaster Response",
    "description": "Uses ETL and ML pipeline to build an NLP system for classification of messages into appropriate disaster categories",
    "tag": "natural-language-processing"
  },
  {
    "id": 1646,
    "created_on": "2020-06-29 19:47:58",
    "title": "Twitter Turing Test",
    "description": "Can you guess whether this tweet is written by a human or generated by a neural network?",
    "tag": "natural-language-processing"
  },
  {
    "id": 1648,
    "created_on": "2020-06-30 02:34:54",
    "title": "STUMPY: A Powerful and Scalable Python Library for Time Series",
    "description": "STUMPY is a powerful and scalable Python library for computing a Matrix Profile, which can be used for a variety of time series data mining tasks.",
    "tag": "time-series"
  },
  {
    "id": 1649,
    "created_on": "2020-06-30 02:39:32",
    "title": "Model Serving using FastAPI and streamlit",
    "description": "Simple example of usage of streamlit and FastAPI for ML model serving.",
    "tag": "computer-vision"
  },
  {
    "id": 1650,
    "created_on": "2020-06-30 02:49:57",
    "title": "The Reformer - Pushing the Limits of Language Modeling",
    "description": "An in-depth understanding of each of the key features of the Reformer.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1651,
    "created_on": "2020-06-30 02:52:41",
    "title": "High-Resolution Image Inpainting",
    "description": "High-Resolution Image Inpainting with Iterative Confidence Feedback and Guided Upsampling.\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 1653,
    "created_on": "2020-06-30 03:01:50",
    "title": "MARGE: Pre-training via Paraphrasing",
    "description": "A retrieval model maps a document to a set of related documents, which a reconstruction model paraphrases to maximize the likelihood of the original. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1654,
    "created_on": "2020-06-30 03:58:46",
    "title": "3D Detection and Domain Adaptation",
    "description": "1st Place Solution for Waymo Open Dataset Challenge",
    "tag": "computer-vision"
  },
  {
    "id": 1657,
    "created_on": "2020-06-30 18:00:11",
    "title": "Fast Api with Dockerization of your ML Models",
    "description": "In this GitHub repo you can able to know and learn how to build a fast API for testing your ML model and can test your ML model with UI and to Dockerize your ML",
    "tag": "mlops"
  },
  {
    "id": 1658,
    "created_on": "2020-07-01 02:22:10",
    "title": "SimCLR - Contrastive Learning of Visual Representations",
    "description": "How to load pretrained/finetuned SimCLR models from hub modules for fine-tuning.",
    "tag": "computer-vision"
  },
  {
    "id": 1659,
    "created_on": "2020-07-01 02:26:20",
    "title": "Evaluation of Text Generation: A Survey",
    "description": "Evaluation methods of natural language generation (NLG) and language modeling.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1661,
    "created_on": "2020-07-01 06:42:59",
    "title": "SpineNet: A Novel Architecture for Object Detection",
    "description": "A meta architecture called a scale-permuted model that enables two major improvements on backbone architecture design,iscovered with neural architecture search.",
    "tag": "computer-vision"
  },
  {
    "id": 1662,
    "created_on": "2020-07-01 07:00:50",
    "title": "Image synthesis at CVPR 2020",
    "description": "An overview of the different approaches to image synthesis at CVPR 2020.",
    "tag": "computer-vision"
  },
  {
    "id": 1663,
    "created_on": "2020-07-01 07:08:45",
    "title": "Sktime",
    "description": "A python toolbox for machine learning with time series.",
    "tag": "time-series"
  },
  {
    "id": 1664,
    "created_on": "2020-07-01 07:14:00",
    "title": "Sentiment Analysis: Key Milestones, Challenges and New Directions",
    "description": "An overview of sentiment analysis, it's progress and what's ahead.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1665,
    "created_on": "2020-07-01 07:17:48",
    "title": "BERTology Meets Biology",
    "description": "Interpreting Attention in Protein Language Models.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1666,
    "created_on": "2020-07-01 07:20:52",
    "title": "Serverless BERT with HuggingFace and AWS Lambda",
    "description": "Build a serverless question-answering API with BERT, HuggingFace, the Serverless Framework, and AWS Lambda.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1668,
    "created_on": "2020-07-01 13:33:49",
    "title": "Model-based Reinforcement Learning: A Survey",
    "description": "A survey of the integration of both fields, better known as model-based reinforcement learning.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1677,
    "created_on": "2020-07-02 04:06:19",
    "title": "Building Level 3 Conversational AI Assistants",
    "description": "Presentations, panels, and fireside chats addressing all topics related to the creation of Level 3 AI assistants.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1678,
    "created_on": "2020-07-02 12:13:19",
    "title": "NSFW Image Classification REST API built with TensorFlow.JS",
    "description": "A ready-to-use & open-source NSFW Image Classification REST API built with TensorFlow.JS and NSFW.JS for effortless Content Moderation",
    "tag": "computer-vision"
  },
  {
    "id": 1681,
    "created_on": "2020-07-03 04:02:52",
    "title": "A Survey on Deep Learning for Localization and Mapping",
    "description": "Towards the Age of Spatial Machine Intelligence",
    "tag": "computer-vision"
  },
  {
    "id": 1685,
    "created_on": "2020-07-03 04:12:28",
    "title": "Text Data Cleanup - Dynamic Embedding Visualisation",
    "description": "Identify noisy text in a Machine Translation dataset through dynamic text embedding visualisation.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1688,
    "created_on": "2020-07-03 04:23:58",
    "title": "Python Implementation of Reinforcement Learning: An Introduction ",
    "description": "Plot replications, exercise solutions and Anki flashcards for the entire book by chapters.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1689,
    "created_on": "2020-07-03 04:29:04",
    "title": "Offline Reinforcement Learning",
    "description": "Challenges, algorithms and benchmarks.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1691,
    "created_on": "2020-07-03 04:40:05",
    "title": "The Simplest Way to Serve your NLP Model in Production w/ Python ",
    "description": "From scikit-learn to Hugging Face Pipelines, learn the simplest way to deploy ML models using Ray Serve.",
    "tag": "mlops"
  },
  {
    "id": 1692,
    "created_on": "2020-07-03 04:42:45",
    "title": "Low-Dimensional Hyperbolic Knowledge Graph Embeddings",
    "description": "Low-dimensional knowledge graph embeddings that simultaneously capture hierarchical relations and logical patterns.",
    "tag": "graph-learning"
  },
  {
    "id": 1698,
    "created_on": "2020-07-04 01:07:48",
    "title": "Learning to Cartoonize Using White-box Cartoon Representations",
    "description": "An approach for image cartoonization using GANs.",
    "tag": "computer-vision"
  },
  {
    "id": 1699,
    "created_on": "2020-07-04 01:10:18",
    "title": "Reinforcement Learning Tutorial",
    "description": "Important reinforcement learning (RL) algorithms, including policy iteration, Q-Learning, and Neural Fitted Q.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1702,
    "created_on": "2020-07-04 04:51:18",
    "title": "Face Recognition Techniques",
    "description": "Face Detection and Recognition techniques using traditional CV and also using new deep learning method.",
    "tag": "computer-vision"
  },
  {
    "id": 1703,
    "created_on": "2020-07-04 09:22:50",
    "title": "Awesome Deep RL",
    "description": "This project is built for people who are learning and researching on the latest deep reinforcement learning methods.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 1704,
    "created_on": "2020-07-04 10:42:53",
    "title": "LSTM Forecast Model for Stock Price Prediction using Keras",
    "description": " Easy to understand LSTM forecast model for Stock Price Prediction. The dataset contains daywise details of the GOOGL stock from May,2019-May 2018.",
    "tag": "time-series"
  },
  {
    "id": 1706,
    "created_on": "2020-07-04 11:05:28",
    "title": "PokeZoo",
    "description": "A deep learning based web-app developed using the MERN stack and Tensorflow.js. ",
    "tag": "computer-vision"
  },
  {
    "id": 1709,
    "created_on": "2020-07-05 05:25:34",
    "title": "Anti-Patterns in NLP (8 types of NLP idiots)",
    "description": "A talk which discusses the recurring industrial problems in making NLP solutions. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1710,
    "created_on": "2020-07-05 05:47:35",
    "title": "NLP-task-visualizer-app",
    "description": "This application designed with streamlit library will help in visualizing NLP tasks on text entered by you. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1715,
    "created_on": "2020-07-06 18:25:16",
    "title": "Image Classifier",
    "description": "Pure JavaScript Image Classifier",
    "tag": "computer-vision"
  },
  {
    "id": 1717,
    "created_on": "2020-07-07 04:09:35",
    "title": "TaBERT",
    "description": "Pretraining for Joint Understanding of Textual and Tabular Data",
    "tag": "natural-language-processing"
  },
  {
    "id": 1719,
    "created_on": "2020-07-07 04:17:11",
    "title": "Texthero",
    "description": "Text preprocessing, representation and visualization from zero to hero.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1721,
    "created_on": "2020-07-07 04:21:20",
    "title": "TensorflowTTS",
    "description": "Real-Time State-of-the-art Speech Synthesis for Tensorflow 2.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1722,
    "created_on": "2020-07-07 04:23:38",
    "title": "spaczz: Fuzzy matching and more for spaCy",
    "description": "Fuzzy matching and more functionality for spaCy.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1723,
    "created_on": "2020-07-07 04:26:45",
    "title": "BioSyn",
    "description": "Biomedical Entity Representations with Synonym Marginalization",
    "tag": "natural-language-processing"
  },
  {
    "id": 1724,
    "created_on": "2020-07-08 04:02:50",
    "title": "Image Classifier: In the Browser",
    "description": "Using Tensorflow.js to make the prediction directly in the browser.",
    "tag": "computer-vision"
  },
  {
    "id": 1726,
    "created_on": "2020-07-08 04:15:07",
    "title": "Photon: A Robust Cross-Domain Text-to-SQL System",
    "description": "A robust, modular, cross-domain NLIDB that can flag natural language input to which a SQL mapping cannot be immediately determined. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1728,
    "created_on": "2020-07-08 04:24:07",
    "title": "Bounding Box Prediction from Scratch using PyTorch",
    "description": "Multi-Task learning \u2014 Bounding Box Regression + Image Classification",
    "tag": "computer-vision"
  },
  {
    "id": 1729,
    "created_on": "2020-07-08 04:28:13",
    "title": "Comment Classification Using BERT (multi-language) Fine-Tuning",
    "description": "We are going to use BERT layer in a model applying Keras.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1730,
    "created_on": "2020-07-08 04:30:28",
    "title": "TextBrewer",
    "description": "a PyTorch-based model distillation toolkit for natural language processing.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1737,
    "created_on": "2020-07-08 18:22:40",
    "title": "codeBERT - Automated code docstring review with transformers",
    "description": "codeBERT provide a one command line to check if your code docstrings are up-to-date.\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1743,
    "created_on": "2020-07-09 01:51:41",
    "title": "How to Benchmark Models with Transformers",
    "description": "HuggingFace's Transformer library allows users to benchmark models for both TensorFlow 2 and PyTorch using the PyTorchBenchmark and TensorFlowBenchmark classes.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1748,
    "created_on": "2020-07-09 02:23:25",
    "title": "Continuous Machine Learning (CML)",
    "description": "CML helps to organize MLOps infrastructure on top of the traditional software engineering stack instead of creating separate AI platforms.",
    "tag": "mlops"
  },
  {
    "id": 1750,
    "created_on": "2020-07-09 10:30:30",
    "title": "picTranslate: Seamless live Image Text translator",
    "description": "Given an image with text on it, this app can give you a new image with text modified into a different language.",
    "tag": "computer-vision"
  },
  {
    "id": 1753,
    "created_on": "2020-07-10 02:44:11",
    "title": "TUDatasets",
    "description": "A collection of benchmark datasets for graph classification and regression.",
    "tag": "graph-learning"
  },
  {
    "id": 1754,
    "created_on": "2020-07-10 02:46:07",
    "title": "Full Stack Deep Learning",
    "description": "Full Stack Deep Learning helps you bridge the gap from training machine learning models to deploying AI systems in the real world.",
    "tag": "mlops"
  },
  {
    "id": 1755,
    "created_on": "2020-07-10 02:51:24",
    "title": "Easy OCR",
    "description": "Ready-to-use OCR with 40+ languages supported including Chinese, Japanese, Korean and Thai.\r\n\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 1756,
    "created_on": "2020-07-10 02:53:13",
    "title": "Linear Attention Transformer",
    "description": "A fully featured Transformer that mixes (QK\u1d40)V local attention with Q(K\u1d40V) global attention (scales linearly with respect to sequence length).",
    "tag": "natural-language-processing"
  },
  {
    "id": 1759,
    "created_on": "2020-07-10 18:54:54",
    "title": "Emotion Recognition from Tom and Jerry videos",
    "description": "Developed an application that classifies the emotion depicted by Tom and Jerry in each frame into one of the following : happy, angry, sad or suprised.",
    "tag": "computer-vision"
  },
  {
    "id": 1767,
    "created_on": "2020-07-11 05:05:31",
    "title": "Imagenette",
    "description": "Imagenette is a subset of 10 easily classified classes from Imagenet.",
    "tag": "computer-vision"
  },
  {
    "id": 1768,
    "created_on": "2020-07-11 05:08:02",
    "title": "TextAugment",
    "description": "Improving Short Text Classification through Global Augmentation Methods",
    "tag": "natural-language-processing"
  },
  {
    "id": 1769,
    "created_on": "2020-07-11 05:10:10",
    "title": "niacin",
    "description": "A Python library for replacing the missing variation in your text data.\r\n\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1770,
    "created_on": "2020-07-11 05:12:49",
    "title": "imgaug",
    "description": "Image augmentation for machine learning experiments.\r\n\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 1771,
    "created_on": "2020-07-11 05:16:17",
    "title": "Albumentations",
    "description": "Fast image augmentation library and easy to use wrapper around other libraries.",
    "tag": "computer-vision"
  },
  {
    "id": 1772,
    "created_on": "2020-07-11 05:19:05",
    "title": "Augmentor",
    "description": "Image augmentation library in Python for machine learning.",
    "tag": "computer-vision"
  },
  {
    "id": 1777,
    "created_on": "2020-07-11 05:37:12",
    "title": "tsfresh",
    "description": "Automatic extraction of relevant features from time series.",
    "tag": "time-series"
  },
  {
    "id": 1779,
    "created_on": "2020-07-11 05:48:03",
    "title": "All Models and checkpoints - Hugging Face",
    "description": "Massive (and growing) collection of NLP models are nearly any NLP tasks, especially those involving the use of transformers.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1792,
    "created_on": "2020-07-11 06:28:58",
    "title": "Anomaly Detection Toolkit (ADTK)",
    "description": "A Python toolkit for rule-based/unsupervised anomaly detection in time series\r\n\r\n",
    "tag": "time-series"
  },
  {
    "id": 1795,
    "created_on": "2020-07-11 06:37:35",
    "title": "Chakin ",
    "description": "Simple downloader for pre-trained word vectors.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1796,
    "created_on": "2020-07-11 06:39:39",
    "title": "Top2Vec",
    "description": "Top2Vec learns jointly embedded topic, document and word vectors.\r\n\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1797,
    "created_on": "2020-07-11 06:42:29",
    "title": "Contextualized Topic Models",
    "description": "A python package to run contextualized topic modeling.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1799,
    "created_on": "2020-07-11 06:49:38",
    "title": "FlashText",
    "description": "Extract Keywords from sentence or Replace keywords in sentences.\r\n\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1800,
    "created_on": "2020-07-11 06:51:58",
    "title": "jellyfish",
    "description": "\ud83c\udf90 a python library for doing approximate and phonetic matching of strings.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1802,
    "created_on": "2020-07-11 06:57:28",
    "title": "SentencePiece",
    "description": "Unsupervised text tokenizer for Neural Network-based text generation.\r\n\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1803,
    "created_on": "2020-07-11 06:59:08",
    "title": "A Deep Dive into the Wonderful World of Preprocessing in NLP",
    "description": "A glimpse into the surprisingly deep and interesting world of preprocessing in NLP.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1804,
    "created_on": "2020-07-11 07:04:25",
    "title": "Text Preprocessing in Python using spaCy library",
    "description": "In this article, we have explored Text Preprocessing in Python using spaCy library in detail. This is the fundamental step to prepare data for applications.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1805,
    "created_on": "2020-07-11 07:12:32",
    "title": "Segmentation Models",
    "description": "Segmentation models with pretrained backbones. Keras and TensorFlow Keras.\r\n\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 1813,
    "created_on": "2020-07-11 07:45:01",
    "title": "Pytest",
    "description": "The pytest framework makes it easy to write small tests, yet scales to support complex functional testing\r\n\r\n",
    "tag": "mlops"
  },
  {
    "id": 1817,
    "created_on": "2020-07-11 07:55:23",
    "title": "Artifacts - Weights & Biases",
    "description": "Effortless pipeline tracking and production model management\r\n\r\n",
    "tag": "mlops"
  },
  {
    "id": 1818,
    "created_on": "2020-07-11 08:07:35",
    "title": "DeepkitAI",
    "description": "The Open-Source Machine Learning Devtool and Training Suite.",
    "tag": "mlops"
  },
  {
    "id": 1819,
    "created_on": "2020-07-11 08:14:03",
    "title": "Neptune.ai",
    "description": "The most lightweight experiment management tool that fits any workflow.",
    "tag": "mlops"
  },
  {
    "id": 1820,
    "created_on": "2020-07-11 08:17:17",
    "title": "Rasa",
    "description": "An open source machine learning framework to automate text-and voice-based conversations. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1825,
    "created_on": "2020-07-11 08:43:20",
    "title": "MLflow: A Machine Learning Lifecycle Platform",
    "description": "Open source platform for the machine learning lifecycle.",
    "tag": "mlops"
  },
  {
    "id": 1827,
    "created_on": "2020-07-11 08:56:02",
    "title": "token2index",
    "description": "A lightweight but powerful library to build token indices for NLP tasks, compatible with major Deep Learning frameworks like PyTorch and Tensorflow.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1831,
    "created_on": "2020-07-11 11:36:26",
    "title": "TF Sprinkles",
    "description": "Fast and efficient sprinkles augmentation implemented in TensorFlow.",
    "tag": "computer-vision"
  },
  {
    "id": 1834,
    "created_on": "2020-07-11 17:19:43",
    "title": "Laplacian Pyramid Reconstruction and Refinement for Semantic Seg.",
    "description": " Pytorch implementation of multi-resolution reconstruction architecture based on a Laplacian pyramid that uses skip connections.",
    "tag": "computer-vision"
  },
  {
    "id": 1836,
    "created_on": "2020-07-11 18:15:19",
    "title": "Training a pets detector model with TFOD API (TF 2)",
    "description": "In this notebook, we will be training a custom object detection model using the latest TensorFlow Object Detection (TFOD) API which is based on TensorFlow 2.2. ",
    "tag": "computer-vision"
  },
  {
    "id": 1840,
    "created_on": "2020-07-12 00:59:27",
    "title": "TensorFlow 2 meets the Object Detection API",
    "description": "TF Object Detection API (OD API) officially supports TensorFlow 2!",
    "tag": "computer-vision"
  },
  {
    "id": 1843,
    "created_on": "2020-07-12 13:35:20",
    "title": "Cortex",
    "description": "Build machine learning APIs.",
    "tag": "mlops"
  },
  {
    "id": 1844,
    "created_on": "2020-07-12 16:24:10",
    "title": "Semi-Supervised Learning in Computer Vision",
    "description": "A comprehensive overview of recent semi-supervised learning methods in Computer Vision",
    "tag": "computer-vision"
  },
  {
    "id": 1845,
    "created_on": "2020-07-12 21:42:52",
    "title": "Face Predicting Web App",
    "description": "Interactive Deep Learning Model that utilizes your computer webcam to predict your age and gender in seconds! ",
    "tag": "computer-vision"
  },
  {
    "id": 1847,
    "created_on": "2020-07-13 03:46:32",
    "title": "Driver Identification Based on Vehicle's telematics data",
    "description": "In this paper, we proposed a deep learning model, which can identify drivers from their driving behaviors based on vehicle telematics data.",
    "tag": "computer-vision"
  },
  {
    "id": 1848,
    "created_on": "2020-07-13 05:00:40",
    "title": "Comprehensive analysis of important metrics in ML",
    "description": "In this work, the authors present a comprehensive analysis of important metrics in practical applications.",
    "tag": "computer-vision"
  },
  {
    "id": 1851,
    "created_on": "2020-07-13 15:21:13",
    "title": "StreamAlert",
    "description": "A serverless, realtime data analysis framework which empowers you to ingest, analyze, and alert on data from any environment, using datasources and alerts.",
    "tag": "mlops"
  },
  {
    "id": 1853,
    "created_on": "2020-07-13 20:23:32",
    "title": "The Transformer Neural Network Architecture Explained",
    "description": "\u2699\ufe0f It is time to explain how Transformers work. If you are looking for an easy explanation, you are exactly right!",
    "tag": "natural-language-processing"
  },
  {
    "id": 1855,
    "created_on": "2020-07-14 03:17:25",
    "title": "ULMFiT Airline Sentiment Analysis",
    "description": "Transfer Learning using pretrained ULMFiT model",
    "tag": "natural-language-processing"
  },
  {
    "id": 1856,
    "created_on": "2020-07-14 03:21:00",
    "title": "DeepDream Video Style Transfer",
    "description": "DeepDream on Video",
    "tag": "computer-vision"
  },
  {
    "id": 1858,
    "created_on": "2020-07-14 03:30:14",
    "title": "QSVM",
    "description": "Quantum SVM for sentiment analysis",
    "tag": "natural-language-processing"
  },
  {
    "id": 1859,
    "created_on": "2020-07-14 04:01:18",
    "title": "You Trained a Machine Learning Model, Now What?",
    "description": "Three often overlooked parts of this process occur after the model is actually built: model evaluation, deployment, and monitoring.",
    "tag": "mlops"
  },
  {
    "id": 1860,
    "created_on": "2020-07-14 09:53:19",
    "title": "NSFW Image Moderation Automation Engine built with TensorFlow.JS ",
    "description": "An open-source NSFW Image Classifier including an Automation Engine for fast deletion & moderation built with Node.js, TensorFlow, and Parse Server",
    "tag": "computer-vision"
  },
  {
    "id": 1865,
    "created_on": "2020-07-14 22:55:08",
    "title": "PDFTableExtract",
    "description": "Build a parser to extract the table in PDF document with RetinaNet",
    "tag": "computer-vision"
  },
  {
    "id": 1866,
    "created_on": "2020-07-14 22:58:15",
    "title": "PYthon Automated Term Extraction",
    "description": "Term extraction algorithms such as C-Value, Basic, Combo Basic, Weirdness and Term Extractor using spaCy POS tagging.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1867,
    "created_on": "2020-07-14 23:03:02",
    "title": "YOLOv4 With TensorFlow",
    "description": "YOLOv4, YOLOv4-tiny, YOLOv3, YOLOv3-tiny Implemented in Tensorflow 2.0, Android. Convert YOLO v4 .weights tensorflow, tensorrt and tflite.",
    "tag": "computer-vision"
  },
  {
    "id": 1868,
    "created_on": "2020-07-15 03:52:31",
    "title": "Selfie2Anime with TFLite",
    "description": "An end-to-end tutorial with TensorFlow Lite for Selfie2Anime (U-GAT-IT). ",
    "tag": "computer-vision"
  },
  {
    "id": 1869,
    "created_on": "2020-07-15 20:31:37",
    "title": "Bridging PyTorch and TVM",
    "description": "Taking Hugging Face transformer BERT from PyTorch and running it on \r\nApacheTVM for both inference (with reasonable timings) and training.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1870,
    "created_on": "2020-07-15 20:38:36",
    "title": "Interpretability and Analysis of Models for NLP",
    "description": "An in-depth look at interpretability and analysis of models for NLP (ACL 2020).",
    "tag": "natural-language-processing"
  },
  {
    "id": 1871,
    "created_on": "2020-07-16 03:58:21",
    "title": "Summarize a webapge",
    "description": "A Flask application that extracts and summarizes webpage using Natural Language Processing. Powered by nlp-akash.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1872,
    "created_on": "2020-07-16 04:19:37",
    "title": "An Icon Classifier with TensorFlow Lite Model Maker",
    "description": "An Icon Classifier with TensorFlow Lite Model Maker",
    "tag": "computer-vision"
  },
  {
    "id": 1879,
    "created_on": "2020-07-16 17:40:33",
    "title": "Cross-lingual Transfer Learning - Sebastian Ruder",
    "description": "An overview of approaches that transfer knowledge across languages and enable us to scale NLP models to more of the world's 7,000 languages.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1880,
    "created_on": "2020-07-16 17:43:48",
    "title": "AdapterHub: A Framework for Adapting Transformers",
    "description": "Huggingface Transformers + Adapters",
    "tag": "natural-language-processing"
  },
  {
    "id": 1882,
    "created_on": "2020-07-16 17:51:48",
    "title": "Object Detection with RetinaNet",
    "description": "Implementing RetinaNet: Focal Loss for Dense Object Detection.",
    "tag": "computer-vision"
  },
  {
    "id": 1884,
    "created_on": "2020-07-17 01:41:33",
    "title": "Deploying your ML Model with TorchServe",
    "description": "In this talk, Brad Heintz walks through how to use TorchServe to deploy trained models at scale without writing custom code. ",
    "tag": "mlops"
  },
  {
    "id": 1886,
    "created_on": "2020-07-17 08:27:56",
    "title": "Medical Zoo - 3D Multi-modal Medical Image Segmentation",
    "description": "My articles on deep learning in medical imaging",
    "tag": "computer-vision"
  },
  {
    "id": 1887,
    "created_on": "2020-07-17 16:48:13",
    "title": "Computer Vision Pretrained Models",
    "description": "A collection of computer vision pre-trained models.",
    "tag": "computer-vision"
  },
  {
    "id": 1888,
    "created_on": "2020-07-17 16:53:37",
    "title": "Monitoring Machine Learning Models in Production",
    "description": "Once you have deployed your machine learning model to production it rapidly becomes apparent that the work is not over.",
    "tag": "mlops"
  },
  {
    "id": 1889,
    "created_on": "2020-07-17 17:20:20",
    "title": "NLP Pretrained Models",
    "description": "A collection of Natural language processing pre-trained models.\r\n\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1896,
    "created_on": "2020-07-19 00:40:37",
    "title": "Machine Learning Production Pipeline",
    "description": "Project Flow and Landscape\r\n",
    "tag": "mlops"
  },
  {
    "id": 1898,
    "created_on": "2020-07-19 00:47:53",
    "title": "Tempering Expectations for GPT-3 and OpenAI\u2019s API",
    "description": "A closer look at the \"magic\" behind GPT-3 and caveats to be aware of.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1899,
    "created_on": "2020-07-19 03:59:41",
    "title": "StyleGAN Encoder",
    "description": "Encodes real images into the latent space of a StyleGAN model.",
    "tag": "computer-vision"
  },
  {
    "id": 1900,
    "created_on": "2020-07-19 04:12:40",
    "title": "WikiArt StyleGAN 2 Model",
    "description": "A conditional StyleGAN 2 model trained on images from WikiArt",
    "tag": "computer-vision"
  },
  {
    "id": 1901,
    "created_on": "2020-07-19 08:31:43",
    "title": "Quora Question Pair Similarity",
    "description": "Identify which questions asked on Quora are duplicates of questions that have already been asked. Using Text features, classifying them as duplicates or not.\r\n\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 1902,
    "created_on": "2020-07-19 10:19:24",
    "title": "Indian Paper Currency Prediction",
    "description": "The trained model takes an image (Indian Paper Currency) as an input and predict the class of image from 10, 20, 50, 100, 200, 500, 2000 denomination.",
    "tag": "computer-vision"
  },
  {
    "id": 1903,
    "created_on": "2020-07-19 11:31:25",
    "title": "Neural Style Transfer (Gatys et al., PyTorch)",
    "description": "My implementation of the original neural style transfer paper by Gatys et al. (In PyTorch).",
    "tag": "computer-vision"
  },
  {
    "id": 1904,
    "created_on": "2020-07-19 12:44:53",
    "title": "Implementation of Face Net  in TensorFlow -  2.0",
    "description": "This repository is a naive unofficial  implementation of Face Net paper  - 2015 .This implementation opts online mode of semi - hard triplet mining.",
    "tag": "computer-vision"
  },
  {
    "id": 1905,
    "created_on": "2020-07-19 14:51:57",
    "title": "PyTorch CNN Trainer",
    "description": "A simple package to fine-tune CNNs from torchvision and Pytorch Image models by Ross Wightman.",
    "tag": "computer-vision"
  },
  {
    "id": 1910,
    "created_on": "2020-07-19 15:44:21",
    "title": "Azure Machine Learning Template",
    "description": "Azure Machine Learning template for MNIST classifier",
    "tag": "mlops"
  },
  {
    "id": 1913,
    "created_on": "2020-07-19 16:55:33",
    "title": "Teachable Machine (Image Classifier)",
    "description": "A teachable image classifier that runs on any browser built using TensorFlow JS.",
    "tag": "computer-vision"
  },
  {
    "id": 1914,
    "created_on": "2020-07-19 16:59:37",
    "title": "TensorFlow JS- Object Detection in Browser",
    "description": "A real-time object detection model in your browser using TensorFlow JS.",
    "tag": "computer-vision"
  },
  {
    "id": 1916,
    "created_on": "2020-07-20 00:01:38",
    "title": "How to Stop Worrying About Compositionality",
    "description": "Review the tenets of compositionality, and to highlight how each theory has evolved to match particular theoretical positions about the nature of language.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1918,
    "created_on": "2020-07-20 05:48:38",
    "title": "Spacy-Go",
    "description": "spacy-go is Golang interface for accessing linguistic annotations provided by spaCy using Google's gRPC. This module only supports basic functionalities like lo",
    "tag": "natural-language-processing"
  },
  {
    "id": 1919,
    "created_on": "2020-07-20 05:53:12",
    "title": "Dframcy",
    "description": "DframCy is a light-weight utility module to integrate Pandas Dataframe to spaCy's linguistic annotation and training tasks.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1921,
    "created_on": "2020-07-20 14:04:48",
    "title": "NSFW Image Moderation Admin App with ReactJS",
    "description": "A fully-functional NSFW Admin Application for simplified image classification & moderation built with Node.js, TensorFlow.js, and React",
    "tag": "computer-vision"
  },
  {
    "id": 1923,
    "created_on": "2020-07-20 18:59:04",
    "title": "PyTorch Geometric Temporal",
    "description": "A Temporal Extension Library for PyTorch Geometric ",
    "tag": "graph-learning"
  },
  {
    "id": 1924,
    "created_on": "2020-07-20 20:34:47",
    "title": "Why is it Important to Monitor Machine Learning Models?",
    "description": "The importance of monitoring and how monitoring ML is different from application performance management (APM).",
    "tag": "mlops"
  },
  {
    "id": 1925,
    "created_on": "2020-07-20 20:54:00",
    "title": "PyTorch Implementation of PaletteNet",
    "description": "PyTorch implementation of PaletteNet: Image Recolorization with Given Color Palette (Cho et al., 2017).",
    "tag": "computer-vision"
  },
  {
    "id": 1927,
    "created_on": "2020-07-20 21:21:12",
    "title": "ECG arrhythmia classification using a convolutional neural net",
    "description": "This is an implementation of the paper on ECG arrhythmia classification https://arxiv.org/pdf/1804.06812.pdf.",
    "tag": "computer-vision"
  },
  {
    "id": 1929,
    "created_on": "2020-07-20 23:55:33",
    "title": "Structured Self Attention",
    "description": "Implementation for the paper A Structured Self-Attentive Sentence Embedding (https://arxiv.org/abs/1703.03130 ). Model interpretability / explainability.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1933,
    "created_on": "2020-07-21 01:42:42",
    "title": "TurboTransformers",
    "description": "A fast and user-friendly runtime for transformer inference on CPU and GPU.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1934,
    "created_on": "2020-07-21 01:47:01",
    "title": "Graphein",
    "description": "Protein Graph Library",
    "tag": "graph-learning"
  },
  {
    "id": 1935,
    "created_on": "2020-07-21 04:44:52",
    "title": "Integrated Gradients in TensorFlow 2",
    "description": "In this tutorial, you will walk through an implementation of IG step-by-step in TensorFlow 2 to understand the pixel feature importances of an image classifier.",
    "tag": "computer-vision"
  },
  {
    "id": 1938,
    "created_on": "2020-07-21 11:50:53",
    "title": "Rasa NLU Examples",
    "description": "Experimental components for Rasa NLU pipelines. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1940,
    "created_on": "2020-07-21 19:01:54",
    "title": "Change Detection using Siamese networks",
    "description": "The blog is a primer on Siamese Networks and how they're used for observing change in satellite images over time, or observing facial changes as people age",
    "tag": "computer-vision"
  },
  {
    "id": 1941,
    "created_on": "2020-07-21 19:13:05",
    "title": "My Artificial Intelligence Bookmarks",
    "description": "A curated list of my reads, implementations, and core concepts of Artificial Intelligence, Deep Learning, Machine Learning by best folk in the world.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1943,
    "created_on": "2020-07-22 03:32:30",
    "title": "Do we Need Deep Graph Neural Networks?",
    "description": "Does depth in graph neural network architectures bring any advantage?",
    "tag": "graph-learning"
  },
  {
    "id": 1945,
    "created_on": "2020-07-22 03:39:13",
    "title": "Pandera",
    "description": "A flexible and expressive pandas data validation library.",
    "tag": "mlops"
  },
  {
    "id": 1950,
    "created_on": "2020-07-23 00:42:09",
    "title": "GPT-3: A Hitchhiker's Guide",
    "description": "Post to guide your thinking on GPT-3.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1952,
    "created_on": "2020-07-24 06:28:15",
    "title": "TensorFlow Serving",
    "description": "A flexible, high-performance serving system for machine learning models, designed for production environments. ",
    "tag": "mlops"
  },
  {
    "id": 1953,
    "created_on": "2020-07-24 06:30:44",
    "title": "BentoML",
    "description": "BentoML is an open-source framework for high-performance ML model serving.",
    "tag": "mlops"
  },
  {
    "id": 1954,
    "created_on": "2020-07-24 06:43:59",
    "title": "Azure ML",
    "description": "MLOps using Azure ML.",
    "tag": "mlops"
  },
  {
    "id": 1955,
    "created_on": "2020-07-24 06:47:29",
    "title": "Shape and Viewpoint without Keypoints",
    "description": "Recover the 3D shape, pose and texture from a single image, trained on an image collection without any ground truth 3D shape, multi-view, camera viewpoints.",
    "tag": "computer-vision"
  },
  {
    "id": 1959,
    "created_on": "2020-07-24 10:00:13",
    "title": "TeachEasy: Web app for Text Summarization & Q/A generation",
    "description": "An intuitive Streamlit based web app for Text Summarization and Question Answer generation so as to reduce the work for School teachers.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1961,
    "created_on": "2020-07-24 10:38:52",
    "title": "Python Template for All Projects",
    "description": "A template that gives the batteries required to package code, CI checks, auto build and deploy docs, easy PyPi publishing support and docker files.",
    "tag": "mlops"
  },
  {
    "id": 1964,
    "created_on": "2020-07-25 02:52:36",
    "title": "MLOps Tutorial Series",
    "description": "How to create an automatic model training & testing setup using GitHub Actions and Continuous Machine Learning (CML).",
    "tag": "mlops"
  },
  {
    "id": 1965,
    "created_on": "2020-07-25 02:58:40",
    "title": "model-logger",
    "description": "Model-Logger is a Python library for storing model's profile and rapid inter model comparison.",
    "tag": "mlops"
  },
  {
    "id": 1968,
    "created_on": "2020-07-26 04:48:40",
    "title": "Sentiment Analysis With Transformers",
    "description": "Sentiment analysis neural network trained by fine-tuning BERT, ALBERT, or DistilBERT on the Stanford Sentiment Treebank.",
    "tag": "natural-language-processing"
  },
  {
    "id": 1971,
    "created_on": "2020-07-27 02:30:42",
    "title": "Attention based YOLO: Object Detection",
    "description": "An easy to follow, YOLO implementation with keras lib.  Used a attention based architecture to extract more fine grained information about object.",
    "tag": "computer-vision"
  },
  {
    "id": 1972,
    "created_on": "2020-07-27 02:54:19",
    "title": "Evolution of Representations in the Transformer",
    "description": "The evolution of representations of individual tokens in Transformers trained with different training objectives (MT, LM, MLM - BERT-style).",
    "tag": "natural-language-processing"
  },
  {
    "id": 1975,
    "created_on": "2020-07-27 14:09:26",
    "title": "Ensemble methods for object detection",
    "description": "In this repository, we provide the code for ensembling the output of object detection models, and applying test-time augmentation for object detection. This lib",
    "tag": "computer-vision"
  },
  {
    "id": 1976,
    "created_on": "2020-07-27 14:12:03",
    "title": "Close-Domain fine-tuning for table detection",
    "description": "In this project, we show the benefits of using models trained on a close domain, using the TableBank dataset, for fine-tuning table detection models. In additio",
    "tag": "computer-vision"
  },
  {
    "id": 1977,
    "created_on": "2020-07-27 14:14:10",
    "title": "LabelDetection: simplifying the use and construction of deep dete",
    "description": "LabelDetection is a graphical tool that aims to facilitate all the steps required in the pipeline to construct and use a deep-learning base object detection mod",
    "tag": "computer-vision"
  },
  {
    "id": 1978,
    "created_on": "2020-07-27 14:34:12",
    "title": "How to Set Up a Python Project For Automation and Collaboration",
    "description": "How to set up a Python repo with unit tests, code coverage, lint checking, type checking, Makefile wrapper, and automated build with GitHub Actions.",
    "tag": "mlops"
  },
  {
    "id": 1980,
    "created_on": "2020-07-27 14:51:03",
    "title": "Understanding & Implementing SimCLR - an ELI5 guide",
    "description": "I explain the SimCLR and its contrastive loss function step by step, build image embeddings and then show how to use them to train image classifier on top.",
    "tag": "computer-vision"
  },
  {
    "id": 1983,
    "created_on": "2020-07-28 04:14:12",
    "title": "CoreML Model Zoo",
    "description": "Collection of unified and converted pre-trained models.",
    "tag": "computer-vision"
  },
  {
    "id": 1984,
    "created_on": "2020-07-28 04:18:00",
    "title": "How GPT3 Works - Visualizations and Animations",
    "description": "A compilation of my threads explaining GPT3. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 1985,
    "created_on": "2020-07-28 04:19:58",
    "title": "Temporal Graph Networks",
    "description": "In this post, we describe Temporal Graph Network, a generic framework for deep learning on dynamic graphs.",
    "tag": "graph-learning"
  },
  {
    "id": 1986,
    "created_on": "2020-07-28 07:44:13",
    "title": "Behavioral Testing of NLP models with CheckList",
    "description": "An overview of the \u201cCheckList\u201d framework for fine-grained evaluation of NLP models",
    "tag": "natural-language-processing"
  },
  {
    "id": 1992,
    "created_on": "2020-07-29 03:41:04",
    "title": "Time series forecasting",
    "description": "A thorough introduction to time series forecasting using TensorFlow.",
    "tag": "time-series"
  },
  {
    "id": 1993,
    "created_on": "2020-07-29 04:47:55",
    "title": "Real-time text detection with EAST in TFLite",
    "description": "Demonstrates the conversion process from the original EAST model to TFLite and how to use it on static images and also on real-time video feeds. ",
    "tag": "computer-vision"
  },
  {
    "id": 1994,
    "created_on": "2020-07-29 04:51:30",
    "title": "Understanding the Effectivity of Ensembles in Deep Learning",
    "description": "The report explores the ideas presented in Deep Ensembles: A Loss Landscape Perspective by Stanislav Fort, Huiyi Hu, and Balaji Lakshminarayanan.",
    "tag": "computer-vision"
  },
  {
    "id": 1997,
    "created_on": "2020-07-29 16:13:46",
    "title": "Image Classification by @carrycooldude",
    "description": "Image Classification using TFLite and ImageNet  by  @carrycooldude",
    "tag": "computer-vision"
  },
  {
    "id": 1999,
    "created_on": "2020-07-30 03:57:32",
    "title": "Small differences in BLEU are meaningless",
    "description": "Only big differences in metric scores are meaningful in MT.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2002,
    "created_on": "2020-07-30 04:08:46",
    "title": "Multi-target in Albumentations",
    "description": "Many images, many masks, bounding boxes, and key points. How to transform them in sync?",
    "tag": "computer-vision"
  },
  {
    "id": 2005,
    "created_on": "2020-07-30 11:19:02",
    "title": "Social Distance Detection",
    "description": "If people are very close to each other, a red bounding box is displayed around them indicating that they are not maintaining social distance.",
    "tag": "computer-vision"
  },
  {
    "id": 2006,
    "created_on": "2020-07-30 11:30:56",
    "title": "Deep Learning Techniques for NLP in Healthcare",
    "description": "A talk discussing the recent advancements of deep learning to facilitate the adaption of NLP in the healthcare domain.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2007,
    "created_on": "2020-07-30 14:47:39",
    "title": "CLoDSA: A Tool for Augmentation in Computer Vision tasks",
    "description": "CLoDSA is an open-source image augmentation library for object classification, localization, detection, semantic segmentation and instance segmentation. It supp",
    "tag": "computer-vision"
  },
  {
    "id": 2008,
    "created_on": "2020-07-30 14:50:30",
    "title": "Extension to block NSFW content using AI",
    "description": "NSFW Filter is an extension that blocks NSFW content from your browser.\r\nIt uses a computer vision model to detect NSFW content and hides it from the user.",
    "tag": "computer-vision"
  },
  {
    "id": 2009,
    "created_on": "2020-07-30 14:55:57",
    "title": "ATLASS: AutoML using Transfer and Semi-Supervised Learning",
    "description": "This repository includes the code, application, and notebooks for the work \"AutoML using Transfer and Semi-Supervised Learning\". The tools presented here can be",
    "tag": "computer-vision"
  },
  {
    "id": 2010,
    "created_on": "2020-07-30 15:00:43",
    "title": "FrImCla: A framework for image classification",
    "description": "\r\nFrImCla is an open-source framework for Image Classification using traditional and deep learning techniques. It supports a wide variety of deep learning and c",
    "tag": "computer-vision"
  },
  {
    "id": 2011,
    "created_on": "2020-07-30 15:02:04",
    "title": "UFOD: A Unified Framework for Object Detection",
    "description": "UFOD is an open-source framework that enables the training and comparison of object detection models on custom datasets using different underlying frameworks an",
    "tag": "computer-vision"
  },
  {
    "id": 2012,
    "created_on": "2020-07-30 15:04:28",
    "title": "LabelStoma: stomata detection using YOLO",
    "description": "LabelStoma is a graphical image tool for automatically detecting stomata in images. ",
    "tag": "computer-vision"
  },
  {
    "id": 2013,
    "created_on": "2020-07-30 15:07:54",
    "title": "DeepClas4Bio",
    "description": "DeepClas4Bio is a project that aims to facilitate the interoperability of bioimaging tools with deep learning frameworks.",
    "tag": "computer-vision"
  },
  {
    "id": 2016,
    "created_on": "2020-07-31 15:30:38",
    "title": "Meme Classifier Using TFlite and flutter",
    "description": "Meme classifier using fine tuned mobilenet. This app showcases how you can perform low latency realtime classification apps using TFlite",
    "tag": "computer-vision"
  },
  {
    "id": 2020,
    "created_on": "2020-08-01 12:14:26",
    "title": "Text Summarization using TF-IDF Algorithm",
    "description": "This Article explains the TF-IDF algorithm and shows the implemtnation from scratch to summarize the text.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2022,
    "created_on": "2020-08-01 14:41:37",
    "title": "Simple Transformers",
    "description": "Transformers for Classification, NER, QA, Language Modeling, Language Generation, T5, Multi-Modal, and Conversational AI.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2023,
    "created_on": "2020-08-01 14:46:19",
    "title": "Why You Should Do NLP Beyond English",
    "description": "7000+ languages are spoken around the world but NLP research has mostly focused on English. This post outlines why you should work on languages other than Eng.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2024,
    "created_on": "2020-08-01 14:49:31",
    "title": "DeText: A Deep Neural Text Understanding Framework",
    "description": "DeText: A Deep Neural Text Understanding Framework for Ranking and Classification Tasks.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2025,
    "created_on": "2020-08-01 14:57:11",
    "title": "Haystack \u2014 Neural Question Answering At Scale",
    "description": "\ud83d\udd0d Transformers at scale for question answering & search\r\n\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 2026,
    "created_on": "2020-08-01 15:04:37",
    "title": "Efficient Serverless Deployment of PyTorch Models on Azure",
    "description": "A tutorial for serving models cost-effectively at scale using Azure Functions and ONNX Runtime.",
    "tag": "mlops"
  },
  {
    "id": 2027,
    "created_on": "2020-08-01 15:27:29",
    "title": "Nearest Celebrity Face",
    "description": "Implementation of FaceNet: A Unified Embedding for Face Recognition and Clustering to find the celebrity whose face matches the closest to yours. The input face",
    "tag": "computer-vision"
  },
  {
    "id": 2030,
    "created_on": "2020-08-02 12:38:08",
    "title": "A Few Favorite Recipes in Computer Vision & Deep Learning",
    "description": "This blog post enlists a few of my favorite recipes in deep learning in the context of computer vision (as of August 2020).",
    "tag": "computer-vision"
  },
  {
    "id": 2031,
    "created_on": "2020-08-02 14:46:10",
    "title": "NeuralQA - API and Visual Interface for Extractive QA",
    "description": "A Usable Library for Question Answering on Large Datasets with BERT",
    "tag": "natural-language-processing"
  },
  {
    "id": 2032,
    "created_on": "2020-08-02 20:00:23",
    "title": "Object tracking in 75 lines of code",
    "description": "Object tracking is straightforward conceptually. And if you have a good detector, simple methods can be pretty effective.",
    "tag": "computer-vision"
  },
  {
    "id": 2033,
    "created_on": "2020-08-03 03:49:22",
    "title": "FARM: Framework for Adapting Representation Models",
    "description": "\ud83c\udfe1 Fast & easy transfer learning for NLP. Harvesting language models for the industry.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2034,
    "created_on": "2020-08-03 04:00:29",
    "title": "Finding Similar Documents with Transformers",
    "description": "How transformers can help us distill text documents into points in N-dimensional vector spaces.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2035,
    "created_on": "2020-08-04 02:49:24",
    "title": "Act - GitHub Actions locally",
    "description": "Run your GitHub Actions locally.",
    "tag": "mlops"
  },
  {
    "id": 2038,
    "created_on": "2020-08-04 03:53:36",
    "title": "Curated papers & articles on DS & ML in production",
    "description": "Learn how organizations & business solved machine learning problems, including problem statement, research, methodology, and results.",
    "tag": "mlops"
  },
  {
    "id": 2039,
    "created_on": "2020-08-04 16:45:09",
    "title": "Tensorflow2 Object Detection Tutorial",
    "description": "In this tutorial, we will be going step by step the complete training process of Tensorflow2 Object Detection. ",
    "tag": "computer-vision"
  },
  {
    "id": 2040,
    "created_on": "2020-08-04 18:00:56",
    "title": "A Barebones Image Retrieval System",
    "description": "This project presents a simple framework to retrieve images similar to a query image.",
    "tag": "computer-vision"
  },
  {
    "id": 2042,
    "created_on": "2020-08-05 02:07:24",
    "title": "ONNX T5",
    "description": "Summarization, translation, Q&A, text generation and more at blazing speed using a T5 version implemented in ONNX.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2043,
    "created_on": "2020-08-05 02:17:10",
    "title": "DeLighT: Very Deep and Light-weight Transformers",
    "description": "Similar or better performance than transformer-based models with significantly fewer parameters",
    "tag": "natural-language-processing"
  },
  {
    "id": 2045,
    "created_on": "2020-08-05 06:40:32",
    "title": "Evaluation Metrics For Information Retrieval",
    "description": "Learn about common metrics used to evaluate performance of information retrieval systems",
    "tag": "natural-language-processing"
  },
  {
    "id": 2047,
    "created_on": "2020-08-05 15:18:46",
    "title": "Test-Time Data Augmentation",
    "description": "Tutorial on how to properly implement test-time image data augmentation in a production environment with limited computational resources.",
    "tag": "mlops"
  },
  {
    "id": 2048,
    "created_on": "2020-08-05 16:50:22",
    "title": "SadedeGel: An extraction based Turkish news summarizer",
    "description": "\"Sadede Gel\" in Turkish, means \"cut to the chase\".  ",
    "tag": "natural-language-processing"
  },
  {
    "id": 2051,
    "created_on": "2020-08-05 20:13:51",
    "title": "MobyDick word frequency",
    "description": "Getting the count of the words in Moby Dick story using both web scraping and NLP",
    "tag": "natural-language-processing"
  },
  {
    "id": 2053,
    "created_on": "2020-08-05 20:30:33",
    "title": "Image Classification with Keras",
    "description": "Build a pipeline to train an image classifier in Keras and tune hyperparameters to optimize the performance of our classifier.",
    "tag": "computer-vision"
  },
  {
    "id": 2054,
    "created_on": "2020-08-05 20:34:09",
    "title": "Dropout in PyTorch \u2013 An Example",
    "description": "An example of adding Dropout to a PyTorch model, and observe the effect dropout has on the model's performance by tracking our models in Weights & Biases.",
    "tag": "computer-vision"
  },
  {
    "id": 2056,
    "created_on": "2020-08-06 00:30:49",
    "title": "Fast Sentence Embeddings (fse)",
    "description": "Fast Sentence Embeddings is a Python library that serves as an addition to Gensim.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2057,
    "created_on": "2020-08-06 04:06:11",
    "title": "Data Science Meets Devops: MLOps with Jupyter, Git, & Kubernetes",
    "description": "An end-to-end example of deploying a machine learning product using Jupyter, Papermill, Tekton, GitOps and Kubeflow.",
    "tag": "mlops"
  },
  {
    "id": 2061,
    "created_on": "2020-08-06 04:59:21",
    "title": "Detectron 2 Demo from Facebook",
    "description": "This Project contains the process of getting started with Facebook FAIR's detectron2 project on windows 10 without any Nvidia GPU.",
    "tag": "computer-vision"
  },
  {
    "id": 2062,
    "created_on": "2020-08-06 12:38:55",
    "title": "Predict Vehicle Speed From Dash Cam Video",
    "description": "A series of experiments attempting to predict vehicle speed from dash cam videos using optical flow and neural networks.",
    "tag": "computer-vision"
  },
  {
    "id": 2098,
    "created_on": "2020-08-06 23:15:45",
    "title": "Digital Image Processing in Python",
    "description": "Play around with pixel values with Python programming language.",
    "tag": "computer-vision"
  },
  {
    "id": 2100,
    "created_on": "2020-08-07 04:24:28",
    "title": "A 2020 guide to Semantic Segmentation",
    "description": "Concept of image segmentation, discuss the relevant use-cases, different neural network architectures involved in achieving the results, metrics and datasets.",
    "tag": "computer-vision"
  },
  {
    "id": 2106,
    "created_on": "2020-08-08 15:06:18",
    "title": "Fast NST for Videos (+ person segmentation) \ud83c\udfa5 + \u26a1\ud83d\udcbb + \ud83c\udfa8 = \u2764\ufe0f",
    "description": "Create NST videos and pick separate styles for the person in the video and for the background.",
    "tag": "computer-vision"
  },
  {
    "id": 2109,
    "created_on": "2020-08-09 07:24:57",
    "title": "Live demo : State-of-the-art MCQ Generator from any content",
    "description": "Demo for state-of-the-art MCQ (Multiple Choice Questions) generator from any content built using T5 transformer, HuggingFace, and Sense2vec\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 2111,
    "created_on": "2020-08-10 03:26:16",
    "title": "InvoiceNet",
    "description": "Deep neural network to extract intelligent information from PDF invoice documents.\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 2112,
    "created_on": "2020-08-10 03:41:31",
    "title": "Search for visual datasets",
    "description": "By task, application, class, label or format.",
    "tag": "computer-vision"
  },
  {
    "id": 2113,
    "created_on": "2020-08-10 04:01:03",
    "title": "GAN-BERT",
    "description": "Enhancing the BERT training with Semi-supervised Generative Adversarial Networks.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2114,
    "created_on": "2020-08-10 04:03:51",
    "title": "tsaug",
    "description": "A Python package for time series augmentation.",
    "tag": "time-series"
  },
  {
    "id": 2116,
    "created_on": "2020-08-10 04:15:38",
    "title": "Machine Learning Pipelines for Kubeflow.",
    "description": "Kubeflow pipelines are reusable end-to-end ML workflows built using the Kubeflow Pipelines SDK.",
    "tag": "mlops"
  },
  {
    "id": 2117,
    "created_on": "2020-08-10 04:17:57",
    "title": "Structuring Unit Tests in Python",
    "description": "Where to put tests, how to write fixtures and the awesomeness of test parametrization.",
    "tag": "mlops"
  },
  {
    "id": 2121,
    "created_on": "2020-08-10 21:59:41",
    "title": "DeepR \u2014 Training TensorFlow Models for Production",
    "description": "DeepR is a Python library to build complex pipelines as easily as possible on top of Tensorflow.",
    "tag": "mlops"
  },
  {
    "id": 2124,
    "created_on": "2020-08-11 00:20:42",
    "title": "Neural Architecture Search",
    "description": "A look at neural architecture search w.r.t search space, search algorithms and evolution strategies.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2131,
    "created_on": "2020-08-13 01:39:01",
    "title": "How to Trust Your Deep Learning Code",
    "description": "We will focus on how to write reusable unit tests, so that you \u201cDon\u2019t repeat yourself\u201d.",
    "tag": "mlops"
  },
  {
    "id": 2135,
    "created_on": "2020-08-13 01:52:06",
    "title": "Temporal Convolutional Networks for Time-Series",
    "description": "We introduce several novels using TCN, including improving traffic prediction, sound event localization & detection, and probabilistic forecasting.",
    "tag": "time-series"
  },
  {
    "id": 2136,
    "created_on": "2020-08-13 02:05:11",
    "title": "Machine Learning Deployment: Shadow Mode",
    "description": "\u201cHow do I test my new model in production?\u201d One answer, and a method I often employ when initially deploying models, is shadow mode.",
    "tag": "mlops"
  },
  {
    "id": 2137,
    "created_on": "2020-08-13 02:10:03",
    "title": "Unpopular Opinion - Data Scientists Should Be More End-to-End",
    "description": "I believe data scientists can be more effective by being end-to-end.",
    "tag": "mlops"
  },
  {
    "id": 2138,
    "created_on": "2020-08-13 18:12:46",
    "title": "Extract Stock Sentiment from News Headlines",
    "description": " In this project, you will generate investing insight by applying sentiment analysis on financial news headlines from Finviz. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 2141,
    "created_on": "2020-08-14 03:15:38",
    "title": "hloc - the hierarchical localization toolbox",
    "description": "Visual localization made easy.",
    "tag": "computer-vision"
  },
  {
    "id": 2147,
    "created_on": "2020-08-15 01:17:07",
    "title": "Practical Tips and Tricks for Successful Transfer Learning",
    "description": "Training models to learn knowledge and skills from other related tasks that will transfer and boost performance on tasks of interest.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2148,
    "created_on": "2020-08-15 01:22:01",
    "title": "txtai: AI-powered search engine",
    "description": "AI-powered search engine.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2151,
    "created_on": "2020-08-15 05:32:22",
    "title": "Drowsiness Detection System using OpenCV and Flask in Python ",
    "description": "This system provides an overview of a system that detects whether a person is drowsy while driving and if so, alerts him by using voice messages in real-time. ",
    "tag": "computer-vision"
  },
  {
    "id": 2155,
    "created_on": "2020-08-15 14:49:16",
    "title": "GPT-3, The model simply knows!",
    "description": "Brief Introduction about the gigantic GPT-3. a new leap in AI and Natural Language processing. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 2159,
    "created_on": "2020-08-16 01:02:18",
    "title": "Solaris",
    "description": "CosmiQ Works Geospatial Machine Learning Analysis Toolkit.",
    "tag": "computer-vision"
  },
  {
    "id": 2163,
    "created_on": "2020-08-17 03:19:46",
    "title": "Safe Space - Github Action",
    "description": "Github action that checks the toxicity level of comments and PR reviews to help make repos safe spaces.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2164,
    "created_on": "2020-08-17 03:24:46",
    "title": "Intro to Autoencoders",
    "description": "This tutorial introduces autoencoders with three examples: the basics, image denoising, and anomaly detection.",
    "tag": "computer-vision"
  },
  {
    "id": 2166,
    "created_on": "2020-08-17 05:19:41",
    "title": "Pix2Pix",
    "description": "Tensorflow 2.0 Implementation of the paper Image-to-Image Translation using Conditional GANs by Philip Isola, Jun-Yan Zhu, Tinghui Zhou and Alexei A. Efros.",
    "tag": "computer-vision"
  },
  {
    "id": 2167,
    "created_on": "2020-08-17 06:27:31",
    "title": "Insight",
    "description": "Project Insight is designed to create NLP as a service with code base for both front end GUI (streamlit) and backend server (FastAPI) the usage of transformers ",
    "tag": "natural-language-processing"
  },
  {
    "id": 2168,
    "created_on": "2020-08-17 10:55:43",
    "title": "Onceupon.space",
    "description": "NLP experiment in story-telling  that creates illustrations (text to sketch) and content (text generation)",
    "tag": "natural-language-processing"
  },
  {
    "id": 2172,
    "created_on": "2020-08-18 04:12:18",
    "title": "Compression of Deep Learning Models for Text: A Survey",
    "description": "In this survey, we discuss six different types of methods for compression of such models to enable their deployment in real industry NLP projects.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2173,
    "created_on": "2020-08-18 04:16:33",
    "title": "Fine-tuning with custom datasets",
    "description": "This tutorial will take you through several examples of using \ud83e\udd17 Transformers models with your own datasets.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2185,
    "created_on": "2020-08-18 23:12:27",
    "title": "Language Interpretability Tool (LIT)",
    "description": "The Language Interpretability Tool (LIT) is a visual, interactive model-understanding tool for NLP models.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2186,
    "created_on": "2020-08-18 23:24:41",
    "title": "AI in Medicine and Imaging - Stanford Symposium 2020",
    "description": "Through the AIMI Symposium we hope to address gaps and barriers in the field and catalyze more evidence-based solutions to improve health for all.",
    "tag": "computer-vision"
  },
  {
    "id": 2188,
    "created_on": "2020-08-19 15:16:46",
    "title": "Great Expectations",
    "description": "Always know what to expect from your data.",
    "tag": "mlops"
  },
  {
    "id": 2193,
    "created_on": "2020-08-20 00:39:05",
    "title": "Effective testing for machine learning systems",
    "description": "Why testing machine learning systems can be different, and discuss some strategies for writing effective tests for machine learning systems.",
    "tag": "mlops"
  },
  {
    "id": 2195,
    "created_on": "2020-08-20 20:45:52",
    "title": "Streamlit Terran Timeline",
    "description": "A face-recognition timeline generator tool for any kind of video!",
    "tag": "computer-vision"
  },
  {
    "id": 2199,
    "created_on": "2020-08-21 08:37:20",
    "title": "How to Set Up Continuous Integration for Machine Learning",
    "description": "How to Set Up Continuous Integration for Machine Learning with Github Actions and Neptune: Step by Step Guide.",
    "tag": "mlops"
  },
  {
    "id": 2200,
    "created_on": "2020-08-21 12:45:54",
    "title": "Bad passwords and the NIST guidelines",
    "description": "Example project provided by DataCamp. In this project, you will write code that  automatically detects and flags the bad passwords.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2202,
    "created_on": "2020-08-22 03:55:27",
    "title": "Graph Representation Learning Book",
    "description": "Introduction to graph representation learning, including methods for embedding graph data, graph neural networks, and deep generative models of graphs.",
    "tag": "graph-learning"
  },
  {
    "id": 2203,
    "created_on": "2020-08-22 05:58:20",
    "title": "Image Similarity Search in PyTorch",
    "description": "Simple Convolutional Auto-encoder based image similarity\r\nsearch to find similar images to given image or features.\r\nFully written in PyTorch.",
    "tag": "computer-vision"
  },
  {
    "id": 2204,
    "created_on": "2020-08-22 17:19:00",
    "title": "Tensorflow Object Detection with Tensorflow 2",
    "description": "Object Detection with Tensorflow 2 and the Tensorflow Object Detection API ",
    "tag": "computer-vision"
  },
  {
    "id": 2207,
    "created_on": "2020-08-23 04:38:45",
    "title": "Rules of Machine Learning: Best Practices for ML Engineering",
    "description": "A basic knowledge of machine learning get the benefit of best practices in machine learning from around Google.",
    "tag": "mlops"
  },
  {
    "id": 2214,
    "created_on": "2020-08-24 11:16:47",
    "title": "vedaseg",
    "description": "vedaseg is an open source semantic segmentation toolbox based on PyTorch.",
    "tag": "computer-vision"
  },
  {
    "id": 2215,
    "created_on": "2020-08-24 11:52:10",
    "title": "vedastr",
    "description": "vedastr is an open source scene text recognition toolbox based on PyTorch.",
    "tag": "computer-vision"
  },
  {
    "id": 2218,
    "created_on": "2020-08-25 13:57:49",
    "title": "CascadeTabNet",
    "description": "An approach for end-to-end table detection and structure recognition from image-based documents\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 2220,
    "created_on": "2020-08-25 16:13:31",
    "title": "Table Detection, Information Extraction and Structuring using ML",
    "description": "Table Extraction (TE) is the task of detecting and decomposing table information in a document.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2223,
    "created_on": "2020-08-26 04:21:37",
    "title": "AxCell",
    "description": "Automatic Extraction of Results from Machine Learning Papers",
    "tag": "computer-vision"
  },
  {
    "id": 2226,
    "created_on": "2020-08-27 01:54:16",
    "title": "Hyperparameter Optimization for \ud83e\udd17 Transformers: A Guide",
    "description": "Basic grid search is not the most optimal, and in fact, the hyperparameters we choose can have a significant impact on our final model performance.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2232,
    "created_on": "2020-08-27 11:00:34",
    "title": "GenRL",
    "description": "GenRL is a PyTorch-First Reinforcement Learning library centered around reproducible and generalizable algorithm implementations.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2235,
    "created_on": "2020-08-27 16:03:12",
    "title": "Shift-Ctrl-F: Semantic Search for the Browser",
    "description": "\ud83d\udd0e: Search the information available on a webpage using natural language instead of an exact string match.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2238,
    "created_on": "2020-08-28 01:24:08",
    "title": "Spinning Up in Deep RL (OpenAI)",
    "description": "An educational resource to help anyone learn deep reinforcement learning.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2239,
    "created_on": "2020-08-28 07:07:39",
    "title": "An Introduction to Adversarial Examples in Deep Learning",
    "description": "This report provides an intuitive introduction to adversarial examples, discusses a wide variety of different adversarial attacks and, most notably, provides ad",
    "tag": "computer-vision"
  },
  {
    "id": 2242,
    "created_on": "2020-08-29 08:10:21",
    "title": "Deep dive into ROI layer in Object Detection Models",
    "description": "In this blog post we will implement in torch ROI Pool and ROI Align models from scratch.",
    "tag": "computer-vision"
  },
  {
    "id": 2245,
    "created_on": "2020-08-30 02:51:07",
    "title": "On the Bottleneck of Graph Neural Networks and its Implications",
    "description": "The mechanism of propagating information between neighbors creates a bottleneck when every node aggregates messages from its neighbors.",
    "tag": "graph-learning"
  },
  {
    "id": 2246,
    "created_on": "2020-08-30 06:05:21",
    "title": "Questgen- An NLP library for state-of-the-art Question Generation",
    "description": "Questgen AI is an opensource, easy to use NLP library for Question generation. It can generate MCQs, Boolean (Yes/No), FAQs and also paraphrase any question.\r\n",
    "tag": "natural-language-processing"
  },
  {
    "id": 2247,
    "created_on": "2020-08-30 11:48:19",
    "title": "Unsupervised Keyphrase Extraction",
    "description": "Learn about unsupervised algorithms for automatically extracting representative keyword and phrases from documents",
    "tag": "natural-language-processing"
  },
  {
    "id": 2250,
    "created_on": "2020-08-31 09:20:55",
    "title": "Text Data Augmentation with MarianMT",
    "description": "Learn how to use machine translation models in Hugging Face Transformers for data augmentation.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2251,
    "created_on": "2020-08-31 10:05:12",
    "title": "Practical AI: Using NLP word embeddings to solve localization ",
    "description": "Using NLP word vectors (word2vec, glove, etc) in a novel way to solve the problem of localization in edtech.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2252,
    "created_on": "2020-08-31 23:40:26",
    "title": "Explore then Execute",
    "description": "Adapting without Rewards via Factorized Meta-Reinforcement Learning",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2255,
    "created_on": "2020-09-01 04:49:38",
    "title": "Tensorflow, Pytorch, Transformer, Fastai, etc. Tutorials",
    "description": "BERT Classification, Question Answering, Seq2Seq Machine Translation, Contextual Topic Modeling, Large Scale Multilabelclassification, etc",
    "tag": "natural-language-processing"
  },
  {
    "id": 2258,
    "created_on": "2020-09-02 09:05:08",
    "title": "Graph Convolutions for dummies",
    "description": "An article explaining Graph Convolutional Networks as simply as possible.",
    "tag": "graph-learning"
  },
  {
    "id": 2259,
    "created_on": "2020-09-02 23:08:03",
    "title": "ECCV 2020: Some Highlights",
    "description": "A sort of a snapshot of the conference by summarizing some papers (& listing some) that grabbed my attention.",
    "tag": "computer-vision"
  },
  {
    "id": 2260,
    "created_on": "2020-09-02 23:13:20",
    "title": "CVPR 2020: A Snapshot",
    "description": "A snapshot of the conference by summarizing some papers (& listing some) that grabbed my attention.",
    "tag": "computer-vision"
  },
  {
    "id": 2262,
    "created_on": "2020-09-03 12:10:24",
    "title": "R.U.Stoked",
    "description": "NLP (Sentiment Analysis) project to demonstrate a pipeline of data from the very first stage of data collection through ML model deployment.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2263,
    "created_on": "2020-09-03 23:05:32",
    "title": "TTT: Fine-tuning Transformers with TPUs or GPUs acceleration",
    "description": "TTT is short for a package for fine-tuning \ud83e\udd17 Transformers with TPUs, written in Tensorflow2.0+.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2264,
    "created_on": "2020-09-04 01:24:22",
    "title": "MushroomRL",
    "description": "Python library for Reinforcement Learning.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2266,
    "created_on": "2020-09-04 01:42:26",
    "title": "Wav2Lip: Accurately Lip-syncing Videos In The Wild",
    "description": "A Lip Sync Expert Is All You Need for Speech to Lip Generation In the Wild",
    "tag": "computer-vision"
  },
  {
    "id": 2267,
    "created_on": "2020-09-04 02:50:39",
    "title": "What Is MLOps?",
    "description": "Machine learning operations, MLOps, are best practices for businesses to run AI successfully with help from an expanding software products and cloud services.",
    "tag": "mlops"
  },
  {
    "id": 2268,
    "created_on": "2020-09-05 01:06:07",
    "title": "NLP Course | For You",
    "description": "This is an extension to the (ML for) Natural Language Processing course I teach at the Yandex School of Data Analysis (YSDA) since fall 2018. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 2269,
    "created_on": "2020-09-05 01:09:06",
    "title": "Learning to Summarize with Human Feedback",
    "description": "Human feedback models outperform much larger supervised models and reference summaries on TL;DR",
    "tag": "natural-language-processing"
  },
  {
    "id": 2271,
    "created_on": "2020-09-05 07:10:06",
    "title": "Latest advancements in video streaming with AI",
    "description": "AI developments in video streaming using Super-resolution, Per-title encoding, P2P",
    "tag": "computer-vision"
  },
  {
    "id": 2273,
    "created_on": "2020-09-05 18:22:44",
    "title": "ONNX Transformers",
    "description": "Accelerated NLP pipelines for fast inference \ud83d\ude80 on CPU. Built with \ud83e\udd17 Transformers and ONNX runtime.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2275,
    "created_on": "2020-09-06 07:26:21",
    "title": "hugdatafast: huggingface/nlp + fastai",
    "description": "The elegant integration of huggingface/nlp and fastai2 and handy transforms using pure huggingface/nlp ",
    "tag": "natural-language-processing"
  },
  {
    "id": 2280,
    "created_on": "2020-09-06 18:59:46",
    "title": "Top 10 Deep Learning Breakthroughs \u2014 Deep Reinforcement Learning",
    "description": "The article unravels the journey behind reaching the point when Reinforcement Learning combined with Deep Learning defeated a Go player world champion.",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2283,
    "created_on": "2020-09-07 07:13:04",
    "title": "Data analysis made easy: Text2Code for Jupyter notebook",
    "description": "A jupyter notebook extension for Text2Code for basic pandas and plotly commands",
    "tag": "natural-language-processing"
  },
  {
    "id": 2284,
    "created_on": "2020-09-07 10:42:32",
    "title": "electra_pytorch:  ELECTRA in PyTorch (fastai + huggingface)",
    "description": "Unofficial reimplementation of <ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators>",
    "tag": "natural-language-processing"
  },
  {
    "id": 2285,
    "created_on": "2020-09-07 13:36:55",
    "title": "Images of radio boxes",
    "description": "I have collected about 15+k raw images of radio boxes across 500+ forms and hand-picked 200+  images that can be used to determine if a radio box is checked.",
    "tag": "computer-vision"
  },
  {
    "id": 2287,
    "created_on": "2020-09-07 20:56:51",
    "title": "omega|ml - building and deploying ML models the easy way",
    "description": "Deploying  ML is hard. It should not be. omega|ml makes it a breeze.",
    "tag": "mlops"
  },
  {
    "id": 2289,
    "created_on": "2020-09-08 04:12:41",
    "title": "ElasticTransformers",
    "description": "Making BERT stretchy. Semantic Elasticsearch with Sentence Transformers.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2290,
    "created_on": "2020-09-09 00:16:32",
    "title": "Fine-tune a non-English GPT-2 Model with Huggingface",
    "description": " In this tutorial, we are going to use the transformers library by Huggingface. We will use the new Trainer class and fine-tune out GPT-2 model.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2294,
    "created_on": "2020-09-09 16:14:37",
    "title": "Getting started with large-scale ETL jobs using Dask and AWS EMR",
    "description": "EMR is AWS\u2019s distributed data platform, which we can interact with and submit jobs to from a JupyterLab notebook running on our local machine.",
    "tag": "mlops"
  },
  {
    "id": 2295,
    "created_on": "2020-09-09 16:36:45",
    "title": "How to Create a Cartoonizer with TensorFlow Lite?",
    "description": "An end-to-end tutorial on how to convert to TensorFlow Lite (TFLite) model and deploy it to an Android app for cartoonizing an image captured by camera.",
    "tag": "computer-vision"
  },
  {
    "id": 2296,
    "created_on": "2020-09-10 01:15:57",
    "title": "How to Test Machine Learning Code and Systems",
    "description": "\ud83d\udea6 Minimal examples of testing machine learning for correct implementation, expected learned behaviour, and model performance.\r\n\r\n",
    "tag": "mlops"
  },
  {
    "id": 2298,
    "created_on": "2020-09-11 00:02:10",
    "title": "torchCDE",
    "description": "Differentiable controlled differential equation solvers for PyTorch with GPU support and memory-efficient adjoint backpropagation.",
    "tag": "time-series"
  },
  {
    "id": 2299,
    "created_on": "2020-09-11 00:07:11",
    "title": "Latent graph neural networks: Manifold learning 2.0?",
    "description": "Parallels between recent works on latent graph learning and older techniques of manifold learning.",
    "tag": "graph-learning"
  },
  {
    "id": 2300,
    "created_on": "2020-09-11 00:11:14",
    "title": "Real Python Recommendation Engine",
    "description": "A full stack data science project that performs document similarity on RealPython.com content. Content recommendations are implemented via a Chrome extension.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2304,
    "created_on": "2020-09-11 17:54:04",
    "title": "Graph Neural Networks",
    "description": "A descriptive guide for Graph Neural Networks.",
    "tag": "graph-learning"
  },
  {
    "id": 2310,
    "created_on": "2020-09-12 12:33:20",
    "title": "Image Super-Resolution",
    "description": "In this project we learn how to train a super-resolution model ESPCN on DIV2K dataset to upscale images using AI by 3x",
    "tag": "computer-vision"
  },
  {
    "id": 2312,
    "created_on": "2020-09-12 22:33:56",
    "title": "Codequestion",
    "description": "Ask coding questions directly from the terminal.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2317,
    "created_on": "2020-09-14 05:32:45",
    "title": "End-to-end Object Detection in TensorFlow Lite",
    "description": "This project shows how to train a custom detection model with the TFOD API, optimize it with TFLite, and perform inference with the optimized model.",
    "tag": "computer-vision"
  },
  {
    "id": 2318,
    "created_on": "2020-09-14 11:55:33",
    "title": "Jepto - Digital Marketing Analytics",
    "description": "KPI Prediction and Anomaly Detection of digital marketing data for both technical and non-technical marketers and business owners.",
    "tag": "time-series"
  },
  {
    "id": 2319,
    "created_on": "2020-09-14 19:21:33",
    "title": "Cartoonizer with TensorFlow.js",
    "description": "An app to turn your photos into cartoon-styled images \ud83c\udfa8 within your browsers using White-box Cartoonization GAN.",
    "tag": "computer-vision"
  },
  {
    "id": 2325,
    "created_on": "2020-09-16 13:43:20",
    "title": "Implementing Content-Based Image Retrieval with Siamese Networks",
    "description": "With content-based image retrieval, we refer to the task of finding images containing attributes which are not in the image metadata, but in its visual content.",
    "tag": "computer-vision"
  },
  {
    "id": 2326,
    "created_on": "2020-09-17 00:18:51",
    "title": "NLP for Developers: Multilingual NLP | Rasa",
    "description": "In this video, Rasa Developer Advocate Rachael will talk about common approaches to handle language input in more than one language.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2327,
    "created_on": "2020-09-17 15:36:45",
    "title": "Paint with Machine Learning",
    "description": "This web app allows you to create a landscape painting in the style of Bob Ross using a deep learning model served using a Spell model server.",
    "tag": "computer-vision"
  },
  {
    "id": 2328,
    "created_on": "2020-09-17 16:04:29",
    "title": "Distilling Knowledge in Neural Networks",
    "description": "This project demonstrates the compelling model optimization technique - knowledge distillation with code walkthroughs in TensorFlow. ",
    "tag": "computer-vision"
  },
  {
    "id": 2332,
    "created_on": "2020-09-18 08:49:55",
    "title": "Recurrent Neural Networks: building GRU cells VS LSTM cells ",
    "description": "What are the advantages of RNN\u2019s over transformers? When to use GRU\u2019s over LSTM? What are the equations of GRU really mean? How to build a GRU cell in Pytorch?",
    "tag": "natural-language-processing"
  },
  {
    "id": 2336,
    "created_on": "2020-09-19 08:40:37",
    "title": "G-SimCLR",
    "description": "TensorFlow implementation of G-SimCLR. ",
    "tag": "computer-vision"
  },
  {
    "id": 2339,
    "created_on": "2020-09-19 11:17:48",
    "title": "Neural CDEs for Long Time-Series via the Log-ODE Method",
    "description": "NCDEs for Long Time-Series via the Log-ODE Method.",
    "tag": "time-series"
  },
  {
    "id": 2341,
    "created_on": "2020-09-20 00:34:03",
    "title": "PyTorch Forecasting",
    "description": "Time series forecasting with PyTorch.",
    "tag": "time-series"
  },
  {
    "id": 2342,
    "created_on": "2020-09-20 03:24:58",
    "title": "Norfair",
    "description": "Lightweight Python library for adding real-time 2D object tracking to any detector.",
    "tag": "computer-vision"
  },
  {
    "id": 2344,
    "created_on": "2020-09-21 00:20:00",
    "title": "Labelai",
    "description": "Labelai is an online tool designed to label images, useful for training AI models.",
    "tag": "computer-vision"
  },
  {
    "id": 2345,
    "created_on": "2020-09-21 00:26:02",
    "title": "Remo",
    "description": "\ud83d\udc30 Python lib for remo - the app for annotations and images management in Computer Vision.",
    "tag": "computer-vision"
  },
  {
    "id": 2348,
    "created_on": "2020-09-21 23:47:06",
    "title": "Layered Neural Rendering for Retiming People in Video",
    "description": "Manipulating and editing the time in which different motions of individuals in the video occur.",
    "tag": "computer-vision"
  },
  {
    "id": 2350,
    "created_on": "2020-09-22 03:07:29",
    "title": "Part 1: Deep Representations, a way towards neural style transfer",
    "description": "A top down approach to conceiving neural style transfer",
    "tag": "computer-vision"
  },
  {
    "id": 2351,
    "created_on": "2020-09-22 03:42:58",
    "title": "Simple Transformers: Transformers Made Easy",
    "description": "Simple Transformers removes complexity and lets you get down to what matters \u2013 model training and experimenting with the Transformer model architectures.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2353,
    "created_on": "2020-09-22 13:04:04",
    "title": "TF Geometric",
    "description": "Efficient and Friendly Graph Neural Network Library for TensorFlow 1.x and 2.x.",
    "tag": "graph-learning"
  },
  {
    "id": 2356,
    "created_on": "2020-09-23 04:56:15",
    "title": "Part 2: Deep Representations, a way towards neural style transfer",
    "description": "A top-down approach to conceiving neural style transfer",
    "tag": "computer-vision"
  },
  {
    "id": 2357,
    "created_on": "2020-09-23 10:27:15",
    "title": "Sudoku Solver",
    "description": "Solving Sudoku by extracting the puzzle from photo using Computer Vision and OCR and solving it.",
    "tag": "computer-vision"
  },
  {
    "id": 2360,
    "created_on": "2020-09-23 13:56:29",
    "title": "3D Face: Fast, Accurate and Stable Reconstruction",
    "description": "This work extends the previous work 3DDFA, named 3DDFA_V2, titled Towards Fast, Accurate and Stable 3D Dense Face Alignment, accepted by ECCV 2020. ",
    "tag": "computer-vision"
  },
  {
    "id": 2366,
    "created_on": "2020-09-25 02:26:00",
    "title": "Help-Me-Read: Text Summarization using Flask and HuggingFace.",
    "description": "Text summarization, translation and Questions Answers generation using HuggingFace and deployed using Flask, Streamlit. Detailed guide on github. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 2367,
    "created_on": "2020-09-25 07:39:43",
    "title": "Interactive Analysis of Sentence Embeddings",
    "description": "Learn how to interactively explore sentence embedding and labels in Tensorflow Embedding Projector.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2368,
    "created_on": "2020-09-25 07:47:27",
    "title": "TableQA",
    "description": "AI tool for querying  natural language on tabular data like csvs and other dataframes.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2369,
    "created_on": "2020-09-25 15:44:08",
    "title": "GP-GAN: Towards Realistic High-Resolution Image Blending",
    "description": "Blending composite images using a generative model and a Gaussian-Poisson equation with a Laplacian Pyramid",
    "tag": "computer-vision"
  },
  {
    "id": 2371,
    "created_on": "2020-09-25 18:10:13",
    "title": "From Research to Production with Deep Semi-Supervised Learning",
    "description": "Semi-Supervised Learning (SSL) has blossomed in the deep learning research community\u200a\u2014\u200awe share lessons learned over 15 months of taking SSL into production.",
    "tag": "mlops"
  },
  {
    "id": 2372,
    "created_on": "2020-09-25 18:39:59",
    "title": " A spaced repetition app for keeping your reinforcement learning",
    "description": "We aim to keep your reinforcement learning knowledge fresh by periodically reminding you of concepts making you a master of RL knowledge!!",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2373,
    "created_on": "2020-09-25 22:41:22",
    "title": "GraphNorm",
    "description": "A Principled Approach to Accelerating Graph Neural Network Training.",
    "tag": "graph-learning"
  },
  {
    "id": 2384,
    "created_on": "2020-09-27 08:42:46",
    "title": "Intro to Facebook Prophet",
    "description": "Everything you need to know when starting out with Facebook\u2019s time series forecasting tool",
    "tag": "time-series"
  },
  {
    "id": 2387,
    "created_on": "2020-09-27 14:22:51",
    "title": "GitHub Actions for Machine Learning",
    "description": "This presentation discusses the use of GitHub Actions to automate certain steps of a toy ML project. ",
    "tag": "mlops"
  },
  {
    "id": 2388,
    "created_on": "2020-09-27 22:09:32",
    "title": "SemTorch",
    "description": "Different deep learning architectures definitions that can be applied to image segmentation.",
    "tag": "computer-vision"
  },
  {
    "id": 2389,
    "created_on": "2020-09-28 05:34:15",
    "title": "bingoset - CLI tool  to create image dataset.",
    "description": "CLI Toolkit to quickly create an image dataset using Bing Image Search API.",
    "tag": "computer-vision"
  },
  {
    "id": 2390,
    "created_on": "2020-09-28 05:46:03",
    "title": "mini-pokedex end to end tutorial  -  Gotta classify 'em all!",
    "description": "Build a Pokemon image classifier to classify the awesome starters Pikachu, Charmander, Squirtle, and Bulbasaur.",
    "tag": "computer-vision"
  },
  {
    "id": 2394,
    "created_on": "2020-09-28 22:46:36",
    "title": "Why Data Quality is Key to Successful ML Ops",
    "description": "A look at ML Ops and highlight how and why data quality is key to ML Ops workflows.",
    "tag": "mlops"
  },
  {
    "id": 2395,
    "created_on": "2020-09-28 22:51:23",
    "title": "Python caching in GitHub Actions",
    "description": "How to speed up slow Python builds in GitHub Actions with effective caching.",
    "tag": "mlops"
  },
  {
    "id": 2396,
    "created_on": "2020-09-29 00:36:12",
    "title": "EfficientDet meets Pytorch Lightning",
    "description": "Beginner friendly guide to object detection using EfficientDet.",
    "tag": "computer-vision"
  },
  {
    "id": 2397,
    "created_on": "2020-09-29 02:15:46",
    "title": "Optimizing MobileDet for Mobile Deployments",
    "description": "Learn about the criticalities of effectively optimizing MobileDet object detectors for mobile deployments.",
    "tag": "computer-vision"
  },
  {
    "id": 2402,
    "created_on": "2020-09-30 22:11:07",
    "title": "Adapting Text Augmentation to Industry Problems",
    "description": "In this post I will talk about the recent advances in exploiting language models for data generation and also show how, where we can implement them in Industry.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2403,
    "created_on": "2020-09-30 22:15:07",
    "title": "Easy Data Augmentation (EDA)",
    "description": "Easy Data Augmentation Techniques for Boosting Performance on Text Classification Tasks",
    "tag": "natural-language-processing"
  },
  {
    "id": 2404,
    "created_on": "2020-09-30 22:22:07",
    "title": "12 Factors of Reproducible Machine Learning in Production",
    "description": "We took our experience to deduce 12 factors (as a nod to the 12 factor app) that build the backbone of successful ML in production.",
    "tag": "mlops"
  },
  {
    "id": 2410,
    "created_on": "2020-10-01 13:42:23",
    "title": "Serving PyTorch models in production with the Amazon SageMaker",
    "description": "TorchServe is now natively supported in Amazon SageMaker as the default model server for PyTorch inference. ",
    "tag": "mlops"
  },
  {
    "id": 2411,
    "created_on": "2020-10-01 14:55:12",
    "title": "How to Make Sense of the Reinforcement Learning Agents?",
    "description": "What and Why I Log During Training and Debug?",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2412,
    "created_on": "2020-10-01 18:50:05",
    "title": "Introduction to 3D Medical Imaging: Preprocessing & Augmentations",
    "description": "Learn how to apply 3D transformations for medical image preprocessing and augmentation, to setup your awesome deep learning pipeline.",
    "tag": "computer-vision"
  },
  {
    "id": 2413,
    "created_on": "2020-10-01 23:50:04",
    "title": "Keeping Data Pipelines healthy w/ Great Expectations GH Actions",
    "description": "We show you how you can use GitHub Actions together with the open source project Great Expectations to automatically test, document, and profile data pipelines.",
    "tag": "mlops"
  },
  {
    "id": 2415,
    "created_on": "2020-10-01 23:55:36",
    "title": "Explainable ML Monitoring",
    "description": "The video covers an overview of some of the risks of AI, the need for explainable monitoring, and what exactly we mean when we talk about it.",
    "tag": "mlops"
  },
  {
    "id": 2417,
    "created_on": "2020-10-02 09:44:25",
    "title": "Parallelizing Prophet Cross-Validation with Dask",
    "description": "Applied Example w/ Code",
    "tag": "time-series"
  },
  {
    "id": 2418,
    "created_on": "2020-10-02 10:16:17",
    "title": "Top Research Papers from the ECML-PKDD 2020 Conference",
    "description": "ECML-PKDD -> selectionof the best reaesch papers",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2419,
    "created_on": "2020-10-02 15:37:27",
    "title": "GANs in Computer Vision Free Ebook / Article-series",
    "description": "This free ebook/article-series follows the chronological order of 20 peer-reviewed highly-cited papers as they presented in a series of 6 articles.",
    "tag": "computer-vision"
  },
  {
    "id": 2422,
    "created_on": "2020-10-02 21:48:21",
    "title": "Pattern-Exploiting Training (PET)",
    "description": "This repository contains the code for \"Exploiting Cloze Questions for Few-Shot Text Classification and Natural Language Inference\"",
    "tag": "natural-language-processing"
  },
  {
    "id": 2423,
    "created_on": "2020-10-03 20:27:36",
    "title": "Imaginaire",
    "description": "NVIDIA PyTorch GAN library with distributed and mixed precision support.",
    "tag": "computer-vision"
  },
  {
    "id": 2428,
    "created_on": "2020-10-05 02:09:23",
    "title": "Efficient Transformers: A Survey",
    "description": "Characterizes a large and thoughtful selection of recent efficiency-flavored \"X-former\" models.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2429,
    "created_on": "2020-10-05 02:16:34",
    "title": "Meta-learning for Few-shot Natural Language Processing: A Survey",
    "description": "Clear definitions, progress summary and some common datasets of applying meta-learning to few-shot NLP.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2430,
    "created_on": "2020-10-05 10:09:28",
    "title": "Transection: Transformers for English to Chinese Translation \u57fa\u4e8et",
    "description": "Tutorials on how to fine-tune a BART based transformer for English to Chinese translation.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2431,
    "created_on": "2020-10-05 12:36:02",
    "title": "A Survey of the State of Explainable AI for NLP",
    "description": "Overview of the operations and explainability techniques currently available for generating explanations for NLP model predictions.",
    "tag": "natural-language-processing"
  },
  {
    "id": 2432,
    "created_on": "2020-10-05 13:09:58",
    "title": "Topic Modeling with BERT",
    "description": "Leveraging \ud83e\udd17 Transformers and a class-based TF-IDF to create dense clusters allowing for easily interpretable topics. ",
    "tag": "natural-language-processing"
  },
  {
    "id": 2434,
    "created_on": "2020-10-06 02:13:01",
    "title": "OpenMMLab Computer Vision",
    "description": "MMCV is a python library for CV research and supports many research projects such as object detection, segmentation, pose estimation, action classification.\r\n\r\n",
    "tag": "computer-vision"
  },
  {
    "id": 2436,
    "created_on": "2020-10-06 13:29:44",
    "title": "Machine Learning Methods Explained (+ Examples)",
    "description": "Most common techniques used in data science projects; get to know them through easy-to-understand examples and put them into practice in your own ML projects!",
    "tag": "reinforcement-learning"
  },
  {
    "id": 2437,
    "created_on": "2020-10-06 14:53:39",
    "title": "Rasoee",
    "description": "A powerful web and mobile application that identifies food dishes from a given input image, and provides an ingredient list along with relevant recipes.",
    "tag": "computer-vision"
  }
]